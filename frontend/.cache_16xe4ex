[{"/Users/jshandel/odh-dashboard/frontend/src/SDKInitialize.tsx":"1","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockClusterSettings.ts":"2","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockDashboardConfig.ts":"3","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockDocs.ts":"4","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockEnabledApplications.ts":"5","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockExploreApplications.ts":"6","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockGettingStartedDoc.ts":"7","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockInferenceServiceK8sResource.ts":"8","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockK8sResourceList.ts":"9","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockNotebookK8sResource.ts":"10","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockPVCK8sResource.ts":"11","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockPodK8sResource.ts":"12","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockProjectK8sResource.ts":"13","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockRouteK8sResource.ts":"14","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockSecretK8sResource.ts":"15","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockServingRuntimeK8sResource.ts":"16","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockServingRuntimeTemplateK8sResource.ts":"17","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockStatus.ts":"18","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockUtils.ts":"19","/Users/jshandel/odh-dashboard/frontend/src/__tests__/dockerRepositoryURL.spec.ts":"20","/Users/jshandel/odh-dashboard/frontend/src/__tests__/e2e/CreateEditDeleteProject.spec.ts":"21","/Users/jshandel/odh-dashboard/frontend/src/__tests__/e2e/const.ts":"22","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/TestHook.tsx":"23","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/useFetchState.spec.ts":"24","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/useFetchState.stories.tsx":"25","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/clusterSettings/ClusterSettings.spec.ts":"26","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/clusterSettings/ClusterSettings.stories.tsx":"27","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ModelServingGlobal.spec.ts":"28","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ModelServingGlobal.stories.tsx":"29","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ServingRuntimeList.spec.ts":"30","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ServingRuntimeList.stories.tsx":"31","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectDetails.spec.ts":"32","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectDetails.stories.tsx":"33","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectView.spec.ts":"34","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectView.stories.tsx":"35","/Users/jshandel/odh-dashboard/frontend/src/__tests__/unit/notebookControllerUtils.spec.ts":"36","/Users/jshandel/odh-dashboard/frontend/src/api/apiMergeUtils.ts":"37","/Users/jshandel/odh-dashboard/frontend/src/api/errorUtils.ts":"38","/Users/jshandel/odh-dashboard/frontend/src/api/index.ts":"39","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/builds.ts":"40","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/configMaps.ts":"41","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/dashboardConfig.ts":"42","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/events.ts":"43","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/groups.ts":"44","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/imageStreams.ts":"45","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/inferenceServices.ts":"46","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/notebooks.ts":"47","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/pods.ts":"48","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/projects.ts":"49","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/pvcs.ts":"50","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/roleBindings.ts":"51","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/routes.ts":"52","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/secrets.ts":"53","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/serviceAccounts.ts":"54","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/servingRuntimes.ts":"55","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/templates.ts":"56","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/users.ts":"57","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/utils.ts":"58","/Users/jshandel/odh-dashboard/frontend/src/api/models/index.ts":"59","/Users/jshandel/odh-dashboard/frontend/src/api/models/k8s.ts":"60","/Users/jshandel/odh-dashboard/frontend/src/api/models/odh.ts":"61","/Users/jshandel/odh-dashboard/frontend/src/api/models/openShift.ts":"62","/Users/jshandel/odh-dashboard/frontend/src/api/models/pipelines.ts":"63","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/callTypes.ts":"64","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/custom.ts":"65","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/errorUtils.ts":"66","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/k8s.ts":"67","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/pvcs.ts":"68","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/serving.ts":"69","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/usePrometheusQuery.ts":"70","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/usePrometheusQueryRange.ts":"71","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/useQueryRangeResourceData.ts":"72","/Users/jshandel/odh-dashboard/frontend/src/api/proxyUtils.ts":"73","/Users/jshandel/odh-dashboard/frontend/src/api/useAccessReview.ts":"74","/Users/jshandel/odh-dashboard/frontend/src/app/App.tsx":"75","/Users/jshandel/odh-dashboard/frontend/src/app/AppContext.ts":"76","/Users/jshandel/odh-dashboard/frontend/src/app/AppLauncher.tsx":"77","/Users/jshandel/odh-dashboard/frontend/src/app/AppNotificationDrawer.tsx":"78","/Users/jshandel/odh-dashboard/frontend/src/app/AppRoutes.tsx":"79","/Users/jshandel/odh-dashboard/frontend/src/app/Header.tsx":"80","/Users/jshandel/odh-dashboard/frontend/src/app/HeaderTools.tsx":"81","/Users/jshandel/odh-dashboard/frontend/src/app/NavSidebar.tsx":"82","/Users/jshandel/odh-dashboard/frontend/src/app/QuickStarts.tsx":"83","/Users/jshandel/odh-dashboard/frontend/src/app/TelemetrySetup.tsx":"84","/Users/jshandel/odh-dashboard/frontend/src/app/appUtils.ts":"85","/Users/jshandel/odh-dashboard/frontend/src/app/useApplicationSettings.tsx":"86","/Users/jshandel/odh-dashboard/frontend/src/app/useTimeBasedRefresh.ts":"87","/Users/jshandel/odh-dashboard/frontend/src/components/BrandImage.tsx":"88","/Users/jshandel/odh-dashboard/frontend/src/components/CPUField.tsx":"89","/Users/jshandel/odh-dashboard/frontend/src/components/DocCardBadges.tsx":"90","/Users/jshandel/odh-dashboard/frontend/src/components/EmptyStateErrorMessage.tsx":"91","/Users/jshandel/odh-dashboard/frontend/src/components/ExternalLink.tsx":"92","/Users/jshandel/odh-dashboard/frontend/src/components/FavoriteButton.tsx":"93","/Users/jshandel/odh-dashboard/frontend/src/components/FieldList.tsx":"94","/Users/jshandel/odh-dashboard/frontend/src/components/FilterSidePanelCategoryItem.tsx":"95","/Users/jshandel/odh-dashboard/frontend/src/components/FormGroupSettings.tsx":"96","/Users/jshandel/odh-dashboard/frontend/src/components/GenericSidebar.tsx":"97","/Users/jshandel/odh-dashboard/frontend/src/components/MarkdownView.tsx":"98","/Users/jshandel/odh-dashboard/frontend/src/components/MemoryField.tsx":"99","/Users/jshandel/odh-dashboard/frontend/src/components/MultiSelection.tsx":"100","/Users/jshandel/odh-dashboard/frontend/src/components/NumberInputWrapper.tsx":"101","/Users/jshandel/odh-dashboard/frontend/src/components/OdhAppCard.tsx":"102","/Users/jshandel/odh-dashboard/frontend/src/components/OdhDocCard.tsx":"103","/Users/jshandel/odh-dashboard/frontend/src/components/OdhDocListItem.tsx":"104","/Users/jshandel/odh-dashboard/frontend/src/components/OdhExploreCard.tsx":"105","/Users/jshandel/odh-dashboard/frontend/src/components/OdhExploreCardTypeBadge.tsx":"106","/Users/jshandel/odh-dashboard/frontend/src/components/PasswordHiddenText.tsx":"107","/Users/jshandel/odh-dashboard/frontend/src/components/ResourceNameTooltip.tsx":"108","/Users/jshandel/odh-dashboard/frontend/src/components/ScrollViewOnMount.tsx":"109","/Users/jshandel/odh-dashboard/frontend/src/components/SettingSection.tsx":"110","/Users/jshandel/odh-dashboard/frontend/src/components/SimpleDropdownSelect.tsx":"111","/Users/jshandel/odh-dashboard/frontend/src/components/SimpleMenuActions.tsx":"112","/Users/jshandel/odh-dashboard/frontend/src/components/SupportedAppTitle.tsx":"113","/Users/jshandel/odh-dashboard/frontend/src/components/ToastNotification.tsx":"114","/Users/jshandel/odh-dashboard/frontend/src/components/ToastNotifications.tsx":"115","/Users/jshandel/odh-dashboard/frontend/src/components/ValueUnitField.tsx":"116","/Users/jshandel/odh-dashboard/frontend/src/components/browserStorage/BrowserStorageContext.tsx":"117","/Users/jshandel/odh-dashboard/frontend/src/components/browserStorage/index.ts":"118","/Users/jshandel/odh-dashboard/frontend/src/components/dateRange/DateRange.tsx":"119","/Users/jshandel/odh-dashboard/frontend/src/components/dateRange/utils.ts":"120","/Users/jshandel/odh-dashboard/frontend/src/components/table/CheckboxTd.tsx":"121","/Users/jshandel/odh-dashboard/frontend/src/components/table/Table.tsx":"122","/Users/jshandel/odh-dashboard/frontend/src/components/table/TableRowTitleDescription.tsx":"123","/Users/jshandel/odh-dashboard/frontend/src/components/table/const.ts":"124","/Users/jshandel/odh-dashboard/frontend/src/components/table/useCheckboxTable.ts":"125","/Users/jshandel/odh-dashboard/frontend/src/components/table/useTableColumnSort.ts":"126","/Users/jshandel/odh-dashboard/frontend/src/components/useQuickStartCardSelected.ts":"127","/Users/jshandel/odh-dashboard/frontend/src/concepts/dashboard/DashboardModalFooter.tsx":"128","/Users/jshandel/odh-dashboard/frontend/src/concepts/dashboard/codeEditor/DashboardCodeEditor.tsx":"129","/Users/jshandel/odh-dashboard/frontend/src/concepts/k8s/NameDescriptionField.tsx":"130","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/EnsureAPIAvailability.tsx":"131","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/NoPipelineServer.tsx":"132","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/useExperiements.ts":"133","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/useExperimentById.ts":"134","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineById.ts":"135","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunById.ts":"136","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunJobById.ts":"137","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunJobs.ts":"138","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRuns.ts":"139","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunsForPipeline.ts":"140","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineTemplate.ts":"141","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelines.ts":"142","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/const.ts":"143","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/DeletePipelineCoreResourceModal.tsx":"144","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/DeletePipelineServerModal.tsx":"145","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/ViewPipelineServerModal.tsx":"146","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/ConfigurePipelinesServerModal.tsx":"147","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/DatabaseConnectionField.tsx":"148","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/DatabaseConnectionInputField.tsx":"149","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/ObjectStorageSection.tsx":"150","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/PipelinesDatabaseSection.tsx":"151","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/const.ts":"152","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/types.ts":"153","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/utils.ts":"154","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/CloneRunPage.tsx":"155","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/CreateRunPage.tsx":"156","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunForm.tsx":"157","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunPage.tsx":"158","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunPageFooter.tsx":"159","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/const.ts":"160","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/EndDateBeforeStartDateError.tsx":"161","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/ExperimentSection.tsx":"162","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/ParamsSection.tsx":"163","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/PipelineSection.tsx":"164","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSection.tsx":"165","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSectionDateTime.tsx":"166","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSectionScheduled.tsx":"167","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/submitUtils.ts":"168","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/types.ts":"169","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/useCloneRunData.ts":"170","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/useRunFormData.ts":"171","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/utils.ts":"172","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/experiment/ManageExperimentModal.tsx":"173","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/experiment/useCreateExperimentData.ts":"174","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/ImportPipelineButton.tsx":"175","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/PipelineFileUpload.tsx":"176","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/PipelineImportModal.tsx":"177","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/useImportModalData.ts":"178","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/PipelineDetailsYAML.tsx":"179","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/PipelineTopologyEmpty.tsx":"180","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineDetails.tsx":"181","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineDetailsActions.tsx":"182","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineNotFound.tsx":"183","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineTaskDetails.tsx":"184","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/SelectedTaskDrawerContent.tsx":"185","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDetails.tsx":"186","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDetailsActions.tsx":"187","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerBottomContent.tsx":"188","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerBottomTabs.tsx":"189","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerRightContent.tsx":"190","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerRightTabs.tsx":"191","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunTabDetails.tsx":"192","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunTitle.tsx":"193","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeDetailsTab.tsx":"194","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeInputOutputTab.tsx":"195","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeVolumeMountsTab.tsx":"196","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/utils.tsx":"197","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsCodeBlock.tsx":"198","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsInputParams.tsx":"199","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsOutputResults.tsx":"200","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsPrintKeyValues.tsx":"201","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsSection.tsx":"202","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsVolumeMounts.tsx":"203","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/EmptyTableView.tsx":"204","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/PipelineFilterBar.tsx":"205","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/RunTableToolbarActions.tsx":"206","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/columns.ts":"207","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTable.tsx":"208","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTableExpandedRow.tsx":"209","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTableRow.tsx":"210","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/expandedRowRenderUtils.tsx":"211","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTable.tsx":"212","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTableRow.tsx":"213","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTableToolbar.tsx":"214","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/useJobRelatedInformation.ts":"215","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/usePipelineRunFilter.ts":"216","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTable.tsx":"217","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTableRow.tsx":"218","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTableToolbar.tsx":"219","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/usePipelineRunJobFilter.ts":"220","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/renderUtils.tsx":"221","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/utils.ts":"222","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/types.ts":"223","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/utils.tsx":"224","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/PipelinesContext.tsx":"225","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/index.ts":"226","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/useAPIState.ts":"227","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/useManageElyraSecret.ts":"228","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/usePipelineNamespaceCR.ts":"229","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/usePipelinesAPIRoute.ts":"230","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/CanEnableElyraPipelinesCheck.tsx":"231","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/const.ts":"232","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/useElyraSecret.ts":"233","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/utils.ts":"234","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/kfTypes.ts":"235","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/PipelineTopology.tsx":"236","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/PipelineVisualizationSurface.tsx":"237","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/const.ts":"238","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/customNodes/StandardTaskNode.tsx":"239","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/factories.ts":"240","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/types.ts":"241","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/useTopologyController.ts":"242","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/utils.ts":"243","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/index.ts":"244","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/pipelineUtils.ts":"245","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/usePipelineTaskTopology.ts":"246","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/types.ts":"247","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/utils.ts":"248","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/InvalidProject.tsx":"249","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectSelector.tsx":"250","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectSelectorNavigator.tsx":"251","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectsContext.tsx":"252","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectsRoutes.tsx":"253","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/apiHooks/useNamespaceSecret.ts":"254","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/useMountProjectRefresh.ts":"255","/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/useSyncPreferredProject.tsx":"256","/Users/jshandel/odh-dashboard/frontend/src/concepts/secrets/apiHooks/useAWSSecret.ts":"257","/Users/jshandel/odh-dashboard/frontend/src/concepts/secrets/apiHooks/useSecret.ts":"258","/Users/jshandel/odh-dashboard/frontend/src/const.ts":"259","/Users/jshandel/odh-dashboard/frontend/src/index.tsx":"260","/Users/jshandel/odh-dashboard/frontend/src/k8sTypes.ts":"261","/Users/jshandel/odh-dashboard/frontend/src/pages/ApplicationsPage.tsx":"262","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/BYONImages.tsx":"263","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/BYONImagesTable.tsx":"264","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/DeleteBYONImageModal.tsx":"265","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/EditStepTableRow.tsx":"266","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/ImageErrorStatus.tsx":"267","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/ImportImageModal.tsx":"268","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/UpdateImageModal.tsx":"269","/Users/jshandel/odh-dashboard/frontend/src/pages/NotFound.tsx":"270","/Users/jshandel/odh-dashboard/frontend/src/pages/UnauthorizedError.tsx":"271","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/ClusterSettings.tsx":"272","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/CullerSettings.tsx":"273","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/PVCSizeSettings.tsx":"274","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/TelemetrySettings.tsx":"275","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/TolerationSettings.tsx":"276","/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/const.ts":"277","/Users/jshandel/odh-dashboard/frontend/src/pages/dependencies/DependencyMissingPage.tsx":"278","/Users/jshandel/odh-dashboard/frontend/src/pages/dependencies/PipelinesDependencyMissing.tsx":"279","/Users/jshandel/odh-dashboard/frontend/src/pages/enabledApplications/EnabledApplications.tsx":"280","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/EnableModal.tsx":"281","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/EnableVariable.tsx":"282","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/ExploreApplications.tsx":"283","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/GetStartedPanel.tsx":"284","/Users/jshandel/odh-dashboard/frontend/src/pages/groupSettings/GroupSettings.tsx":"285","/Users/jshandel/odh-dashboard/frontend/src/pages/groupSettings/groupTypes.ts":"286","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/ApplicationFilters.tsx":"287","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/CategoryFilters.tsx":"288","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/DocTypeFilters.tsx":"289","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/EnabledFilters.tsx":"290","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenter.tsx":"291","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterDataView.tsx":"292","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterFilters.tsx":"293","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterListHeader.tsx":"294","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterToolbar.tsx":"295","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/ProviderTypeFilters.tsx":"296","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/const.ts":"297","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/useDocFilterer.ts":"298","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/useQueryFilters.ts":"299","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/ModelServingContext.tsx":"300","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/ModelServingRoutes.tsx":"301","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeAddTemplate.tsx":"302","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeContext.tsx":"303","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeEditTemplate.tsx":"304","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeEnabledToggle.tsx":"305","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeListView.tsx":"306","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeRoutes.tsx":"307","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeTableRow.tsx":"308","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeView.tsx":"309","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/DeleteCustomServingRuntimeModal.tsx":"310","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/EmptyCustomServingRuntime.tsx":"311","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/templatedData.tsx":"312","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useCustomServingRuntimesEnabled.ts":"313","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplateDisablement.ts":"314","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplateOrder.ts":"315","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplates.ts":"316","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/utils.ts":"317","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/const.ts":"318","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/DeleteInferenceServiceModal.tsx":"319","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/EmptyModelServing.tsx":"320","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceEndpoint.tsx":"321","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceListView.tsx":"322","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceModel.tsx":"323","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceProject.tsx":"324","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceStatus.tsx":"325","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceTable.tsx":"326","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceTableRow.tsx":"327","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InternalServicePopoverContent.tsx":"328","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/ModelServingGlobal.tsx":"329","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/ServeModelButton.tsx":"330","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/data.ts":"331","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/useRouteForInferenceService.ts":"332","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/utils.ts":"333","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsChart.tsx":"334","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsPage.tsx":"335","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsPageToolbar.tsx":"336","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/ModelServingMetricsContext.tsx":"337","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/ModelServingMetricsWrapper.tsx":"338","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/utils.ts":"339","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/DeleteServingRuntimeModal.tsx":"340","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/DetailsPageMetricsWrapper.tsx":"341","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/EmptyInferenceServicesCell.tsx":"342","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionExistingField.tsx":"343","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionFolderPathField.tsx":"344","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionSection.tsx":"345","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ExistingProjectField.tsx":"346","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/InferenceServiceFrameworkSection.tsx":"347","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/InferenceServiceServingRuntimeSection.tsx":"348","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ManageInferenceServiceModal.tsx":"349","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ProjectSection.tsx":"350","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/useModelFramework.ts":"351","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/useModelServingProjects.ts":"352","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeDetails.tsx":"353","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeList.tsx":"354","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeListButtonAction.tsx":"355","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ManageServingRuntimeModal.tsx":"356","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeReplicaSection.tsx":"357","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeSizeExpandedField.tsx":"358","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeSizeSection.tsx":"359","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTemplateSection.tsx":"360","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTokenInput.tsx":"361","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTokenSection.tsx":"362","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTable.tsx":"363","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTableExpandedSection.tsx":"364","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTableRow.tsx":"365","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokenDisplay.tsx":"366","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokenTableRow.tsx":"367","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokensTable.tsx":"368","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/data.ts":"369","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/useServingRuntimeSecrets.ts":"370","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/utils.ts":"371","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/types.ts":"372","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useInferenceServices.ts":"373","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useModelMetricsEnabled.ts":"374","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useModelServingEnabled.ts":"375","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useServingRuntimes.ts":"376","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/utils.ts":"377","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookController.tsx":"378","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookControllerContext.tsx":"379","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookLogoutRedirect.tsx":"380","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/SetupCurrentNotebook.tsx":"381","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/ValidateNotebookNamespace.tsx":"382","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/const.ts":"383","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/notebookControllerContextTypes.ts":"384","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/ImpersonateAlert.tsx":"385","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookActions.tsx":"386","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdmin.tsx":"387","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdminContext.tsx":"388","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdminControl.tsx":"389","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookControllerTabs.tsx":"390","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/ServerStatus.tsx":"391","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/StopAllServersButton.tsx":"392","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/UserTableCellTransform.tsx":"393","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/const.ts":"394","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/types.ts":"395","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/useAdminUsers.ts":"396","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/useCheckForAllowedUsers.ts":"397","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/BrowserTabPreferenceCheckbox.tsx":"398","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/EnvironmentVariablesField.tsx":"399","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/EnvironmentVariablesRow.tsx":"400","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/GPUSelectField.tsx":"401","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageSelector.tsx":"402","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageTagPopover.tsx":"403","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageVersions.tsx":"404","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookControlPanelRedirect.tsx":"405","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServer.tsx":"406","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServerDetails.tsx":"407","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServerRoutes.tsx":"408","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/SizeSelectField.tsx":"409","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/SpawnerPage.tsx":"410","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/StartServerModal.tsx":"411","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/StopServerModal.tsx":"412","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useBrowserTabPreference.ts":"413","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useGPUSetting.ts":"414","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/usePreferredNotebookSize.ts":"415","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useSpawnerNotebookModalState.ts":"416","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useAdminTabState.ts":"417","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useImpersonationForContext.ts":"418","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useNamespaces.ts":"419","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/GlobalPipelineRunsRoutes.tsx":"420","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/GlobalPipelinesRoutes.tsx":"421","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/GlobalPipelineCoreDetails.tsx":"422","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/GlobalPipelineCoreLoader.tsx":"423","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreApplicationPage.tsx":"424","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreNoProjects.tsx":"425","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreProjectSelector.tsx":"426","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalNoPipelines.tsx":"427","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalPipelines.tsx":"428","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalPipelinesTableToolbar.tsx":"429","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/PipelinesPageHeaderActions.tsx":"430","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/PipelinesView.tsx":"431","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/const.ts":"432","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/CreateRunEmptyState.tsx":"433","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/GlobalPipelineRuns.tsx":"434","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/GlobalPipelineRunsTabs.tsx":"435","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/ScheduledRuns.tsx":"436","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/TriggeredRuns.tsx":"437","/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/const.ts":"438","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/ProjectDetailsContext.tsx":"439","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/ProjectViewRoutes.tsx":"440","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/DeleteModal.tsx":"441","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/DeleteModalConnectedAlert.tsx":"442","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/EmptyTableCellForAlignment.tsx":"443","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/ExistingPVCField.tsx":"444","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/GenericHorizontalBar.tsx":"445","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/IndentSection.tsx":"446","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/NotebookRestartAlert.tsx":"447","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/PVSizeField.tsx":"448","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/PasswordInput.tsx":"449","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/SearchField.tsx":"450","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/StorageSizeBars.tsx":"451","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/dataConnections/AWSField.tsx":"452","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/dataConnections/const.ts":"453","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ConnectedNotebookField.tsx":"454","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ConnectedNotebookNames.tsx":"455","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/DeleteNotebookModal.tsx":"456","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ListNotebookState.tsx":"457","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookImagePackageDetails.tsx":"458","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookRouteLink.tsx":"459","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookStatusText.tsx":"460","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookStatusToggle.tsx":"461","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StartNotebookModal.tsx":"462","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StopNotebookConfirmModal.tsx":"463","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StorageNotebookConnections.tsx":"464","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/service.ts":"465","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/types.ts":"466","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useProjectNotebookStates.ts":"467","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRefreshNotebookUntilStart.ts":"468","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRelatedNotebooks.ts":"469","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRouteForNotebook.ts":"470","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useStopNotebookModalAvailability.ts":"471","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useWatchNotebookEvents.ts":"472","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useWillNotebooksRestart.ts":"473","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/utils.ts":"474","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharing.tsx":"475","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingNameInput.tsx":"476","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingPermissionSelection.tsx":"477","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTable.tsx":"478","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableRow.tsx":"479","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableRowAdd.tsx":"480","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableSection.tsx":"481","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/data.ts":"482","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/types.ts":"483","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/useGroups.ts":"484","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/useProjectSharing.ts":"485","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/utils.ts":"486","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/AddNotebookStorage.tsx":"487","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/DeletePVCModal.tsx":"488","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/MountPathField.tsx":"489","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/const.ts":"490","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/useNotebookPVCItems.ts":"491","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/utils.ts":"492","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/DetailsSection.tsx":"493","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/EmptyDetailsList.tsx":"494","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/ProjectDetails.tsx":"495","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/ProjectDetailsComponents.tsx":"496","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/const.ts":"497","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsList.tsx":"498","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsTable.tsx":"499","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsTableRow.tsx":"500","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DeleteDataConnectionModal.tsx":"501","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/ManageDataConnectionModal.tsx":"502","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/connectionRenderers.tsx":"503","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/data.ts":"504","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/useDataConnections.ts":"505","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/useSelectedNotebooks.ts":"506","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/utils.ts":"507","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookList.tsx":"508","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookSizeDetails.tsx":"509","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookStorageBars.tsx":"510","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookTable.tsx":"511","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookTableRow.tsx":"512","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/data.ts":"513","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookDeploymentSize.ts":"514","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookGPUNumber.ts":"515","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookImage.ts":"516","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookImageData.ts":"517","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/PipelinesList.tsx":"518","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/PipelinesSection.tsx":"519","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/ProjectPipelineBreadcrumbPage.tsx":"520","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/ExistingConnectedNotebooks.tsx":"521","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/ManageStorageModal.tsx":"522","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageList.tsx":"523","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageTable.tsx":"524","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageTableRow.tsx":"525","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageWarningStatus.tsx":"526","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/data.ts":"527","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useIsRootVolume.ts":"528","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useProjectPvcs.ts":"529","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useStorageStatusAlert.ts":"530","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/utils.ts":"531","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/types.ts":"532","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/useCheckLogoutParams.ts":"533","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/DeleteProjectModal.tsx":"534","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/EmptyProjects.tsx":"535","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/LaunchJupyterButton.tsx":"536","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ManageProjectModal.tsx":"537","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/NewProjectButton.tsx":"538","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectLink.tsx":"539","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectListView.tsx":"540","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectTableRow.tsx":"541","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectView.tsx":"542","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/tableData.tsx":"543","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/useProjectTableRowItems.ts":"544","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/EditSpawnerPage.tsx":"545","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/SpawnerFooter.tsx":"546","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/SpawnerPage.tsx":"547","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/const.ts":"548","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/DataConnectionField.tsx":"549","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/ExistingDataConnectionField.tsx":"550","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/useNotebookDataConnection.ts":"551","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/deploymentSize/ContainerSizeSelector.tsx":"552","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvConfigMap.tsx":"553","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvDataTypeField.tsx":"554","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvSecret.tsx":"555","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvTypeSelectField.tsx":"556","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvTypeSwitch.tsx":"557","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvUploadField.tsx":"558","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvironmentVariables.tsx":"559","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/GenericKeyValuePairField.tsx":"560","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/const.ts":"561","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/useNotebookEnvVariables.tsx":"562","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/utils.ts":"563","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageSelectorField.tsx":"564","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageStreamPopover.tsx":"565","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageStreamSelector.tsx":"566","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageVersionSelector.tsx":"567","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageVersionTooltip.tsx":"568","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/service.ts":"569","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/spawnerUtils.ts":"570","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/AddExistingStorageField.tsx":"571","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/CreateNewStorageSection.tsx":"572","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/StorageField.tsx":"573","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useAvailablePvcSize.ts":"574","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useAvailablePvcs.ts":"575","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useNotebookRootStorage.ts":"576","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/utils.ts":"577","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/types.ts":"578","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useBuildStatuses.ts":"579","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useImageStreams.ts":"580","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useNotebookSize.ts":"581","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/typeHelpers.ts":"582","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/types.ts":"583","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/utils.ts":"584","/Users/jshandel/odh-dashboard/frontend/src/redux/actions/actions.ts":"585","/Users/jshandel/odh-dashboard/frontend/src/redux/hooks.ts":"586","/Users/jshandel/odh-dashboard/frontend/src/redux/reducers/appReducer.ts":"587","/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/clusterInfo.ts":"588","/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/index.ts":"589","/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/project.ts":"590","/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/types.ts":"591","/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/user.ts":"592","/Users/jshandel/odh-dashboard/frontend/src/redux/store/store.ts":"593","/Users/jshandel/odh-dashboard/frontend/src/redux/types.ts":"594","/Users/jshandel/odh-dashboard/frontend/src/services/buildsService.ts":"595","/Users/jshandel/odh-dashboard/frontend/src/services/clusterSettingsService.ts":"596","/Users/jshandel/odh-dashboard/frontend/src/services/componentsServices.ts":"597","/Users/jshandel/odh-dashboard/frontend/src/services/consoleLinksService.ts":"598","/Users/jshandel/odh-dashboard/frontend/src/services/dashboardConfigService.ts":"599","/Users/jshandel/odh-dashboard/frontend/src/services/dashboardService.ts":"600","/Users/jshandel/odh-dashboard/frontend/src/services/docsService.ts":"601","/Users/jshandel/odh-dashboard/frontend/src/services/envService.ts":"602","/Users/jshandel/odh-dashboard/frontend/src/services/gpuService.ts":"603","/Users/jshandel/odh-dashboard/frontend/src/services/groupSettingsService.ts":"604","/Users/jshandel/odh-dashboard/frontend/src/services/imagesService.ts":"605","/Users/jshandel/odh-dashboard/frontend/src/services/impersonateService.ts":"606","/Users/jshandel/odh-dashboard/frontend/src/services/notebookEventsService.ts":"607","/Users/jshandel/odh-dashboard/frontend/src/services/notebookService.ts":"608","/Users/jshandel/odh-dashboard/frontend/src/services/quickStartsService.ts":"609","/Users/jshandel/odh-dashboard/frontend/src/services/roleBindingService.ts":"610","/Users/jshandel/odh-dashboard/frontend/src/services/routeService.ts":"611","/Users/jshandel/odh-dashboard/frontend/src/services/segmentKeyService.ts":"612","/Users/jshandel/odh-dashboard/frontend/src/services/templateService.ts":"613","/Users/jshandel/odh-dashboard/frontend/src/services/validateIsvService.ts":"614","/Users/jshandel/odh-dashboard/frontend/src/typeHelpers.ts":"615","/Users/jshandel/odh-dashboard/frontend/src/types.ts":"616","/Users/jshandel/odh-dashboard/frontend/src/typings.d.ts":"617","/Users/jshandel/odh-dashboard/frontend/src/utilities/NavData.tsx":"618","/Users/jshandel/odh-dashboard/frontend/src/utilities/allSettledPromises.ts":"619","/Users/jshandel/odh-dashboard/frontend/src/utilities/clusterUtils.ts":"620","/Users/jshandel/odh-dashboard/frontend/src/utilities/const.ts":"621","/Users/jshandel/odh-dashboard/frontend/src/utilities/dataEntryToRecord.ts":"622","/Users/jshandel/odh-dashboard/frontend/src/utilities/imageUtils.ts":"623","/Users/jshandel/odh-dashboard/frontend/src/utilities/markdown.ts":"624","/Users/jshandel/odh-dashboard/frontend/src/utilities/notebookControllerUtils.ts":"625","/Users/jshandel/odh-dashboard/frontend/src/utilities/number.ts":"626","/Users/jshandel/odh-dashboard/frontend/src/utilities/quickStartUtils.ts":"627","/Users/jshandel/odh-dashboard/frontend/src/utilities/router.ts":"628","/Users/jshandel/odh-dashboard/frontend/src/utilities/segmentIOUtils.tsx":"629","/Users/jshandel/odh-dashboard/frontend/src/utilities/string.ts":"630","/Users/jshandel/odh-dashboard/frontend/src/utilities/time.ts":"631","/Users/jshandel/odh-dashboard/frontend/src/utilities/tolerations.ts":"632","/Users/jshandel/odh-dashboard/frontend/src/utilities/useContextResourceData.tsx":"633","/Users/jshandel/odh-dashboard/frontend/src/utilities/useDebounce.ts":"634","/Users/jshandel/odh-dashboard/frontend/src/utilities/useDeepCompareMemoize.ts":"635","/Users/jshandel/odh-dashboard/frontend/src/utilities/useDetectUser.ts":"636","/Users/jshandel/odh-dashboard/frontend/src/utilities/useDraggableTable.ts":"637","/Users/jshandel/odh-dashboard/frontend/src/utilities/useEnableApplication.tsx":"638","/Users/jshandel/odh-dashboard/frontend/src/utilities/useEventListener.ts":"639","/Users/jshandel/odh-dashboard/frontend/src/utilities/useFetchState.ts":"640","/Users/jshandel/odh-dashboard/frontend/src/utilities/useGenericObjectState.ts":"641","/Users/jshandel/odh-dashboard/frontend/src/utilities/useNotification.ts":"642","/Users/jshandel/odh-dashboard/frontend/src/utilities/useQueryParams.tsx":"643","/Users/jshandel/odh-dashboard/frontend/src/utilities/useSegmentTracking.ts":"644","/Users/jshandel/odh-dashboard/frontend/src/utilities/useTrackHistory.ts":"645","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchBYONImages.tsx":"646","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchBuildStatus.tsx":"647","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchComponents.tsx":"648","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchConsoleLinks.tsx":"649","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchDocs.tsx":"650","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchGroups.tsx":"651","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchImages.tsx":"652","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchNotebookEvents.tsx":"653","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchNotebooksForUsers.tsx":"654","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchQuickStarts.tsx":"655","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchSegmentKey.tsx":"656","/Users/jshandel/odh-dashboard/frontend/src/utilities/utils.ts":"657","/Users/jshandel/odh-dashboard/frontend/src/utilities/valueUnits.ts":"658"},{"size":2788,"mtime":1677594530018,"results":"659","hashOfConfig":"660"},{"size":513,"mtime":1689796871587,"results":"661","hashOfConfig":"660"},{"size":4145,"mtime":1689796871587,"results":"662","hashOfConfig":"660"},{"size":2484,"mtime":1677594530019,"results":"663","hashOfConfig":"660"},{"size":1187,"mtime":1677594530019,"results":"664","hashOfConfig":"660"},{"size":3049,"mtime":1677594530019,"results":"665","hashOfConfig":"660"},{"size":3022,"mtime":1677594530019,"results":"666","hashOfConfig":"660"},{"size":2025,"mtime":1689796871588,"results":"667","hashOfConfig":"660"},{"size":376,"mtime":1681233635041,"results":"668","hashOfConfig":"660"},{"size":9046,"mtime":1689796871588,"results":"669","hashOfConfig":"660"},{"size":1042,"mtime":1689796871588,"results":"670","hashOfConfig":"660"},{"size":11471,"mtime":1689796871588,"results":"671","hashOfConfig":"660"},{"size":973,"mtime":1689796871588,"results":"672","hashOfConfig":"660"},{"size":3402,"mtime":1689796871588,"results":"673","hashOfConfig":"660"},{"size":1069,"mtime":1689796871588,"results":"674","hashOfConfig":"660"},{"size":4076,"mtime":1689796871588,"results":"675","hashOfConfig":"660"},{"size":2431,"mtime":1689796871589,"results":"676","hashOfConfig":"660"},{"size":609,"mtime":1689796871589,"results":"677","hashOfConfig":"660"},{"size":134,"mtime":1689796871589,"results":"678","hashOfConfig":"660"},{"size":1895,"mtime":1689796871589,"results":"679","hashOfConfig":"660"},{"size":2563,"mtime":1689796871589,"results":"680","hashOfConfig":"660"},{"size":86,"mtime":1689796871589,"results":"681","hashOfConfig":"660"},{"size":7421,"mtime":1689800137401,"results":"682","hashOfConfig":"660"},{"size":3928,"mtime":1689796871589,"results":"683","hashOfConfig":"660"},{"size":1344,"mtime":1689796871589,"results":"684","hashOfConfig":"660"},{"size":2473,"mtime":1689796871589,"results":"685","hashOfConfig":"660"},{"size":914,"mtime":1689796871590,"results":"686","hashOfConfig":"660"},{"size":4017,"mtime":1689796871590,"results":"687","hashOfConfig":"660"},{"size":4239,"mtime":1689796871590,"results":"688","hashOfConfig":"660"},{"size":2722,"mtime":1689796871590,"results":"689","hashOfConfig":"660"},{"size":6206,"mtime":1689796871590,"results":"690","hashOfConfig":"660"},{"size":1143,"mtime":1689796871590,"results":"691","hashOfConfig":"660"},{"size":6271,"mtime":1689796871590,"results":"692","hashOfConfig":"660"},{"size":3714,"mtime":1689796871590,"results":"693","hashOfConfig":"660"},{"size":2981,"mtime":1689796871590,"results":"694","hashOfConfig":"660"},{"size":3871,"mtime":1689796871590,"results":"695","hashOfConfig":"660"},{"size":902,"mtime":1689796871591,"results":"696","hashOfConfig":"660"},{"size":346,"mtime":1677594530019,"results":"697","hashOfConfig":"660"},{"size":970,"mtime":1689796871591,"results":"698","hashOfConfig":"660"},{"size":792,"mtime":1679510865396,"results":"699","hashOfConfig":"660"},{"size":1487,"mtime":1689796871591,"results":"700","hashOfConfig":"660"},{"size":2459,"mtime":1689796871591,"results":"701","hashOfConfig":"660"},{"size":575,"mtime":1679510865396,"results":"702","hashOfConfig":"660"},{"size":456,"mtime":1689796871591,"results":"703","hashOfConfig":"660"},{"size":463,"mtime":1679510865396,"results":"704","hashOfConfig":"660"},{"size":4168,"mtime":1689796871591,"results":"705","hashOfConfig":"660"},{"size":13816,"mtime":1689796871591,"results":"706","hashOfConfig":"660"},{"size":446,"mtime":1679510865398,"results":"707","hashOfConfig":"660"},{"size":4635,"mtime":1689796871591,"results":"708","hashOfConfig":"660"},{"size":3554,"mtime":1689796871591,"results":"709","hashOfConfig":"660"},{"size":4242,"mtime":1689796871592,"results":"710","hashOfConfig":"660"},{"size":482,"mtime":1679510865398,"results":"711","hashOfConfig":"660"},{"size":4053,"mtime":1689796871592,"results":"712","hashOfConfig":"660"},{"size":1348,"mtime":1689796871592,"results":"713","hashOfConfig":"660"},{"size":5887,"mtime":1689796871592,"results":"714","hashOfConfig":"660"},{"size":4411,"mtime":1689796871592,"results":"715","hashOfConfig":"660"},{"size":450,"mtime":1689796871592,"results":"716","hashOfConfig":"660"},{"size":1598,"mtime":1679510865399,"results":"717","hashOfConfig":"660"},{"size":104,"mtime":1689796871592,"results":"718","hashOfConfig":"660"},{"size":1242,"mtime":1681233635042,"results":"719","hashOfConfig":"660"},{"size":738,"mtime":1676909480890,"results":"720","hashOfConfig":"660"},{"size":1233,"mtime":1689796871593,"results":"721","hashOfConfig":"660"},{"size":321,"mtime":1689796871593,"results":"722","hashOfConfig":"660"},{"size":2138,"mtime":1689796871593,"results":"723","hashOfConfig":"660"},{"size":4968,"mtime":1689796871593,"results":"724","hashOfConfig":"660"},{"size":1440,"mtime":1689796871593,"results":"725","hashOfConfig":"660"},{"size":2386,"mtime":1689796871593,"results":"726","hashOfConfig":"660"},{"size":904,"mtime":1677594530022,"results":"727","hashOfConfig":"660"},{"size":2417,"mtime":1677594530022,"results":"728","hashOfConfig":"660"},{"size":721,"mtime":1679510865399,"results":"729","hashOfConfig":"660"},{"size":1028,"mtime":1679510865399,"results":"730","hashOfConfig":"660"},{"size":814,"mtime":1677594530023,"results":"731","hashOfConfig":"660"},{"size":2899,"mtime":1689796871593,"results":"732","hashOfConfig":"660"},{"size":2100,"mtime":1681233635042,"results":"733","hashOfConfig":"660"},{"size":3274,"mtime":1689796871594,"results":"734","hashOfConfig":"660"},{"size":532,"mtime":1677594530023,"results":"735","hashOfConfig":"660"},{"size":5156,"mtime":1689800132416,"results":"736","hashOfConfig":"660"},{"size":3378,"mtime":1689800137401,"results":"737","hashOfConfig":"660"},{"size":3440,"mtime":1689796871594,"results":"738","hashOfConfig":"660"},{"size":1386,"mtime":1689796871594,"results":"739","hashOfConfig":"660"},{"size":5820,"mtime":1689800137401,"results":"740","hashOfConfig":"660"},{"size":2257,"mtime":1689800137401,"results":"741","hashOfConfig":"660"},{"size":995,"mtime":1677594530024,"results":"742","hashOfConfig":"660"},{"size":302,"mtime":1677594530024,"results":"743","hashOfConfig":"660"},{"size":174,"mtime":1677594530024,"results":"744","hashOfConfig":"660"},{"size":2136,"mtime":1677594530024,"results":"745","hashOfConfig":"660"},{"size":1943,"mtime":1677594530024,"results":"746","hashOfConfig":"660"},{"size":1247,"mtime":1676909480893,"results":"747","hashOfConfig":"660"},{"size":404,"mtime":1677594530024,"results":"748","hashOfConfig":"660"},{"size":2505,"mtime":1689800137401,"results":"749","hashOfConfig":"660"},{"size":872,"mtime":1689800137401,"results":"750","hashOfConfig":"660"},{"size":474,"mtime":1677594530025,"results":"751","hashOfConfig":"660"},{"size":725,"mtime":1677594530025,"results":"752","hashOfConfig":"660"},{"size":1766,"mtime":1689796871595,"results":"753","hashOfConfig":"660"},{"size":1840,"mtime":1676909480894,"results":"754","hashOfConfig":"660"},{"size":1710,"mtime":1678122044389,"results":"755","hashOfConfig":"660"},{"size":996,"mtime":1689796871595,"results":"756","hashOfConfig":"660"},{"size":767,"mtime":1689796871595,"results":"757","hashOfConfig":"660"},{"size":424,"mtime":1677594530025,"results":"758","hashOfConfig":"660"},{"size":2135,"mtime":1689800137401,"results":"759","hashOfConfig":"660"},{"size":640,"mtime":1677594530025,"results":"760","hashOfConfig":"660"},{"size":6046,"mtime":1689800138369,"results":"761","hashOfConfig":"660"},{"size":5295,"mtime":1689800138369,"results":"762","hashOfConfig":"660"},{"size":4088,"mtime":1689800137401,"results":"763","hashOfConfig":"660"},{"size":2951,"mtime":1689800138369,"results":"764","hashOfConfig":"660"},{"size":1055,"mtime":1689800137401,"results":"765","hashOfConfig":"660"},{"size":967,"mtime":1689796871595,"results":"766","hashOfConfig":"660"},{"size":1935,"mtime":1689800137401,"results":"767","hashOfConfig":"660"},{"size":209,"mtime":1677594530026,"results":"768","hashOfConfig":"660"},{"size":693,"mtime":1678123137935,"results":"769","hashOfConfig":"660"},{"size":1137,"mtime":1689800132416,"results":"770","hashOfConfig":"660"},{"size":1405,"mtime":1689800132416,"results":"771","hashOfConfig":"660"},{"size":1536,"mtime":1689800137401,"results":"772","hashOfConfig":"660"},{"size":1497,"mtime":1677594530027,"results":"773","hashOfConfig":"660"},{"size":659,"mtime":1677594530027,"results":"774","hashOfConfig":"660"},{"size":1764,"mtime":1689800132417,"results":"775","hashOfConfig":"660"},{"size":4554,"mtime":1677594530027,"results":"776","hashOfConfig":"660"},{"size":61,"mtime":1676909480896,"results":"777","hashOfConfig":"660"},{"size":1132,"mtime":1689796871595,"results":"778","hashOfConfig":"660"},{"size":594,"mtime":1689796871595,"results":"779","hashOfConfig":"660"},{"size":435,"mtime":1689796871596,"results":"780","hashOfConfig":"660"},{"size":5257,"mtime":1689800137401,"results":"781","hashOfConfig":"660"},{"size":1070,"mtime":1689796871596,"results":"782","hashOfConfig":"660"},{"size":582,"mtime":1689796871596,"results":"783","hashOfConfig":"660"},{"size":1508,"mtime":1689796871596,"results":"784","hashOfConfig":"660"},{"size":2913,"mtime":1689796871596,"results":"785","hashOfConfig":"660"},{"size":715,"mtime":1677594530027,"results":"786","hashOfConfig":"660"},{"size":1211,"mtime":1689796871596,"results":"787","hashOfConfig":"660"},{"size":607,"mtime":1689796871596,"results":"788","hashOfConfig":"660"},{"size":3393,"mtime":1689800137401,"results":"789","hashOfConfig":"660"},{"size":559,"mtime":1689796871597,"results":"790","hashOfConfig":"660"},{"size":1039,"mtime":1689800137401,"results":"791","hashOfConfig":"660"},{"size":645,"mtime":1689796871597,"results":"792","hashOfConfig":"660"},{"size":720,"mtime":1689796871597,"results":"793","hashOfConfig":"660"},{"size":700,"mtime":1689796871597,"results":"794","hashOfConfig":"660"},{"size":1472,"mtime":1689796871597,"results":"795","hashOfConfig":"660"},{"size":750,"mtime":1689796871597,"results":"796","hashOfConfig":"660"},{"size":651,"mtime":1689796871597,"results":"797","hashOfConfig":"660"},{"size":636,"mtime":1689796871597,"results":"798","hashOfConfig":"660"},{"size":793,"mtime":1689796871597,"results":"799","hashOfConfig":"660"},{"size":1161,"mtime":1689796871597,"results":"800","hashOfConfig":"660"},{"size":659,"mtime":1689796871598,"results":"801","hashOfConfig":"660"},{"size":234,"mtime":1689796871598,"results":"802","hashOfConfig":"660"},{"size":6008,"mtime":1689796871598,"results":"803","hashOfConfig":"660"},{"size":1598,"mtime":1689796871598,"results":"804","hashOfConfig":"660"},{"size":6904,"mtime":1689796871598,"results":"805","hashOfConfig":"660"},{"size":5173,"mtime":1689796871598,"results":"806","hashOfConfig":"660"},{"size":558,"mtime":1689796871598,"results":"807","hashOfConfig":"660"},{"size":977,"mtime":1689796871598,"results":"808","hashOfConfig":"660"},{"size":5207,"mtime":1689800137401,"results":"809","hashOfConfig":"660"},{"size":3076,"mtime":1689796871599,"results":"810","hashOfConfig":"660"},{"size":1556,"mtime":1689796871599,"results":"811","hashOfConfig":"660"},{"size":473,"mtime":1689796871599,"results":"812","hashOfConfig":"660"},{"size":4849,"mtime":1689796871599,"results":"813","hashOfConfig":"660"},{"size":1178,"mtime":1689796871599,"results":"814","hashOfConfig":"660"},{"size":781,"mtime":1689796871599,"results":"815","hashOfConfig":"660"},{"size":2248,"mtime":1689796871599,"results":"816","hashOfConfig":"660"},{"size":1712,"mtime":1689796871599,"results":"817","hashOfConfig":"660"},{"size":2010,"mtime":1689796871599,"results":"818","hashOfConfig":"660"},{"size":911,"mtime":1689796871599,"results":"819","hashOfConfig":"660"},{"size":668,"mtime":1689796871599,"results":"820","hashOfConfig":"660"},{"size":2358,"mtime":1689796871600,"results":"821","hashOfConfig":"660"},{"size":1821,"mtime":1689800137401,"results":"822","hashOfConfig":"660"},{"size":1744,"mtime":1689796871600,"results":"823","hashOfConfig":"660"},{"size":2063,"mtime":1689796871600,"results":"824","hashOfConfig":"660"},{"size":2126,"mtime":1689800137401,"results":"825","hashOfConfig":"660"},{"size":3594,"mtime":1689800137401,"results":"826","hashOfConfig":"660"},{"size":4126,"mtime":1689796871600,"results":"827","hashOfConfig":"660"},{"size":1307,"mtime":1689796871600,"results":"828","hashOfConfig":"660"},{"size":895,"mtime":1689796871600,"results":"829","hashOfConfig":"660"},{"size":5923,"mtime":1689796871600,"results":"830","hashOfConfig":"660"},{"size":1349,"mtime":1689796871600,"results":"831","hashOfConfig":"660"},{"size":3363,"mtime":1689800137401,"results":"832","hashOfConfig":"660"},{"size":320,"mtime":1689796871601,"results":"833","hashOfConfig":"660"},{"size":1180,"mtime":1689796871601,"results":"834","hashOfConfig":"660"},{"size":1100,"mtime":1689800137401,"results":"835","hashOfConfig":"660"},{"size":3636,"mtime":1689800137401,"results":"836","hashOfConfig":"660"},{"size":343,"mtime":1689796871601,"results":"837","hashOfConfig":"660"},{"size":1241,"mtime":1689800137401,"results":"838","hashOfConfig":"660"},{"size":570,"mtime":1689800137401,"results":"839","hashOfConfig":"660"},{"size":6522,"mtime":1689796871601,"results":"840","hashOfConfig":"660"},{"size":1599,"mtime":1689800132416,"results":"841","hashOfConfig":"660"},{"size":999,"mtime":1689800138369,"results":"842","hashOfConfig":"660"},{"size":2597,"mtime":1689796871602,"results":"843","hashOfConfig":"660"},{"size":1038,"mtime":1689796871602,"results":"844","hashOfConfig":"660"},{"size":6406,"mtime":1689800137401,"results":"845","hashOfConfig":"660"},{"size":1999,"mtime":1689800132416,"results":"846","hashOfConfig":"660"},{"size":1306,"mtime":1689800137401,"results":"847","hashOfConfig":"660"},{"size":2486,"mtime":1689796871602,"results":"848","hashOfConfig":"660"},{"size":1379,"mtime":1689796871602,"results":"849","hashOfConfig":"660"},{"size":2799,"mtime":1689796871602,"results":"850","hashOfConfig":"660"},{"size":2438,"mtime":1689800137401,"results":"851","hashOfConfig":"660"},{"size":668,"mtime":1689796871602,"results":"852","hashOfConfig":"660"},{"size":1858,"mtime":1689796871602,"results":"853","hashOfConfig":"660"},{"size":1602,"mtime":1689796871602,"results":"854","hashOfConfig":"660"},{"size":1047,"mtime":1689796871603,"results":"855","hashOfConfig":"660"},{"size":1101,"mtime":1689796871603,"results":"856","hashOfConfig":"660"},{"size":1332,"mtime":1689796871603,"results":"857","hashOfConfig":"660"},{"size":647,"mtime":1689796871603,"results":"858","hashOfConfig":"660"},{"size":619,"mtime":1689796871603,"results":"859","hashOfConfig":"660"},{"size":556,"mtime":1689796871603,"results":"860","hashOfConfig":"660"},{"size":485,"mtime":1689796871603,"results":"861","hashOfConfig":"660"},{"size":726,"mtime":1689796871603,"results":"862","hashOfConfig":"660"},{"size":945,"mtime":1689800138369,"results":"863","hashOfConfig":"660"},{"size":3575,"mtime":1689800137401,"results":"864","hashOfConfig":"660"},{"size":963,"mtime":1689796871603,"results":"865","hashOfConfig":"660"},{"size":3236,"mtime":1689796871604,"results":"866","hashOfConfig":"660"},{"size":2033,"mtime":1689796871604,"results":"867","hashOfConfig":"660"},{"size":3726,"mtime":1689800138369,"results":"868","hashOfConfig":"660"},{"size":3928,"mtime":1689796871604,"results":"869","hashOfConfig":"660"},{"size":1315,"mtime":1689796871604,"results":"870","hashOfConfig":"660"},{"size":3033,"mtime":1689796871604,"results":"871","hashOfConfig":"660"},{"size":2543,"mtime":1689796871604,"results":"872","hashOfConfig":"660"},{"size":3006,"mtime":1689796871604,"results":"873","hashOfConfig":"660"},{"size":1814,"mtime":1689796871604,"results":"874","hashOfConfig":"660"},{"size":2492,"mtime":1689796871605,"results":"875","hashOfConfig":"660"},{"size":2858,"mtime":1689796871605,"results":"876","hashOfConfig":"660"},{"size":2178,"mtime":1689796871605,"results":"877","hashOfConfig":"660"},{"size":2759,"mtime":1689796871605,"results":"878","hashOfConfig":"660"},{"size":2364,"mtime":1689796871605,"results":"879","hashOfConfig":"660"},{"size":6021,"mtime":1689800137401,"results":"880","hashOfConfig":"660"},{"size":4694,"mtime":1689796871605,"results":"881","hashOfConfig":"660"},{"size":793,"mtime":1689796871605,"results":"882","hashOfConfig":"660"},{"size":1981,"mtime":1689796871605,"results":"883","hashOfConfig":"660"},{"size":7252,"mtime":1689796871605,"results":"884","hashOfConfig":"660"},{"size":180,"mtime":1689796871606,"results":"885","hashOfConfig":"660"},{"size":2511,"mtime":1689796871606,"results":"886","hashOfConfig":"660"},{"size":2460,"mtime":1689796871606,"results":"887","hashOfConfig":"660"},{"size":1782,"mtime":1689796871606,"results":"888","hashOfConfig":"660"},{"size":1451,"mtime":1689796871606,"results":"889","hashOfConfig":"660"},{"size":645,"mtime":1689796871606,"results":"890","hashOfConfig":"660"},{"size":386,"mtime":1689796871606,"results":"891","hashOfConfig":"660"},{"size":808,"mtime":1689796871606,"results":"892","hashOfConfig":"660"},{"size":3210,"mtime":1689796871606,"results":"893","hashOfConfig":"660"},{"size":5413,"mtime":1689796871606,"results":"894","hashOfConfig":"660"},{"size":1325,"mtime":1689796871606,"results":"895","hashOfConfig":"660"},{"size":2035,"mtime":1689796871607,"results":"896","hashOfConfig":"660"},{"size":166,"mtime":1689796871607,"results":"897","hashOfConfig":"660"},{"size":849,"mtime":1689796871607,"results":"898","hashOfConfig":"660"},{"size":964,"mtime":1689796871607,"results":"899","hashOfConfig":"660"},{"size":390,"mtime":1689796871607,"results":"900","hashOfConfig":"660"},{"size":1396,"mtime":1689796871607,"results":"901","hashOfConfig":"660"},{"size":676,"mtime":1689796871607,"results":"902","hashOfConfig":"660"},{"size":197,"mtime":1689796871607,"results":"903","hashOfConfig":"660"},{"size":1986,"mtime":1689796871607,"results":"904","hashOfConfig":"660"},{"size":3907,"mtime":1689796871607,"results":"905","hashOfConfig":"660"},{"size":3208,"mtime":1689796871607,"results":"906","hashOfConfig":"660"},{"size":489,"mtime":1689796871607,"results":"907","hashOfConfig":"660"},{"size":775,"mtime":1689796871608,"results":"908","hashOfConfig":"660"},{"size":1750,"mtime":1689800132417,"results":"909","hashOfConfig":"660"},{"size":756,"mtime":1689796871608,"results":"910","hashOfConfig":"660"},{"size":4067,"mtime":1689796871608,"results":"911","hashOfConfig":"660"},{"size":1884,"mtime":1689800137401,"results":"912","hashOfConfig":"660"},{"size":1097,"mtime":1689796871608,"results":"913","hashOfConfig":"660"},{"size":685,"mtime":1689796871608,"results":"914","hashOfConfig":"660"},{"size":636,"mtime":1689796871608,"results":"915","hashOfConfig":"660"},{"size":962,"mtime":1689796871609,"results":"916","hashOfConfig":"660"},{"size":630,"mtime":1689796871609,"results":"917","hashOfConfig":"660"},{"size":409,"mtime":1689796871609,"results":"918","hashOfConfig":"660"},{"size":1026,"mtime":1676909480899,"results":"919","hashOfConfig":"660"},{"size":16346,"mtime":1689796871609,"results":"920","hashOfConfig":"660"},{"size":3365,"mtime":1689800137401,"results":"921","hashOfConfig":"660"},{"size":2420,"mtime":1689800137401,"results":"922","hashOfConfig":"660"},{"size":14165,"mtime":1689800137401,"results":"923","hashOfConfig":"660"},{"size":1159,"mtime":1677594530028,"results":"924","hashOfConfig":"660"},{"size":3185,"mtime":1689800137401,"results":"925","hashOfConfig":"660"},{"size":639,"mtime":1689800137401,"results":"926","hashOfConfig":"660"},{"size":12287,"mtime":1689800137401,"results":"927","hashOfConfig":"660"},{"size":11600,"mtime":1689800137401,"results":"928","hashOfConfig":"660"},{"size":881,"mtime":1689800137401,"results":"929","hashOfConfig":"660"},{"size":731,"mtime":1689800137401,"results":"930","hashOfConfig":"660"},{"size":6133,"mtime":1689796871610,"results":"931","hashOfConfig":"660"},{"size":6779,"mtime":1689800138369,"results":"932","hashOfConfig":"660"},{"size":2820,"mtime":1689800138369,"results":"933","hashOfConfig":"660"},{"size":1457,"mtime":1689796871610,"results":"934","hashOfConfig":"660"},{"size":3673,"mtime":1689800137401,"results":"935","hashOfConfig":"660"},{"size":1048,"mtime":1689796871611,"results":"936","hashOfConfig":"660"},{"size":962,"mtime":1689796871611,"results":"937","hashOfConfig":"660"},{"size":2366,"mtime":1689800137401,"results":"938","hashOfConfig":"660"},{"size":2775,"mtime":1677594530029,"results":"939","hashOfConfig":"660"},{"size":5011,"mtime":1689800137401,"results":"940","hashOfConfig":"660"},{"size":1599,"mtime":1689800137401,"results":"941","hashOfConfig":"660"},{"size":5143,"mtime":1677594530030,"results":"942","hashOfConfig":"660"},{"size":4110,"mtime":1689800137401,"results":"943","hashOfConfig":"660"},{"size":4939,"mtime":1678123137937,"results":"944","hashOfConfig":"660"},{"size":377,"mtime":1676909480901,"results":"945","hashOfConfig":"660"},{"size":2756,"mtime":1677594530031,"results":"946","hashOfConfig":"660"},{"size":2306,"mtime":1681848387108,"results":"947","hashOfConfig":"660"},{"size":2494,"mtime":1677594530031,"results":"948","hashOfConfig":"660"},{"size":2558,"mtime":1677594530031,"results":"949","hashOfConfig":"660"},{"size":8886,"mtime":1677594530032,"results":"950","hashOfConfig":"660"},{"size":4295,"mtime":1689800138369,"results":"951","hashOfConfig":"660"},{"size":2002,"mtime":1677594530032,"results":"952","hashOfConfig":"660"},{"size":2212,"mtime":1677594530032,"results":"953","hashOfConfig":"660"},{"size":7974,"mtime":1689800137401,"results":"954","hashOfConfig":"660"},{"size":3077,"mtime":1677594530033,"results":"955","hashOfConfig":"660"},{"size":1112,"mtime":1677594530033,"results":"956","hashOfConfig":"660"},{"size":1573,"mtime":1677594530033,"results":"957","hashOfConfig":"660"},{"size":534,"mtime":1677594530033,"results":"958","hashOfConfig":"660"},{"size":2787,"mtime":1689800137401,"results":"959","hashOfConfig":"660"},{"size":1037,"mtime":1689796871611,"results":"960","hashOfConfig":"660"},{"size":5381,"mtime":1689796871611,"results":"961","hashOfConfig":"660"},{"size":3731,"mtime":1689800137401,"results":"962","hashOfConfig":"660"},{"size":1707,"mtime":1689800137401,"results":"963","hashOfConfig":"660"},{"size":2439,"mtime":1689800137401,"results":"964","hashOfConfig":"660"},{"size":3022,"mtime":1689796871612,"results":"965","hashOfConfig":"660"},{"size":946,"mtime":1689796871612,"results":"966","hashOfConfig":"660"},{"size":2395,"mtime":1689796871612,"results":"967","hashOfConfig":"660"},{"size":910,"mtime":1689796871612,"results":"968","hashOfConfig":"660"},{"size":2826,"mtime":1689796871612,"results":"969","hashOfConfig":"660"},{"size":830,"mtime":1689800137401,"results":"970","hashOfConfig":"660"},{"size":608,"mtime":1689796871612,"results":"971","hashOfConfig":"660"},{"size":495,"mtime":1689796871612,"results":"972","hashOfConfig":"660"},{"size":1611,"mtime":1689796871612,"results":"973","hashOfConfig":"660"},{"size":1555,"mtime":1689796871612,"results":"974","hashOfConfig":"660"},{"size":2352,"mtime":1689796871612,"results":"975","hashOfConfig":"660"},{"size":3004,"mtime":1689796871613,"results":"976","hashOfConfig":"660"},{"size":1592,"mtime":1689796871613,"results":"977","hashOfConfig":"660"},{"size":1696,"mtime":1681751776083,"results":"978","hashOfConfig":"660"},{"size":1467,"mtime":1689800137401,"results":"979","hashOfConfig":"660"},{"size":1815,"mtime":1689800137402,"results":"980","hashOfConfig":"660"},{"size":2825,"mtime":1689796871613,"results":"981","hashOfConfig":"660"},{"size":1168,"mtime":1689796871613,"results":"982","hashOfConfig":"660"},{"size":1069,"mtime":1689796871613,"results":"983","hashOfConfig":"660"},{"size":2115,"mtime":1689800137402,"results":"984","hashOfConfig":"660"},{"size":3089,"mtime":1689796871614,"results":"985","hashOfConfig":"660"},{"size":3132,"mtime":1689800132417,"results":"986","hashOfConfig":"660"},{"size":1042,"mtime":1677594530036,"results":"987","hashOfConfig":"660"},{"size":1002,"mtime":1689796871615,"results":"988","hashOfConfig":"660"},{"size":838,"mtime":1677594530036,"results":"989","hashOfConfig":"660"},{"size":2461,"mtime":1689796871615,"results":"990","hashOfConfig":"660"},{"size":1114,"mtime":1677594530037,"results":"991","hashOfConfig":"660"},{"size":1415,"mtime":1681233635043,"results":"992","hashOfConfig":"660"},{"size":3919,"mtime":1689800137401,"results":"993","hashOfConfig":"660"},{"size":2541,"mtime":1677594530037,"results":"994","hashOfConfig":"660"},{"size":1877,"mtime":1689800137401,"results":"995","hashOfConfig":"660"},{"size":2437,"mtime":1677594530037,"results":"996","hashOfConfig":"660"},{"size":1688,"mtime":1679510865400,"results":"997","hashOfConfig":"660"},{"size":3242,"mtime":1689800132417,"results":"998","hashOfConfig":"660"},{"size":2738,"mtime":1689796871616,"results":"999","hashOfConfig":"660"},{"size":2104,"mtime":1679510865400,"results":"1000","hashOfConfig":"660"},{"size":709,"mtime":1689800137402,"results":"1001","hashOfConfig":"660"},{"size":2450,"mtime":1689800137402,"results":"1002","hashOfConfig":"660"},{"size":818,"mtime":1689800137402,"results":"1003","hashOfConfig":"660"},{"size":3859,"mtime":1681233635043,"results":"1004","hashOfConfig":"660"},{"size":1883,"mtime":1689800132417,"results":"1005","hashOfConfig":"660"},{"size":2715,"mtime":1689800137402,"results":"1006","hashOfConfig":"660"},{"size":2639,"mtime":1689800137402,"results":"1007","hashOfConfig":"660"},{"size":6897,"mtime":1689800137402,"results":"1008","hashOfConfig":"660"},{"size":1753,"mtime":1689796871617,"results":"1009","hashOfConfig":"660"},{"size":951,"mtime":1677594530039,"results":"1010","hashOfConfig":"660"},{"size":463,"mtime":1679510865400,"results":"1011","hashOfConfig":"660"},{"size":2152,"mtime":1677594530039,"results":"1012","hashOfConfig":"660"},{"size":3363,"mtime":1689796871617,"results":"1013","hashOfConfig":"660"},{"size":1117,"mtime":1689800137402,"results":"1014","hashOfConfig":"660"},{"size":8833,"mtime":1689800137402,"results":"1015","hashOfConfig":"660"},{"size":1543,"mtime":1689796871617,"results":"1016","hashOfConfig":"660"},{"size":2414,"mtime":1677594530040,"results":"1017","hashOfConfig":"660"},{"size":4007,"mtime":1689800137402,"results":"1018","hashOfConfig":"660"},{"size":2321,"mtime":1689800137402,"results":"1019","hashOfConfig":"660"},{"size":3013,"mtime":1689800137402,"results":"1020","hashOfConfig":"660"},{"size":3238,"mtime":1689800137402,"results":"1021","hashOfConfig":"660"},{"size":3594,"mtime":1689796871619,"results":"1022","hashOfConfig":"660"},{"size":2792,"mtime":1689796871619,"results":"1023","hashOfConfig":"660"},{"size":5466,"mtime":1689800137402,"results":"1024","hashOfConfig":"660"},{"size":831,"mtime":1689800137402,"results":"1025","hashOfConfig":"660"},{"size":905,"mtime":1689796871619,"results":"1026","hashOfConfig":"660"},{"size":1318,"mtime":1689796871619,"results":"1027","hashOfConfig":"660"},{"size":769,"mtime":1689796871620,"results":"1028","hashOfConfig":"660"},{"size":967,"mtime":1689796871620,"results":"1029","hashOfConfig":"660"},{"size":7162,"mtime":1689796871620,"results":"1030","hashOfConfig":"660"},{"size":1642,"mtime":1689796871620,"results":"1031","hashOfConfig":"660"},{"size":930,"mtime":1689796871620,"results":"1032","hashOfConfig":"660"},{"size":616,"mtime":1679510865401,"results":"1033","hashOfConfig":"660"},{"size":385,"mtime":1689796871620,"results":"1034","hashOfConfig":"660"},{"size":1203,"mtime":1689796871621,"results":"1035","hashOfConfig":"660"},{"size":4243,"mtime":1689796871621,"results":"1036","hashOfConfig":"660"},{"size":829,"mtime":1677594530043,"results":"1037","hashOfConfig":"660"},{"size":2170,"mtime":1676909480909,"results":"1038","hashOfConfig":"660"},{"size":2641,"mtime":1679510865402,"results":"1039","hashOfConfig":"660"},{"size":2211,"mtime":1677594530043,"results":"1040","hashOfConfig":"660"},{"size":1326,"mtime":1677594530043,"results":"1041","hashOfConfig":"660"},{"size":1361,"mtime":1677594530043,"results":"1042","hashOfConfig":"660"},{"size":2011,"mtime":1677594530043,"results":"1043","hashOfConfig":"660"},{"size":739,"mtime":1677594530044,"results":"1044","hashOfConfig":"660"},{"size":704,"mtime":1676909480910,"results":"1045","hashOfConfig":"660"},{"size":693,"mtime":1677594530044,"results":"1046","hashOfConfig":"660"},{"size":962,"mtime":1676909480910,"results":"1047","hashOfConfig":"660"},{"size":3581,"mtime":1689800137402,"results":"1048","hashOfConfig":"660"},{"size":1332,"mtime":1677594530044,"results":"1049","hashOfConfig":"660"},{"size":1456,"mtime":1677594530044,"results":"1050","hashOfConfig":"660"},{"size":907,"mtime":1676909480910,"results":"1051","hashOfConfig":"660"},{"size":1111,"mtime":1677594530044,"results":"1052","hashOfConfig":"660"},{"size":728,"mtime":1689796871621,"results":"1053","hashOfConfig":"660"},{"size":784,"mtime":1677594530045,"results":"1054","hashOfConfig":"660"},{"size":2177,"mtime":1677594530045,"results":"1055","hashOfConfig":"660"},{"size":949,"mtime":1677594530045,"results":"1056","hashOfConfig":"660"},{"size":816,"mtime":1689800137402,"results":"1057","hashOfConfig":"660"},{"size":3710,"mtime":1689800137402,"results":"1058","hashOfConfig":"660"},{"size":3410,"mtime":1689800132417,"results":"1059","hashOfConfig":"660"},{"size":2366,"mtime":1689800132417,"results":"1060","hashOfConfig":"660"},{"size":2495,"mtime":1689800137402,"results":"1061","hashOfConfig":"660"},{"size":1377,"mtime":1689800137402,"results":"1062","hashOfConfig":"660"},{"size":2539,"mtime":1689800137402,"results":"1063","hashOfConfig":"660"},{"size":2029,"mtime":1677594530046,"results":"1064","hashOfConfig":"660"},{"size":3252,"mtime":1677594530047,"results":"1065","hashOfConfig":"660"},{"size":4567,"mtime":1689800137402,"results":"1066","hashOfConfig":"660"},{"size":617,"mtime":1677594530047,"results":"1067","hashOfConfig":"660"},{"size":2010,"mtime":1689800132417,"results":"1068","hashOfConfig":"660"},{"size":13620,"mtime":1689796871621,"results":"1069","hashOfConfig":"660"},{"size":7600,"mtime":1689800137402,"results":"1070","hashOfConfig":"660"},{"size":2557,"mtime":1677594530048,"results":"1071","hashOfConfig":"660"},{"size":498,"mtime":1677594530048,"results":"1072","hashOfConfig":"660"},{"size":2867,"mtime":1677594530048,"results":"1073","hashOfConfig":"660"},{"size":2041,"mtime":1677594530048,"results":"1074","hashOfConfig":"660"},{"size":3122,"mtime":1677594530048,"results":"1075","hashOfConfig":"660"},{"size":768,"mtime":1677594530049,"results":"1076","hashOfConfig":"660"},{"size":2461,"mtime":1677594530049,"results":"1077","hashOfConfig":"660"},{"size":630,"mtime":1677594530049,"results":"1078","hashOfConfig":"660"},{"size":2980,"mtime":1689796871622,"results":"1079","hashOfConfig":"660"},{"size":2663,"mtime":1689796871622,"results":"1080","hashOfConfig":"660"},{"size":1284,"mtime":1689796871622,"results":"1081","hashOfConfig":"660"},{"size":2518,"mtime":1689796871622,"results":"1082","hashOfConfig":"660"},{"size":1389,"mtime":1689796871622,"results":"1083","hashOfConfig":"660"},{"size":983,"mtime":1689800137402,"results":"1084","hashOfConfig":"660"},{"size":642,"mtime":1689796871622,"results":"1085","hashOfConfig":"660"},{"size":755,"mtime":1689800137402,"results":"1086","hashOfConfig":"660"},{"size":1168,"mtime":1689796871622,"results":"1087","hashOfConfig":"660"},{"size":1445,"mtime":1689796871623,"results":"1088","hashOfConfig":"660"},{"size":1506,"mtime":1689800132417,"results":"1089","hashOfConfig":"660"},{"size":2303,"mtime":1689796871623,"results":"1090","hashOfConfig":"660"},{"size":113,"mtime":1689796871623,"results":"1091","hashOfConfig":"660"},{"size":1143,"mtime":1689800138369,"results":"1092","hashOfConfig":"660"},{"size":796,"mtime":1689796871623,"results":"1093","hashOfConfig":"660"},{"size":1437,"mtime":1689796871623,"results":"1094","hashOfConfig":"660"},{"size":1305,"mtime":1689800137402,"results":"1095","hashOfConfig":"660"},{"size":1312,"mtime":1689800137402,"results":"1096","hashOfConfig":"660"},{"size":118,"mtime":1689796871623,"results":"1097","hashOfConfig":"660"},{"size":8129,"mtime":1689796871624,"results":"1098","hashOfConfig":"660"},{"size":2689,"mtime":1689796871624,"results":"1099","hashOfConfig":"660"},{"size":2268,"mtime":1689800137402,"results":"1100","hashOfConfig":"660"},{"size":1116,"mtime":1677594530049,"results":"1101","hashOfConfig":"660"},{"size":339,"mtime":1677594530049,"results":"1102","hashOfConfig":"660"},{"size":2205,"mtime":1689800132417,"results":"1103","hashOfConfig":"660"},{"size":2162,"mtime":1689796871624,"results":"1104","hashOfConfig":"660"},{"size":391,"mtime":1677594530050,"results":"1105","hashOfConfig":"660"},{"size":1076,"mtime":1689796871624,"results":"1106","hashOfConfig":"660"},{"size":1720,"mtime":1689800137402,"results":"1107","hashOfConfig":"660"},{"size":795,"mtime":1689800137402,"results":"1108","hashOfConfig":"660"},{"size":1620,"mtime":1689800137402,"results":"1109","hashOfConfig":"660"},{"size":2475,"mtime":1689800137402,"results":"1110","hashOfConfig":"660"},{"size":466,"mtime":1689796871625,"results":"1111","hashOfConfig":"660"},{"size":1288,"mtime":1689796871625,"results":"1112","hashOfConfig":"660"},{"size":2666,"mtime":1689800137402,"results":"1113","hashOfConfig":"660"},{"size":1065,"mtime":1677594530051,"results":"1114","hashOfConfig":"660"},{"size":2558,"mtime":1677594530051,"results":"1115","hashOfConfig":"660"},{"size":1995,"mtime":1689796871625,"results":"1116","hashOfConfig":"660"},{"size":1111,"mtime":1689800137402,"results":"1117","hashOfConfig":"660"},{"size":1954,"mtime":1689796871626,"results":"1118","hashOfConfig":"660"},{"size":2785,"mtime":1689800137402,"results":"1119","hashOfConfig":"660"},{"size":5020,"mtime":1689796871626,"results":"1120","hashOfConfig":"660"},{"size":5531,"mtime":1681308148819,"results":"1121","hashOfConfig":"660"},{"size":2372,"mtime":1689800137402,"results":"1122","hashOfConfig":"660"},{"size":2070,"mtime":1677594530052,"results":"1123","hashOfConfig":"660"},{"size":1451,"mtime":1677594530052,"results":"1124","hashOfConfig":"660"},{"size":531,"mtime":1677594530052,"results":"1125","hashOfConfig":"660"},{"size":3085,"mtime":1679510865403,"results":"1126","hashOfConfig":"660"},{"size":1241,"mtime":1677594530052,"results":"1127","hashOfConfig":"660"},{"size":3131,"mtime":1677594530052,"results":"1128","hashOfConfig":"660"},{"size":1567,"mtime":1679510865404,"results":"1129","hashOfConfig":"660"},{"size":276,"mtime":1677594530053,"results":"1130","hashOfConfig":"660"},{"size":1272,"mtime":1677594530053,"results":"1131","hashOfConfig":"660"},{"size":568,"mtime":1677594530053,"results":"1132","hashOfConfig":"660"},{"size":7583,"mtime":1677594530053,"results":"1133","hashOfConfig":"660"},{"size":2367,"mtime":1689800137402,"results":"1134","hashOfConfig":"660"},{"size":1682,"mtime":1689800137402,"results":"1135","hashOfConfig":"660"},{"size":1499,"mtime":1689800137402,"results":"1136","hashOfConfig":"660"},{"size":3512,"mtime":1689796871626,"results":"1137","hashOfConfig":"660"},{"size":4844,"mtime":1689800132417,"results":"1138","hashOfConfig":"660"},{"size":2841,"mtime":1689796871626,"results":"1139","hashOfConfig":"660"},{"size":2308,"mtime":1689796871626,"results":"1140","hashOfConfig":"660"},{"size":729,"mtime":1689796871627,"results":"1141","hashOfConfig":"660"},{"size":358,"mtime":1689796871627,"results":"1142","hashOfConfig":"660"},{"size":760,"mtime":1689796871627,"results":"1143","hashOfConfig":"660"},{"size":1099,"mtime":1689796871627,"results":"1144","hashOfConfig":"660"},{"size":1333,"mtime":1689796871627,"results":"1145","hashOfConfig":"660"},{"size":3627,"mtime":1677594530053,"results":"1146","hashOfConfig":"660"},{"size":2268,"mtime":1677594530053,"results":"1147","hashOfConfig":"660"},{"size":1455,"mtime":1689800137402,"results":"1148","hashOfConfig":"660"},{"size":163,"mtime":1689796871627,"results":"1149","hashOfConfig":"660"},{"size":823,"mtime":1689800760280,"results":"1150","hashOfConfig":"660"},{"size":992,"mtime":1677594530053,"results":"1151","hashOfConfig":"660"},{"size":1405,"mtime":1689796871627,"results":"1152","hashOfConfig":"660"},{"size":742,"mtime":1689800137402,"results":"1153","hashOfConfig":"660"},{"size":2501,"mtime":1689796871627,"results":"1154","hashOfConfig":"660"},{"size":3947,"mtime":1689796871627,"results":"1155","hashOfConfig":"660"},{"size":412,"mtime":1689796871628,"results":"1156","hashOfConfig":"660"},{"size":1923,"mtime":1681233635044,"results":"1157","hashOfConfig":"660"},{"size":1834,"mtime":1689796871628,"results":"1158","hashOfConfig":"660"},{"size":2196,"mtime":1689800132417,"results":"1159","hashOfConfig":"660"},{"size":2667,"mtime":1677594530054,"results":"1160","hashOfConfig":"660"},{"size":6769,"mtime":1689796871628,"results":"1161","hashOfConfig":"660"},{"size":322,"mtime":1677594530055,"results":"1162","hashOfConfig":"660"},{"size":812,"mtime":1689796871628,"results":"1163","hashOfConfig":"660"},{"size":1346,"mtime":1689796871628,"results":"1164","hashOfConfig":"660"},{"size":1644,"mtime":1677594530055,"results":"1165","hashOfConfig":"660"},{"size":3191,"mtime":1689796871629,"results":"1166","hashOfConfig":"660"},{"size":2034,"mtime":1681233635045,"results":"1167","hashOfConfig":"660"},{"size":1084,"mtime":1677594530055,"results":"1168","hashOfConfig":"660"},{"size":2396,"mtime":1677594530056,"results":"1169","hashOfConfig":"660"},{"size":2284,"mtime":1689796871629,"results":"1170","hashOfConfig":"660"},{"size":5157,"mtime":1689800137402,"results":"1171","hashOfConfig":"660"},{"size":983,"mtime":1689796871629,"results":"1172","hashOfConfig":"660"},{"size":1343,"mtime":1681233635045,"results":"1173","hashOfConfig":"660"},{"size":524,"mtime":1677594530056,"results":"1174","hashOfConfig":"660"},{"size":1020,"mtime":1689800753295,"results":"1175","hashOfConfig":"660"},{"size":1584,"mtime":1677594530056,"results":"1176","hashOfConfig":"660"},{"size":1993,"mtime":1689796871629,"results":"1177","hashOfConfig":"660"},{"size":1493,"mtime":1689796871629,"results":"1178","hashOfConfig":"660"},{"size":1288,"mtime":1689796871629,"results":"1179","hashOfConfig":"660"},{"size":1856,"mtime":1677594530057,"results":"1180","hashOfConfig":"660"},{"size":7044,"mtime":1677594530057,"results":"1181","hashOfConfig":"660"},{"size":1862,"mtime":1689796871629,"results":"1182","hashOfConfig":"660"},{"size":1637,"mtime":1689796871630,"results":"1183","hashOfConfig":"660"},{"size":3165,"mtime":1689796871630,"results":"1184","hashOfConfig":"660"},{"size":2883,"mtime":1689800137402,"results":"1185","hashOfConfig":"660"},{"size":721,"mtime":1689796871630,"results":"1186","hashOfConfig":"660"},{"size":657,"mtime":1677594530058,"results":"1187","hashOfConfig":"660"},{"size":619,"mtime":1689796871630,"results":"1188","hashOfConfig":"660"},{"size":2010,"mtime":1677594530058,"results":"1189","hashOfConfig":"660"},{"size":277,"mtime":1677594530058,"results":"1190","hashOfConfig":"660"},{"size":297,"mtime":1689796871630,"results":"1191","hashOfConfig":"660"},{"size":1341,"mtime":1677594530058,"results":"1192","hashOfConfig":"660"},{"size":1715,"mtime":1689796871630,"results":"1193","hashOfConfig":"660"},{"size":2010,"mtime":1689800138369,"results":"1194","hashOfConfig":"660"},{"size":594,"mtime":1681233635046,"results":"1195","hashOfConfig":"660"},{"size":4053,"mtime":1689796871631,"results":"1196","hashOfConfig":"660"},{"size":949,"mtime":1689796871631,"results":"1197","hashOfConfig":"660"},{"size":467,"mtime":1677594530059,"results":"1198","hashOfConfig":"660"},{"size":4626,"mtime":1689796871631,"results":"1199","hashOfConfig":"660"},{"size":2246,"mtime":1689796871631,"results":"1200","hashOfConfig":"660"},{"size":1292,"mtime":1689796871631,"results":"1201","hashOfConfig":"660"},{"size":751,"mtime":1689796871631,"results":"1202","hashOfConfig":"660"},{"size":1393,"mtime":1689796871631,"results":"1203","hashOfConfig":"660"},{"size":2422,"mtime":1689800137402,"results":"1204","hashOfConfig":"660"},{"size":7498,"mtime":1689796871632,"results":"1205","hashOfConfig":"660"},{"size":10333,"mtime":1689796871632,"results":"1206","hashOfConfig":"660"},{"size":2058,"mtime":1681233635047,"results":"1207","hashOfConfig":"660"},{"size":3465,"mtime":1689796871632,"results":"1208","hashOfConfig":"660"},{"size":2234,"mtime":1689800132417,"results":"1209","hashOfConfig":"660"},{"size":1568,"mtime":1681233635047,"results":"1210","hashOfConfig":"660"},{"size":1810,"mtime":1689800132417,"results":"1211","hashOfConfig":"660"},{"size":1429,"mtime":1681233635048,"results":"1212","hashOfConfig":"660"},{"size":1369,"mtime":1689800132417,"results":"1213","hashOfConfig":"660"},{"size":1472,"mtime":1689796871632,"results":"1214","hashOfConfig":"660"},{"size":2287,"mtime":1689800132417,"results":"1215","hashOfConfig":"660"},{"size":705,"mtime":1677594530061,"results":"1216","hashOfConfig":"660"},{"size":3100,"mtime":1689800137402,"results":"1217","hashOfConfig":"660"},{"size":1419,"mtime":1677594530061,"results":"1218","hashOfConfig":"660"},{"size":3297,"mtime":1689800137402,"results":"1219","hashOfConfig":"660"},{"size":151,"mtime":1677594530061,"results":"1220","hashOfConfig":"660"},{"size":2571,"mtime":1677594530061,"results":"1221","hashOfConfig":"660"},{"size":819,"mtime":1681233635048,"results":"1222","hashOfConfig":"660"},{"size":3038,"mtime":1689796871632,"results":"1223","hashOfConfig":"660"},{"size":1733,"mtime":1689800137402,"results":"1224","hashOfConfig":"660"},{"size":2455,"mtime":1689800137402,"results":"1225","hashOfConfig":"660"},{"size":3346,"mtime":1689800137402,"results":"1226","hashOfConfig":"660"},{"size":799,"mtime":1689800137402,"results":"1227","hashOfConfig":"660"},{"size":9276,"mtime":1689796861857,"results":"1228","hashOfConfig":"660"},{"size":13262,"mtime":1689796871633,"results":"1229","hashOfConfig":"660"},{"size":1324,"mtime":1677594530062,"results":"1230","hashOfConfig":"660"},{"size":1274,"mtime":1689796871633,"results":"1231","hashOfConfig":"660"},{"size":2716,"mtime":1677594530062,"results":"1232","hashOfConfig":"660"},{"size":562,"mtime":1677594530062,"results":"1233","hashOfConfig":"660"},{"size":1409,"mtime":1689796871633,"results":"1234","hashOfConfig":"660"},{"size":981,"mtime":1677594530063,"results":"1235","hashOfConfig":"660"},{"size":3210,"mtime":1677594530063,"results":"1236","hashOfConfig":"660"},{"size":1057,"mtime":1681233635049,"results":"1237","hashOfConfig":"660"},{"size":2337,"mtime":1677594530063,"results":"1238","hashOfConfig":"660"},{"size":879,"mtime":1677594530063,"results":"1239","hashOfConfig":"660"},{"size":1414,"mtime":1677594530063,"results":"1240","hashOfConfig":"660"},{"size":0,"mtime":1676909480924,"results":"1241","hashOfConfig":"660"},{"size":3016,"mtime":1689796871633,"results":"1242","hashOfConfig":"660"},{"size":2325,"mtime":1677594530063,"results":"1243","hashOfConfig":"660"},{"size":2399,"mtime":1689796871634,"results":"1244","hashOfConfig":"660"},{"size":489,"mtime":1676909480924,"results":"1245","hashOfConfig":"660"},{"size":3219,"mtime":1689796871634,"results":"1246","hashOfConfig":"660"},{"size":381,"mtime":1689796871634,"results":"1247","hashOfConfig":"660"},{"size":76,"mtime":1676909480924,"results":"1248","hashOfConfig":"660"},{"size":245,"mtime":1677594530064,"results":"1249","hashOfConfig":"660"},{"size":316,"mtime":1689796871634,"results":"1250","hashOfConfig":"660"},{"size":433,"mtime":1677594530064,"results":"1251","hashOfConfig":"660"},{"size":416,"mtime":1677594530064,"results":"1252","hashOfConfig":"660"},{"size":1736,"mtime":1689796871634,"results":"1253","hashOfConfig":"660"},{"size":309,"mtime":1677594530064,"results":"1254","hashOfConfig":"660"},{"size":657,"mtime":1689796871634,"results":"1255","hashOfConfig":"660"},{"size":947,"mtime":1677594530064,"results":"1256","hashOfConfig":"660"},{"size":323,"mtime":1677594530064,"results":"1257","hashOfConfig":"660"},{"size":317,"mtime":1677594530064,"results":"1258","hashOfConfig":"660"},{"size":2546,"mtime":1689796871634,"results":"1259","hashOfConfig":"660"},{"size":473,"mtime":1677594530065,"results":"1260","hashOfConfig":"660"},{"size":485,"mtime":1677594530065,"results":"1261","hashOfConfig":"660"},{"size":284,"mtime":1677594530065,"results":"1262","hashOfConfig":"660"},{"size":672,"mtime":1677594530065,"results":"1263","hashOfConfig":"660"},{"size":1481,"mtime":1677594530065,"results":"1264","hashOfConfig":"660"},{"size":315,"mtime":1678122044361,"results":"1265","hashOfConfig":"660"},{"size":280,"mtime":1677594530065,"results":"1266","hashOfConfig":"660"},{"size":2132,"mtime":1677594530065,"results":"1267","hashOfConfig":"660"},{"size":326,"mtime":1677594530065,"results":"1268","hashOfConfig":"660"},{"size":469,"mtime":1677594530065,"results":"1269","hashOfConfig":"660"},{"size":261,"mtime":1677594530065,"results":"1270","hashOfConfig":"660"},{"size":313,"mtime":1677594530066,"results":"1271","hashOfConfig":"660"},{"size":3178,"mtime":1689796871634,"results":"1272","hashOfConfig":"660"},{"size":1074,"mtime":1677594530066,"results":"1273","hashOfConfig":"660"},{"size":2220,"mtime":1689796871634,"results":"1274","hashOfConfig":"660"},{"size":16834,"mtime":1689796871635,"results":"1275","hashOfConfig":"660"},{"size":314,"mtime":1676909480926,"results":"1276","hashOfConfig":"660"},{"size":4120,"mtime":1689796871635,"results":"1277","hashOfConfig":"660"},{"size":885,"mtime":1677594530066,"results":"1278","hashOfConfig":"660"},{"size":1085,"mtime":1689796871635,"results":"1279","hashOfConfig":"660"},{"size":1683,"mtime":1689796871635,"results":"1280","hashOfConfig":"660"},{"size":363,"mtime":1689796871635,"results":"1281","hashOfConfig":"660"},{"size":4735,"mtime":1681233635049,"results":"1282","hashOfConfig":"660"},{"size":1248,"mtime":1676909480927,"results":"1283","hashOfConfig":"660"},{"size":14900,"mtime":1677594530066,"results":"1284","hashOfConfig":"660"},{"size":396,"mtime":1676909480927,"results":"1285","hashOfConfig":"660"},{"size":3788,"mtime":1677594530066,"results":"1286","hashOfConfig":"660"},{"size":727,"mtime":1676909480927,"results":"1287","hashOfConfig":"660"},{"size":2987,"mtime":1677594530067,"results":"1288","hashOfConfig":"660"},{"size":138,"mtime":1676909480927,"results":"1289","hashOfConfig":"660"},{"size":4333,"mtime":1689796871635,"results":"1290","hashOfConfig":"660"},{"size":2392,"mtime":1677594530067,"results":"1291","hashOfConfig":"660"},{"size":694,"mtime":1679510865405,"results":"1292","hashOfConfig":"660"},{"size":396,"mtime":1689796871635,"results":"1293","hashOfConfig":"660"},{"size":255,"mtime":1676909480928,"results":"1294","hashOfConfig":"660"},{"size":1050,"mtime":1678123137945,"results":"1295","hashOfConfig":"660"},{"size":4268,"mtime":1689796871635,"results":"1296","hashOfConfig":"660"},{"size":3665,"mtime":1677594530067,"results":"1297","hashOfConfig":"660"},{"size":342,"mtime":1676909480928,"results":"1298","hashOfConfig":"660"},{"size":7570,"mtime":1689796871635,"results":"1299","hashOfConfig":"660"},{"size":777,"mtime":1689796871636,"results":"1300","hashOfConfig":"660"},{"size":1763,"mtime":1677594530068,"results":"1301","hashOfConfig":"660"},{"size":244,"mtime":1676909480928,"results":"1302","hashOfConfig":"660"},{"size":886,"mtime":1677594530068,"results":"1303","hashOfConfig":"660"},{"size":322,"mtime":1676909480928,"results":"1304","hashOfConfig":"660"},{"size":1437,"mtime":1677594530068,"results":"1305","hashOfConfig":"660"},{"size":4987,"mtime":1677594530068,"results":"1306","hashOfConfig":"660"},{"size":1999,"mtime":1677594530068,"results":"1307","hashOfConfig":"660"},{"size":1405,"mtime":1677594530068,"results":"1308","hashOfConfig":"660"},{"size":1316,"mtime":1677594530069,"results":"1309","hashOfConfig":"660"},{"size":2708,"mtime":1677594530069,"results":"1310","hashOfConfig":"660"},{"size":1416,"mtime":1677594530069,"results":"1311","hashOfConfig":"660"},{"size":1405,"mtime":1677594530069,"results":"1312","hashOfConfig":"660"},{"size":3303,"mtime":1677594530069,"results":"1313","hashOfConfig":"660"},{"size":1371,"mtime":1677594530069,"results":"1314","hashOfConfig":"660"},{"size":1197,"mtime":1677594530069,"results":"1315","hashOfConfig":"660"},{"size":5358,"mtime":1677594530069,"results":"1316","hashOfConfig":"660"},{"size":2775,"mtime":1689866495041,"results":"1317","hashOfConfig":"660"},{"filePath":"1318","messages":"1319","suppressedMessages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321"},"r1qko8",{"filePath":"1322","messages":"1323","suppressedMessages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","suppressedMessages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1328","messages":"1329","suppressedMessages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1331","messages":"1332","suppressedMessages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1334","messages":"1335","suppressedMessages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1337"},{"filePath":"1338","messages":"1339","suppressedMessages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1341","messages":"1342","suppressedMessages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1344","messages":"1345","suppressedMessages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1347","messages":"1348","suppressedMessages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1350","messages":"1351","suppressedMessages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1353","messages":"1354","suppressedMessages":"1355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1356","messages":"1357","suppressedMessages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1359","messages":"1360","suppressedMessages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1362","messages":"1363","suppressedMessages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1365","messages":"1366","suppressedMessages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1368","messages":"1369","suppressedMessages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1371","messages":"1372","suppressedMessages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1374","messages":"1375","suppressedMessages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1377","messages":"1378","suppressedMessages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1380","messages":"1381","suppressedMessages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1383","messages":"1384","suppressedMessages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1386","messages":"1387","suppressedMessages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389"},{"filePath":"1390","messages":"1391","suppressedMessages":"1392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1393","messages":"1394","suppressedMessages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1396","messages":"1397","suppressedMessages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1399","messages":"1400","suppressedMessages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1402","messages":"1403","suppressedMessages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1405","messages":"1406","suppressedMessages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1408","messages":"1409","suppressedMessages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1411","messages":"1412","suppressedMessages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1414","messages":"1415","suppressedMessages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1417","messages":"1418","suppressedMessages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1420","messages":"1421","suppressedMessages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1423","messages":"1424","suppressedMessages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1426","messages":"1427","suppressedMessages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1429","messages":"1430","suppressedMessages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1432","messages":"1433","suppressedMessages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1435","messages":"1436","suppressedMessages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1438","messages":"1439","suppressedMessages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1441","messages":"1442","suppressedMessages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1444","messages":"1445","suppressedMessages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1447","messages":"1448","suppressedMessages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1450","messages":"1451","suppressedMessages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1453","messages":"1454","suppressedMessages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1456","messages":"1457","suppressedMessages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1459","messages":"1460","suppressedMessages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1462"},{"filePath":"1463","messages":"1464","suppressedMessages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1466","messages":"1467","suppressedMessages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1469","messages":"1470","suppressedMessages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1472","messages":"1473","suppressedMessages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1475","messages":"1476","suppressedMessages":"1477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1478","messages":"1479","suppressedMessages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1481","messages":"1482","suppressedMessages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1484","messages":"1485","suppressedMessages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1487","messages":"1488","suppressedMessages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1490","messages":"1491","suppressedMessages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1493","messages":"1494","suppressedMessages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1496","messages":"1497","suppressedMessages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1499","messages":"1500","suppressedMessages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1502","messages":"1503","suppressedMessages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1505","messages":"1506","suppressedMessages":"1507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1508","messages":"1509","suppressedMessages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1511","messages":"1512","suppressedMessages":"1513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1514"},{"filePath":"1515","messages":"1516","suppressedMessages":"1517","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518"},{"filePath":"1519","messages":"1520","suppressedMessages":"1521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1522"},{"filePath":"1523","messages":"1524","suppressedMessages":"1525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1526","messages":"1527","suppressedMessages":"1528","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1529"},{"filePath":"1530","messages":"1531","suppressedMessages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533"},{"filePath":"1534","messages":"1535","suppressedMessages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1537","messages":"1538","suppressedMessages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1540","messages":"1541","suppressedMessages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1543","messages":"1544","suppressedMessages":"1545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1546","messages":"1547","suppressedMessages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1549"},{"filePath":"1550","messages":"1551","suppressedMessages":"1552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1553","messages":"1554","suppressedMessages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1556","messages":"1557","suppressedMessages":"1558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1559","messages":"1560","suppressedMessages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1562","messages":"1563","suppressedMessages":"1564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1565","messages":"1566","suppressedMessages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1568","messages":"1569","suppressedMessages":"1570","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1571"},{"filePath":"1572","messages":"1573","suppressedMessages":"1574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1575","messages":"1576","suppressedMessages":"1577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1578","messages":"1579","suppressedMessages":"1580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1581","messages":"1582","suppressedMessages":"1583","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1584"},{"filePath":"1585","messages":"1586","suppressedMessages":"1587","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588"},{"filePath":"1589","messages":"1590","suppressedMessages":"1591","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1592"},{"filePath":"1593","messages":"1594","suppressedMessages":"1595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1596","messages":"1597","suppressedMessages":"1598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1599","messages":"1600","suppressedMessages":"1601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1602","messages":"1603","suppressedMessages":"1604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1605","messages":"1606","suppressedMessages":"1607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1608","messages":"1609","suppressedMessages":"1610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1611","messages":"1612","suppressedMessages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1614","messages":"1615","suppressedMessages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1617","messages":"1618","suppressedMessages":"1619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1620","messages":"1621","suppressedMessages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1623","messages":"1624","suppressedMessages":"1625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1626","messages":"1627","suppressedMessages":"1628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1629","messages":"1630","suppressedMessages":"1631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1632","messages":"1633","suppressedMessages":"1634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1635","messages":"1636","suppressedMessages":"1637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1638","messages":"1639","suppressedMessages":"1640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1641","messages":"1642","suppressedMessages":"1643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1644","messages":"1645","suppressedMessages":"1646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1647","messages":"1648","suppressedMessages":"1649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1650","messages":"1651","suppressedMessages":"1652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1653","messages":"1654","suppressedMessages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1656","messages":"1657","suppressedMessages":"1658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1659","messages":"1660","suppressedMessages":"1661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1662","messages":"1663","suppressedMessages":"1664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1665","messages":"1666","suppressedMessages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1668","messages":"1669","suppressedMessages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1671","messages":"1672","suppressedMessages":"1673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1674","messages":"1675","suppressedMessages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1677","messages":"1678","suppressedMessages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1680","messages":"1681","suppressedMessages":"1682","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1683"},{"filePath":"1684","messages":"1685","suppressedMessages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1687","messages":"1688","suppressedMessages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1690","messages":"1691","suppressedMessages":"1692","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693"},{"filePath":"1694","messages":"1695","suppressedMessages":"1696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1697","messages":"1698","suppressedMessages":"1699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1700","messages":"1701","suppressedMessages":"1702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1703","messages":"1704","suppressedMessages":"1705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1706","messages":"1707","suppressedMessages":"1708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1709","messages":"1710","suppressedMessages":"1711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1712","messages":"1713","suppressedMessages":"1714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1715","messages":"1716","suppressedMessages":"1717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1718","messages":"1719","suppressedMessages":"1720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1721","messages":"1722","suppressedMessages":"1723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1724","messages":"1725","suppressedMessages":"1726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1727","messages":"1728","suppressedMessages":"1729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1730","messages":"1731","suppressedMessages":"1732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1733","messages":"1734","suppressedMessages":"1735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1736","messages":"1737","suppressedMessages":"1738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1739","messages":"1740","suppressedMessages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1742","messages":"1743","suppressedMessages":"1744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1745","messages":"1746","suppressedMessages":"1747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1748","messages":"1749","suppressedMessages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1751","messages":"1752","suppressedMessages":"1753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1754","messages":"1755","suppressedMessages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1757"},{"filePath":"1758","messages":"1759","suppressedMessages":"1760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1761","messages":"1762","suppressedMessages":"1763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1764","messages":"1765","suppressedMessages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1767"},{"filePath":"1768","messages":"1769","suppressedMessages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1771","messages":"1772","suppressedMessages":"1773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1774","messages":"1775","suppressedMessages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1777","messages":"1778","suppressedMessages":"1779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1780","messages":"1781","suppressedMessages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1783","messages":"1784","suppressedMessages":"1785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1786","messages":"1787","suppressedMessages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1789","messages":"1790","suppressedMessages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1792","messages":"1793","suppressedMessages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1795","messages":"1796","suppressedMessages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1798","messages":"1799","suppressedMessages":"1800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1801","messages":"1802","suppressedMessages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1804","messages":"1805","suppressedMessages":"1806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1807","messages":"1808","suppressedMessages":"1809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1810","messages":"1811","suppressedMessages":"1812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1813","messages":"1814","suppressedMessages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1816","messages":"1817","suppressedMessages":"1818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1819","messages":"1820","suppressedMessages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1822","messages":"1823","suppressedMessages":"1824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1825","messages":"1826","suppressedMessages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1828","messages":"1829","suppressedMessages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1831","messages":"1832","suppressedMessages":"1833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1834","messages":"1835","suppressedMessages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1837","messages":"1838","suppressedMessages":"1839","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1840"},{"filePath":"1841","messages":"1842","suppressedMessages":"1843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1844","messages":"1845","suppressedMessages":"1846","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1847"},{"filePath":"1848","messages":"1849","suppressedMessages":"1850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1851","messages":"1852","suppressedMessages":"1853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1854","messages":"1855","suppressedMessages":"1856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1857","messages":"1858","suppressedMessages":"1859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1860","messages":"1861","suppressedMessages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1863","messages":"1864","suppressedMessages":"1865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1866","messages":"1867","suppressedMessages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1869","messages":"1870","suppressedMessages":"1871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1872","messages":"1873","suppressedMessages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1875","messages":"1876","suppressedMessages":"1877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1878","messages":"1879","suppressedMessages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1881","messages":"1882","suppressedMessages":"1883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1884","messages":"1885","suppressedMessages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1887","messages":"1888","suppressedMessages":"1889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1890","messages":"1891","suppressedMessages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1893","messages":"1894","suppressedMessages":"1895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1896","messages":"1897","suppressedMessages":"1898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1899","messages":"1900","suppressedMessages":"1901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1902","messages":"1903","suppressedMessages":"1904","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1905"},{"filePath":"1906","messages":"1907","suppressedMessages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1909","messages":"1910","suppressedMessages":"1911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1912","messages":"1913","suppressedMessages":"1914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1915","messages":"1916","suppressedMessages":"1917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1918","messages":"1919","suppressedMessages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1921","messages":"1922","suppressedMessages":"1923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1924","messages":"1925","suppressedMessages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1927","messages":"1928","suppressedMessages":"1929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1930","messages":"1931","suppressedMessages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1933","messages":"1934","suppressedMessages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1936","messages":"1937","suppressedMessages":"1938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1939","messages":"1940","suppressedMessages":"1941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1942","messages":"1943","suppressedMessages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1945","messages":"1946","suppressedMessages":"1947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1948","messages":"1949","suppressedMessages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1951","messages":"1952","suppressedMessages":"1953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1954","messages":"1955","suppressedMessages":"1956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1957","messages":"1958","suppressedMessages":"1959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1960","messages":"1961","suppressedMessages":"1962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1963","messages":"1964","suppressedMessages":"1965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1966","messages":"1967","suppressedMessages":"1968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1969","messages":"1970","suppressedMessages":"1971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1972","messages":"1973","suppressedMessages":"1974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1975","messages":"1976","suppressedMessages":"1977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1978","messages":"1979","suppressedMessages":"1980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1981","messages":"1982","suppressedMessages":"1983","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1984"},{"filePath":"1985","messages":"1986","suppressedMessages":"1987","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1988"},{"filePath":"1989","messages":"1990","suppressedMessages":"1991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1992","messages":"1993","suppressedMessages":"1994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1995","messages":"1996","suppressedMessages":"1997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1998","messages":"1999","suppressedMessages":"2000","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2001"},{"filePath":"2002","messages":"2003","suppressedMessages":"2004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2005","messages":"2006","suppressedMessages":"2007","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2008"},{"filePath":"2009","messages":"2010","suppressedMessages":"2011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2012","messages":"2013","suppressedMessages":"2014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2015","messages":"2016","suppressedMessages":"2017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2018","messages":"2019","suppressedMessages":"2020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2021","messages":"2022","suppressedMessages":"2023","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2024"},{"filePath":"2025","messages":"2026","suppressedMessages":"2027","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2028"},{"filePath":"2029","messages":"2030","suppressedMessages":"2031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2032","messages":"2033","suppressedMessages":"2034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2035","messages":"2036","suppressedMessages":"2037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2038","messages":"2039","suppressedMessages":"2040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2041","messages":"2042","suppressedMessages":"2043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2044","messages":"2045","suppressedMessages":"2046","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2047"},{"filePath":"2048","messages":"2049","suppressedMessages":"2050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2051","messages":"2052","suppressedMessages":"2053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2054","messages":"2055","suppressedMessages":"2056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2057","messages":"2058","suppressedMessages":"2059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2060","messages":"2061","suppressedMessages":"2062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2063","messages":"2064","suppressedMessages":"2065","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2066"},{"filePath":"2067","messages":"2068","suppressedMessages":"2069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2070","messages":"2071","suppressedMessages":"2072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2073","messages":"2074","suppressedMessages":"2075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2076","messages":"2077","suppressedMessages":"2078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2079","messages":"2080","suppressedMessages":"2081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2082","messages":"2083","suppressedMessages":"2084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2085","messages":"2086","suppressedMessages":"2087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2088","messages":"2089","suppressedMessages":"2090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2091","messages":"2092","suppressedMessages":"2093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2094","messages":"2095","suppressedMessages":"2096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2097","messages":"2098","suppressedMessages":"2099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2100","messages":"2101","suppressedMessages":"2102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2103","messages":"2104","suppressedMessages":"2105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2106","messages":"2107","suppressedMessages":"2108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2109","messages":"2110","suppressedMessages":"2111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2112","messages":"2113","suppressedMessages":"2114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2115","messages":"2116","suppressedMessages":"2117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2118","messages":"2119","suppressedMessages":"2120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2121","messages":"2122","suppressedMessages":"2123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2124","messages":"2125","suppressedMessages":"2126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2127"},{"filePath":"2128","messages":"2129","suppressedMessages":"2130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2131","messages":"2132","suppressedMessages":"2133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2134","messages":"2135","suppressedMessages":"2136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2137","messages":"2138","suppressedMessages":"2139","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2140"},{"filePath":"2141","messages":"2142","suppressedMessages":"2143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2144","messages":"2145","suppressedMessages":"2146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2147","messages":"2148","suppressedMessages":"2149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2150","messages":"2151","suppressedMessages":"2152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2153"},{"filePath":"2154","messages":"2155","suppressedMessages":"2156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2157"},{"filePath":"2158","messages":"2159","suppressedMessages":"2160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2161","messages":"2162","suppressedMessages":"2163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2164","messages":"2165","suppressedMessages":"2166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2167","messages":"2168","suppressedMessages":"2169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2170","messages":"2171","suppressedMessages":"2172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2173","messages":"2174","suppressedMessages":"2175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2176","messages":"2177","suppressedMessages":"2178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2179","messages":"2180","suppressedMessages":"2181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2182","messages":"2183","suppressedMessages":"2184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2185"},{"filePath":"2186","messages":"2187","suppressedMessages":"2188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2189","messages":"2190","suppressedMessages":"2191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2192","messages":"2193","suppressedMessages":"2194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2195"},{"filePath":"2196","messages":"2197","suppressedMessages":"2198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2199","messages":"2200","suppressedMessages":"2201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2202"},{"filePath":"2203","messages":"2204","suppressedMessages":"2205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2206","messages":"2207","suppressedMessages":"2208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2209","messages":"2210","suppressedMessages":"2211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2212","messages":"2213","suppressedMessages":"2214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2215","messages":"2216","suppressedMessages":"2217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2218","messages":"2219","suppressedMessages":"2220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2221","messages":"2222","suppressedMessages":"2223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2224","messages":"2225","suppressedMessages":"2226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2227"},{"filePath":"2228","messages":"2229","suppressedMessages":"2230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2231","messages":"2232","suppressedMessages":"2233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2234","messages":"2235","suppressedMessages":"2236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2237","messages":"2238","suppressedMessages":"2239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2240","messages":"2241","suppressedMessages":"2242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2243","messages":"2244","suppressedMessages":"2245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2246","messages":"2247","suppressedMessages":"2248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2249","messages":"2250","suppressedMessages":"2251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2252","messages":"2253","suppressedMessages":"2254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2255","messages":"2256","suppressedMessages":"2257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2258","messages":"2259","suppressedMessages":"2260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2261","messages":"2262","suppressedMessages":"2263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2264","messages":"2265","suppressedMessages":"2266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2267","messages":"2268","suppressedMessages":"2269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2270","messages":"2271","suppressedMessages":"2272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2273","messages":"2274","suppressedMessages":"2275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2276","messages":"2277","suppressedMessages":"2278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2279","messages":"2280","suppressedMessages":"2281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2282","messages":"2283","suppressedMessages":"2284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2285","messages":"2286","suppressedMessages":"2287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2288","messages":"2289","suppressedMessages":"2290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2291","messages":"2292","suppressedMessages":"2293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2294","messages":"2295","suppressedMessages":"2296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2297","messages":"2298","suppressedMessages":"2299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2300","messages":"2301","suppressedMessages":"2302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2303","messages":"2304","suppressedMessages":"2305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2306","messages":"2307","suppressedMessages":"2308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2309","messages":"2310","suppressedMessages":"2311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2312","messages":"2313","suppressedMessages":"2314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2315","messages":"2316","suppressedMessages":"2317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2318","messages":"2319","suppressedMessages":"2320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2321","messages":"2322","suppressedMessages":"2323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2324","messages":"2325","suppressedMessages":"2326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2327","messages":"2328","suppressedMessages":"2329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2330","messages":"2331","suppressedMessages":"2332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2333","messages":"2334","suppressedMessages":"2335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2336","messages":"2337","suppressedMessages":"2338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2339","messages":"2340","suppressedMessages":"2341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2342","messages":"2343","suppressedMessages":"2344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2345","messages":"2346","suppressedMessages":"2347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2348","messages":"2349","suppressedMessages":"2350","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2351"},{"filePath":"2352","messages":"2353","suppressedMessages":"2354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2355","messages":"2356","suppressedMessages":"2357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2358","messages":"2359","suppressedMessages":"2360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2361","messages":"2362","suppressedMessages":"2363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2364","messages":"2365","suppressedMessages":"2366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2367","messages":"2368","suppressedMessages":"2369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2370","messages":"2371","suppressedMessages":"2372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2373","messages":"2374","suppressedMessages":"2375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2376","messages":"2377","suppressedMessages":"2378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2379","messages":"2380","suppressedMessages":"2381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2382","messages":"2383","suppressedMessages":"2384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2385","messages":"2386","suppressedMessages":"2387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2388","messages":"2389","suppressedMessages":"2390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2391","messages":"2392","suppressedMessages":"2393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2394","messages":"2395","suppressedMessages":"2396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2397","messages":"2398","suppressedMessages":"2399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2400","messages":"2401","suppressedMessages":"2402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2403","messages":"2404","suppressedMessages":"2405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2406","messages":"2407","suppressedMessages":"2408","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2409"},{"filePath":"2410","messages":"2411","suppressedMessages":"2412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2413","messages":"2414","suppressedMessages":"2415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2416","messages":"2417","suppressedMessages":"2418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2419","messages":"2420","suppressedMessages":"2421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2422","messages":"2423","suppressedMessages":"2424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2425","messages":"2426","suppressedMessages":"2427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2428","messages":"2429","suppressedMessages":"2430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2431","messages":"2432","suppressedMessages":"2433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2434","messages":"2435","suppressedMessages":"2436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2437","messages":"2438","suppressedMessages":"2439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2440","messages":"2441","suppressedMessages":"2442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2443","messages":"2444","suppressedMessages":"2445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2446","messages":"2447","suppressedMessages":"2448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2449","messages":"2450","suppressedMessages":"2451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2452","messages":"2453","suppressedMessages":"2454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2455","messages":"2456","suppressedMessages":"2457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2458","messages":"2459","suppressedMessages":"2460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2461","messages":"2462","suppressedMessages":"2463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2464","messages":"2465","suppressedMessages":"2466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2467","messages":"2468","suppressedMessages":"2469","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2470"},{"filePath":"2471","messages":"2472","suppressedMessages":"2473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2474","messages":"2475","suppressedMessages":"2476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2477","messages":"2478","suppressedMessages":"2479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2480","messages":"2481","suppressedMessages":"2482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2483","messages":"2484","suppressedMessages":"2485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2486","messages":"2487","suppressedMessages":"2488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2489","messages":"2490","suppressedMessages":"2491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2492","messages":"2493","suppressedMessages":"2494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2495","messages":"2496","suppressedMessages":"2497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2498"},{"filePath":"2499","messages":"2500","suppressedMessages":"2501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2502","messages":"2503","suppressedMessages":"2504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2505","messages":"2506","suppressedMessages":"2507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2508","messages":"2509","suppressedMessages":"2510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2511","messages":"2512","suppressedMessages":"2513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2514","messages":"2515","suppressedMessages":"2516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2517","messages":"2518","suppressedMessages":"2519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2520","messages":"2521","suppressedMessages":"2522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2523","messages":"2524","suppressedMessages":"2525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2526","messages":"2527","suppressedMessages":"2528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2529","messages":"2530","suppressedMessages":"2531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2532","messages":"2533","suppressedMessages":"2534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2535","messages":"2536","suppressedMessages":"2537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2538","messages":"2539","suppressedMessages":"2540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2541","messages":"2542","suppressedMessages":"2543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2544","messages":"2545","suppressedMessages":"2546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2547","messages":"2548","suppressedMessages":"2549","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2550"},{"filePath":"2551","messages":"2552","suppressedMessages":"2553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2554","messages":"2555","suppressedMessages":"2556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2557","messages":"2558","suppressedMessages":"2559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2560","messages":"2561","suppressedMessages":"2562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2563","messages":"2564","suppressedMessages":"2565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2566","messages":"2567","suppressedMessages":"2568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2569","messages":"2570","suppressedMessages":"2571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2572","messages":"2573","suppressedMessages":"2574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2575","messages":"2576","suppressedMessages":"2577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2578","messages":"2579","suppressedMessages":"2580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2581","messages":"2582","suppressedMessages":"2583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2584","messages":"2585","suppressedMessages":"2586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2587","messages":"2588","suppressedMessages":"2589","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2590"},{"filePath":"2591","messages":"2592","suppressedMessages":"2593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2594","messages":"2595","suppressedMessages":"2596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2597","messages":"2598","suppressedMessages":"2599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2600","messages":"2601","suppressedMessages":"2602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2603","messages":"2604","suppressedMessages":"2605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2606","messages":"2607","suppressedMessages":"2608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2609"},{"filePath":"2610","messages":"2611","suppressedMessages":"2612","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2613"},{"filePath":"2614","messages":"2615","suppressedMessages":"2616","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2617"},{"filePath":"2618","messages":"2619","suppressedMessages":"2620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2621","messages":"2622","suppressedMessages":"2623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2624","messages":"2625","suppressedMessages":"2626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2627","messages":"2628","suppressedMessages":"2629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2630","messages":"2631","suppressedMessages":"2632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2633","messages":"2634","suppressedMessages":"2635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2636","messages":"2637","suppressedMessages":"2638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2639","messages":"2640","suppressedMessages":"2641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2642","messages":"2643","suppressedMessages":"2644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2645","messages":"2646","suppressedMessages":"2647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2648","messages":"2649","suppressedMessages":"2650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2651","messages":"2652","suppressedMessages":"2653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2654","messages":"2655","suppressedMessages":"2656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2657","messages":"2658","suppressedMessages":"2659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2660","messages":"2661","suppressedMessages":"2662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2663","messages":"2664","suppressedMessages":"2665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2666","messages":"2667","suppressedMessages":"2668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2669","messages":"2670","suppressedMessages":"2671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2672","messages":"2673","suppressedMessages":"2674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2675","messages":"2676","suppressedMessages":"2677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2678","messages":"2679","suppressedMessages":"2680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2681","messages":"2682","suppressedMessages":"2683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2684","messages":"2685","suppressedMessages":"2686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2687","messages":"2688","suppressedMessages":"2689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2690","messages":"2691","suppressedMessages":"2692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2693","messages":"2694","suppressedMessages":"2695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2696","messages":"2697","suppressedMessages":"2698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2699","messages":"2700","suppressedMessages":"2701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2702","messages":"2703","suppressedMessages":"2704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2705","messages":"2706","suppressedMessages":"2707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2708","messages":"2709","suppressedMessages":"2710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2711","messages":"2712","suppressedMessages":"2713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2714","messages":"2715","suppressedMessages":"2716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2717","messages":"2718","suppressedMessages":"2719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2720","messages":"2721","suppressedMessages":"2722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2723","messages":"2724","suppressedMessages":"2725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2726","messages":"2727","suppressedMessages":"2728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2729","messages":"2730","suppressedMessages":"2731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2732","messages":"2733","suppressedMessages":"2734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2735"},{"filePath":"2736","messages":"2737","suppressedMessages":"2738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2739","messages":"2740","suppressedMessages":"2741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2742","messages":"2743","suppressedMessages":"2744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2745","messages":"2746","suppressedMessages":"2747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2748","messages":"2749","suppressedMessages":"2750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2751","messages":"2752","suppressedMessages":"2753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2754","messages":"2755","suppressedMessages":"2756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2757","messages":"2758","suppressedMessages":"2759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2760","messages":"2761","suppressedMessages":"2762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2763","messages":"2764","suppressedMessages":"2765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2766","messages":"2767","suppressedMessages":"2768","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2769"},{"filePath":"2770","messages":"2771","suppressedMessages":"2772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2773","messages":"2774","suppressedMessages":"2775","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2776"},{"filePath":"2777","messages":"2778","suppressedMessages":"2779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2780","messages":"2781","suppressedMessages":"2782","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2783"},{"filePath":"2784","messages":"2785","suppressedMessages":"2786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2787","messages":"2788","suppressedMessages":"2789","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2790"},{"filePath":"2791","messages":"2792","suppressedMessages":"2793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2794","messages":"2795","suppressedMessages":"2796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2797","messages":"2798","suppressedMessages":"2799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2800","messages":"2801","suppressedMessages":"2802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2803","messages":"2804","suppressedMessages":"2805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2806","messages":"2807","suppressedMessages":"2808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2809","messages":"2810","suppressedMessages":"2811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2812","messages":"2813","suppressedMessages":"2814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2815","messages":"2816","suppressedMessages":"2817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2818","messages":"2819","suppressedMessages":"2820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2821","messages":"2822","suppressedMessages":"2823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2824","messages":"2825","suppressedMessages":"2826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2827","messages":"2828","suppressedMessages":"2829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2830","messages":"2831","suppressedMessages":"2832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2833","messages":"2834","suppressedMessages":"2835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2836","messages":"2837","suppressedMessages":"2838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2839","messages":"2840","suppressedMessages":"2841","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2842"},{"filePath":"2843","messages":"2844","suppressedMessages":"2845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2846","messages":"2847","suppressedMessages":"2848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2849","messages":"2850","suppressedMessages":"2851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2852","messages":"2853","suppressedMessages":"2854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2855","messages":"2856","suppressedMessages":"2857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2858","messages":"2859","suppressedMessages":"2860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2861","messages":"2862","suppressedMessages":"2863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2864","messages":"2865","suppressedMessages":"2866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2867","messages":"2868","suppressedMessages":"2869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2870","messages":"2871","suppressedMessages":"2872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2873","messages":"2874","suppressedMessages":"2875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2876","messages":"2877","suppressedMessages":"2878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2879","messages":"2880","suppressedMessages":"2881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2882","messages":"2883","suppressedMessages":"2884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2885","messages":"2886","suppressedMessages":"2887","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2888"},{"filePath":"2889","messages":"2890","suppressedMessages":"2891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2892","messages":"2893","suppressedMessages":"2894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2895","messages":"2896","suppressedMessages":"2897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2898","messages":"2899","suppressedMessages":"2900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2901","messages":"2902","suppressedMessages":"2903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2904","messages":"2905","suppressedMessages":"2906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2907","messages":"2908","suppressedMessages":"2909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2910","messages":"2911","suppressedMessages":"2912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2913","messages":"2914","suppressedMessages":"2915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2916","messages":"2917","suppressedMessages":"2918","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2919"},{"filePath":"2920","messages":"2921","suppressedMessages":"2922","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2923"},{"filePath":"2924","messages":"2925","suppressedMessages":"2926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2927","messages":"2928","suppressedMessages":"2929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2930","messages":"2931","suppressedMessages":"2932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2933","messages":"2934","suppressedMessages":"2935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2936","messages":"2937","suppressedMessages":"2938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2939","messages":"2940","suppressedMessages":"2941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2942","messages":"2943","suppressedMessages":"2944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2945","messages":"2946","suppressedMessages":"2947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2948","messages":"2949","suppressedMessages":"2950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2951","messages":"2952","suppressedMessages":"2953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2954","messages":"2955","suppressedMessages":"2956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2957","messages":"2958","suppressedMessages":"2959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2960","messages":"2961","suppressedMessages":"2962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2963","messages":"2964","suppressedMessages":"2965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2966","messages":"2967","suppressedMessages":"2968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2969","messages":"2970","suppressedMessages":"2971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2972","messages":"2973","suppressedMessages":"2974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2975","messages":"2976","suppressedMessages":"2977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2978","messages":"2979","suppressedMessages":"2980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2981","messages":"2982","suppressedMessages":"2983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2984","messages":"2985","suppressedMessages":"2986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2987","messages":"2988","suppressedMessages":"2989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2990","messages":"2991","suppressedMessages":"2992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2993","messages":"2994","suppressedMessages":"2995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2996","messages":"2997","suppressedMessages":"2998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2999","messages":"3000","suppressedMessages":"3001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3002","messages":"3003","suppressedMessages":"3004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3005","messages":"3006","suppressedMessages":"3007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3008","messages":"3009","suppressedMessages":"3010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3011","messages":"3012","suppressedMessages":"3013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3014","messages":"3015","suppressedMessages":"3016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3017","messages":"3018","suppressedMessages":"3019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3020","messages":"3021","suppressedMessages":"3022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3023","messages":"3024","suppressedMessages":"3025","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3026"},{"filePath":"3027","messages":"3028","suppressedMessages":"3029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3030","messages":"3031","suppressedMessages":"3032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3033","messages":"3034","suppressedMessages":"3035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3036","messages":"3037","suppressedMessages":"3038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3039","messages":"3040","suppressedMessages":"3041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3042","messages":"3043","suppressedMessages":"3044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3045","messages":"3046","suppressedMessages":"3047","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3048","messages":"3049","suppressedMessages":"3050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3051","messages":"3052","suppressedMessages":"3053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3054","messages":"3055","suppressedMessages":"3056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3057","messages":"3058","suppressedMessages":"3059","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3060"},{"filePath":"3061","messages":"3062","suppressedMessages":"3063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3064","messages":"3065","suppressedMessages":"3066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3067","messages":"3068","suppressedMessages":"3069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3070","messages":"3071","suppressedMessages":"3072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3073","messages":"3074","suppressedMessages":"3075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3076","messages":"3077","suppressedMessages":"3078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3079","messages":"3080","suppressedMessages":"3081","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3082"},{"filePath":"3083","messages":"3084","suppressedMessages":"3085","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3086"},{"filePath":"3087","messages":"3088","suppressedMessages":"3089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3090","messages":"3091","suppressedMessages":"3092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3093","messages":"3094","suppressedMessages":"3095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3096","messages":"3097","suppressedMessages":"3098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3099","messages":"3100","suppressedMessages":"3101","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3102"},{"filePath":"3103","messages":"3104","suppressedMessages":"3105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3106"},{"filePath":"3107","messages":"3108","suppressedMessages":"3109","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3110"},{"filePath":"3111","messages":"3112","suppressedMessages":"3113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3114","messages":"3115","suppressedMessages":"3116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3117","messages":"3118","suppressedMessages":"3119","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3120"},{"filePath":"3121","messages":"3122","suppressedMessages":"3123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3124","messages":"3125","suppressedMessages":"3126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3127","messages":"3128","suppressedMessages":"3129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3130","messages":"3131","suppressedMessages":"3132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3133","messages":"3134","suppressedMessages":"3135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3136","messages":"3137","suppressedMessages":"3138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3139","messages":"3140","suppressedMessages":"3141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3142","messages":"3143","suppressedMessages":"3144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3145","messages":"3146","suppressedMessages":"3147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3148","messages":"3149","suppressedMessages":"3150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3151","messages":"3152","suppressedMessages":"3153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3154","messages":"3155","suppressedMessages":"3156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3157","messages":"3158","suppressedMessages":"3159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3160"},{"filePath":"3161","messages":"3162","suppressedMessages":"3163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3164","messages":"3165","suppressedMessages":"3166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3167","messages":"3168","suppressedMessages":"3169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3170","messages":"3171","suppressedMessages":"3172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3173","messages":"3174","suppressedMessages":"3175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3176","messages":"3177","suppressedMessages":"3178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3179","messages":"3180","suppressedMessages":"3181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3182","messages":"3183","suppressedMessages":"3184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3185","messages":"3186","suppressedMessages":"3187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3188","messages":"3189","suppressedMessages":"3190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3191","messages":"3192","suppressedMessages":"3193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3194","messages":"3195","suppressedMessages":"3196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3197","messages":"3198","suppressedMessages":"3199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3200","messages":"3201","suppressedMessages":"3202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3203","messages":"3204","suppressedMessages":"3205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3206"},{"filePath":"3207","messages":"3208","suppressedMessages":"3209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3210","messages":"3211","suppressedMessages":"3212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3213","messages":"3214","suppressedMessages":"3215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3216","messages":"3217","suppressedMessages":"3218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3219","messages":"3220","suppressedMessages":"3221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3222","messages":"3223","suppressedMessages":"3224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3225","messages":"3226","suppressedMessages":"3227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3228","messages":"3229","suppressedMessages":"3230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3231"},{"filePath":"3232","messages":"3233","suppressedMessages":"3234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3235","messages":"3236","suppressedMessages":"3237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3238","messages":"3239","suppressedMessages":"3240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3241","messages":"3242","suppressedMessages":"3243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3244","messages":"3245","suppressedMessages":"3246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3247","messages":"3248","suppressedMessages":"3249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3250","messages":"3251","suppressedMessages":"3252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3253","messages":"3254","suppressedMessages":"3255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3256","messages":"3257","suppressedMessages":"3258","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3259"},{"filePath":"3260","messages":"3261","suppressedMessages":"3262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3263","messages":"3264","suppressedMessages":"3265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3266","messages":"3267","suppressedMessages":"3268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3269","messages":"3270","suppressedMessages":"3271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3272"},{"filePath":"3273","messages":"3274","suppressedMessages":"3275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3276","messages":"3277","suppressedMessages":"3278","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3279"},{"filePath":"3280","messages":"3281","suppressedMessages":"3282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3283","messages":"3284","suppressedMessages":"3285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3286","messages":"3287","suppressedMessages":"3288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3289","messages":"3290","suppressedMessages":"3291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3292","messages":"3293","suppressedMessages":"3294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3295","messages":"3296","suppressedMessages":"3297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3298","messages":"3299","suppressedMessages":"3300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3301","messages":"3302","suppressedMessages":"3303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3304","messages":"3305","suppressedMessages":"3306","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3307"},{"filePath":"3308","messages":"3309","suppressedMessages":"3310","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3311"},{"filePath":"3312","messages":"3313","suppressedMessages":"3314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3315","messages":"3316","suppressedMessages":"3317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3318","messages":"3319","suppressedMessages":"3320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3321","messages":"3322","suppressedMessages":"3323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3324","messages":"3325","suppressedMessages":"3326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3327"},{"filePath":"3328","messages":"3329","suppressedMessages":"3330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3331"},{"filePath":"3332","messages":"3333","suppressedMessages":"3334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3335"},{"filePath":"3336","messages":"3337","suppressedMessages":"3338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3339","messages":"3340","suppressedMessages":"3341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3342"},{"filePath":"3343","messages":"3344","suppressedMessages":"3345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3346","messages":"3347","suppressedMessages":"3348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3349"},{"filePath":"3350","messages":"3351","suppressedMessages":"3352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3353","messages":"3354","suppressedMessages":"3355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3356","messages":"3357","suppressedMessages":"3358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3359"},{"filePath":"3360","messages":"3361","suppressedMessages":"3362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3363"},{"filePath":"3364","messages":"3365","suppressedMessages":"3366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3367","messages":"3368","suppressedMessages":"3369","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jshandel/odh-dashboard/frontend/src/SDKInitialize.tsx",["3370"],[],"import * as React from 'react';\nimport { AppInitSDK, isUtilsConfigSet } from '@openshift/dynamic-plugin-sdk-utils';\nimport { PluginLoader, PluginStore } from '@openshift/dynamic-plugin-sdk';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { K8sStatus } from './k8sTypes';\nimport { isK8sStatus, K8sStatusError } from './api';\n\nconst config: React.ComponentProps<typeof AppInitSDK>['configurations'] = {\n  appFetch: (url, options) =>\n    // Using fetch instead of axios because of internal SDK structures that needs to use `response.text`\n    fetch(`/api/k8s${url}`, options).then(async (response) => {\n      if (response.status < 400) {\n        // Valid response, let it flow through the normal system\n        return response;\n      }\n\n      const result = await response.clone().text();\n      let data: K8sStatus | unknown;\n      try {\n        data = JSON.parse(result);\n      } catch (e) {\n        // Parsing error, just fallback on SDK logic\n        return response;\n      }\n      if (isK8sStatus(data)) {\n        // TODO: SDK does not support error states, we need them though\n        // Turn it into an error object so we can use .catch\n        throw new K8sStatusError(data);\n      }\n\n      // Not a status object, let the normal SDK flow take over\n      return response;\n    }),\n  /** Disable api discovery -- until we need to use the k8s watch hooks, we don't need to use api discovery */\n  apiDiscovery: () => null,\n  /** We don't need a plugin store yet -- we just want the SDK setup for utilities right now */\n  pluginStore: (() => {\n    const pluginStore = new PluginStore();\n    pluginStore.setLoader(new PluginLoader());\n    return pluginStore;\n  })(),\n  /**\n   * No need for web sockets at this point -- we'll need to support this if we want to use the\n   * websocket utilities or the k8s watch hooks.\n   */\n  wsAppSettings: () => Promise.resolve({ host: '', subProtocols: [] }),\n};\n\ntype SDKInitializeProps = {\n  children: React.ReactNode;\n};\n\nconst SDKInitialize: React.FC<SDKInitializeProps> = ({ children }) => {\n  // hack to make sure the SDK has fully loaded before we try to render the app\n  // TODO: Figure out what's going on in the SDK\n  const [ready, setReady] = React.useState(false);\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isUtilsConfigSet()) {\n        setReady(true);\n        clearInterval(intervalId);\n      }\n    }, 1000);\n  }, []);\n\n  return (\n    // TODO: remove when the SDK supports children type\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    <AppInitSDK configurations={config}>\n      {ready ? (\n        children\n      ) : (\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      )}\n    </AppInitSDK>\n  );\n};\n\nexport default SDKInitialize;\n","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockClusterSettings.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockDashboardConfig.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockDocs.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockEnabledApplications.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockExploreApplications.ts",["3371"],[],"/* eslint-disable camelcase */\nimport { OdhApplication, OdhApplicationCategory } from '~/types';\n\nexport const mockExploreApplications: OdhApplication[] = [\n  {\n    metadata: {\n      name: 'jupyterhub-disabled',\n      annotations: { 'opendatahub.io/categories': 'Jupyter notebook' },\n    },\n    spec: {\n      displayName: 'JupyterHub-Disabled',\n      provider: 'Jupyter',\n      description:\n        'A multi-user version of the notebook designed for companies, classrooms and research labs.',\n      kfdefApplications: ['jupyterhub', 'notebook-images'],\n      route: 'jupyterhub',\n      img: 'images/jupyterhub.svg',\n      category: OdhApplicationCategory.RedHatManaged,\n      support: 'red hat',\n      docsLink: 'https://jupyter.org/hub',\n      quickStart: 'create-jupyter-notebook',\n      getStartedLink: 'https://jupyterhub.readthedocs.io/en/stable/getting-started/index.html',\n      getStartedMarkDown: '',\n      shownOnEnabledPage: false,\n      isEnabled: false,\n      comingSoon: true,\n      link: 'https://jupyterhub-redhat-ods-applications.apps.jephilli-4-9-06-21-0953.devcluster.openshift.com',\n    },\n  },\n  {\n    metadata: {\n      name: 'jupyterhub',\n      annotations: { 'opendatahub.io/categories': 'Jupyter notebook' },\n    },\n    spec: {\n      displayName: 'JupyterHub',\n      provider: 'Jupyter',\n      description:\n        'A multi-user version of the notebook designed for companies, classrooms and research labs.',\n      kfdefApplications: ['jupyterhub', 'notebook-images'],\n      route: 'jupyterhub',\n      img: 'images/jupyterhub.svg',\n      category: OdhApplicationCategory.RedHatManaged,\n      support: 'red hat',\n      docsLink: 'https://jupyter.org/hub',\n      quickStart: 'create-jupyter-notebook',\n      getStartedLink: 'https://jupyterhub.readthedocs.io/en/stable/getting-started/index.html',\n      getStartedMarkDown: '',\n      shownOnEnabledPage: true,\n      isEnabled: true,\n      link: 'https://jupyterhub-redhat-ods-applications.apps.jephilli-4-9-06-21-0953.devcluster.openshift.com',\n    },\n  },\n  {\n    metadata: {\n      name: 'test-app',\n      annotations: { 'opendatahub.io/categories': 'Jupyter notebook' },\n    },\n    spec: {\n      displayName: 'Test App',\n      provider: 'Test',\n      description: 'Some description',\n      route: 'my-route',\n      img: 'images/jupyterhub.svg',\n      docsLink: 'https://fakelink.org/fake',\n      getStartedLink: 'https://jupyterhub.readthedocs.io/en/stable/getting-started/index.html',\n      getStartedMarkDown: '',\n      shownOnEnabledPage: true,\n      isEnabled: false,\n      quickStart: null,\n      enable: {\n        title: 'Test Enable',\n        actionLabel: 'Enable',\n        description: '',\n        variables: {\n          test_key: 'password',\n        },\n        variableDisplayText: {\n          test_key: 'Enter a Key',\n        },\n        variableHelpText: {\n          test_key: 'This key is enables the app',\n        },\n        validationJob: 'some-validator',\n        validationSecret: 'some-secret',\n        validationConfigMap: 'some-cm',\n      },\n    },\n  },\n];\n","/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockGettingStartedDoc.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockInferenceServiceK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockK8sResourceList.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockNotebookK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockPVCK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockPodK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockProjectK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockRouteK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockSecretK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockServingRuntimeK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockServingRuntimeTemplateK8sResource.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockStatus.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__mocks__/mockUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/dockerRepositoryURL.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/e2e/CreateEditDeleteProject.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/e2e/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/TestHook.tsx",["3372"],[],"import React, { useRef, useState } from 'react';\nimport {\n  Button,\n  List,\n  ListItem,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport { Table /* data-codemods */, Thead, Tr, Th, Tbody, Td, Caption } from '@patternfly/react-table';\n\ntype TestHookProps<T extends unknown[]> = {\n  hook: (...args: T) => unknown;\n  defaultHookParams: T;\n  hookParams: T[];\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const TestHook = <T extends any[]>({\n  hook,\n  defaultHookParams,\n  hookParams = [],\n}: TestHookProps<T>) => {\n  const [selectedParam, setSelectedParam] = useState<T>(defaultHookParams);\n\n  // call hook\n  const hookResult = hook(...selectedParam);\n\n  // convert unknown hook response to unknown[]\n  const hookResultArray: unknown[] = [];\n  if (typeof hookResult === 'object') {\n    hookResultArray.push(...Object.values(hookResult ?? {}));\n  } else {\n    hookResultArray.push(hookResult);\n  }\n\n  const previousPropsRef = useRef(defaultHookParams);\n  const propStatusesRef = useRef<string[]>([]);\n\n  const previousResultArrayRef = useRef(hookResultArray);\n  const resultArrayStatusesRef = useRef<string[]>([]);\n\n  const previousResultRef = useRef(hookResult);\n  const resultStatusRef = useRef<string>('');\n\n  // get prop stability\n  defaultHookParams.forEach((prop, index) => {\n    const isStable = previousPropsRef.current[index] === prop;\n    propStatusesRef.current[index] = isStable ? 'stable' : 'unstable';\n  });\n  previousPropsRef.current = defaultHookParams;\n\n  // get whole result stability\n  const isStable = previousResultRef.current === hookResult;\n  resultStatusRef.current = isStable ? 'stable' : 'unstable';\n  previousResultRef.current = hookResult;\n\n  // get individual result stability\n  hookResultArray.forEach((prop, index) => {\n    const isStable = previousResultArrayRef.current[index] === prop;\n    resultArrayStatusesRef.current[index] = isStable ? 'stable' : 'unstable';\n  });\n  previousResultArrayRef.current = hookResultArray;\n\n  const getType = (value: unknown) => {\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        return 'array';\n      }\n      return 'object';\n    }\n    return typeof value;\n  };\n\n  const isPrimitive = (value: unknown) => value !== Object(value);\n\n  const renderTable = (\n    statusRef: string[],\n    dataArray: unknown[],\n    dataIdPrefix: string,\n    showButtons = false,\n  ) => (\n    <Table variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th>Type</Th>\n          <Th>Value</Th>\n          <Th>Status</Th>\n          <Th />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {dataArray.map((value, index) => (\n          <Tr key={`table-row-${dataIdPrefix}-${index}`}>\n            <Td dataLabel=\"type\" data-testid={`${dataIdPrefix}-type-${index}`}>\n              {getType(value)}\n            </Td>\n            <Td width={70} dataLabel=\"value\" data-testid={`${dataIdPrefix}-value-${index}`}>\n              {typeof value === 'function' ? String(value) : JSON.stringify(value)}\n            </Td>\n            <Td dataLabel=\"status\" data-testid={`${dataIdPrefix}-status-${index}`}>\n              <span style={{ color: statusRef[index] === 'stable' ? 'green' : 'red' }}>\n                {!isPrimitive(value) && statusRef[index]}\n              </span>\n            </Td>\n            <Td isActionCell>\n              {showButtons && typeof value === 'function' && (\n                <Button\n                  size=\"sm\"\n                  data-testid={`call-function-${index}`}\n                  variant=\"secondary\"\n                  onClick={() => value()}\n                >\n                  Call function\n                </Button>\n              )}\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  );\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Title headingLevel={'h3'}>Select Parameter Set</Title>\n        <Split hasGutter>\n          <SplitItem>\n            <Button\n              variant=\"secondary\"\n              data-testid=\"params-default\"\n              onClick={() => {\n                setSelectedParam(defaultHookParams);\n              }}\n            >\n              params-default\n            </Button>\n          </SplitItem>\n          {hookParams.map((_hookParam, index) => (\n            <SplitItem key={`button-select-${index}`}>\n              <Button\n                variant=\"secondary\"\n                key={`params-${index}`}\n                data-testid={`params-${index}`}\n                onClick={() => {\n                  setSelectedParam(hookParams[index]);\n                }}\n              >{`params-${index}`}</Button>\n            </SplitItem>\n          ))}\n        </Split>\n      </StackItem>\n      <StackItem>\n        <Title headingLevel={'h3'}>Selected Parameters</Title>\n        {renderTable(propStatusesRef.current, selectedParam, 'param')}\n      </StackItem>\n      <StackItem>\n        <Title headingLevel={'h3'}>Result</Title>\n        <Caption>\n          <Split hasGutter>\n            <SplitItem>\n              <span style={{ color: 'grey' }} data-testid=\"result-all-type\">\n                {getType(hookResult)}\n              </span>\n            </SplitItem>\n            <SplitItem>\n              <span style={{ color: 'grey' }} data-testid=\"result-all-status\">\n                {resultStatusRef.current}\n              </span>\n            </SplitItem>\n          </Split>\n        </Caption>\n        {renderTable(resultArrayStatusesRef.current, hookResultArray, 'result', true)}\n      </StackItem>\n      <StackItem>\n        <Title headingLevel={'h4'}>data-testid key</Title>\n        <List>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=params-default</span> - default parameters\n            select button\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=params-[index]</span> - select parameters\n            button\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=result-all-type</span> - type of non\n            destructured result\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=result-all-status</span> - status of non\n            destructured result\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=call-function-[index]</span> - call function\n            button\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=param-type-[index]</span> - type of\n            parameter\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=param-value-[index]</span> - value of\n            parameter\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=param-status-[index]</span> - status of\n            parameter\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=result-type-[index]</span> - type of result\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=result-value-[index]</span> - value of\n            result\n          </ListItem>\n          <ListItem>\n            <span style={{ color: 'grey' }}>data-testid=result-status-[index]</span> - status of\n            result\n          </ListItem>\n        </List>\n      </StackItem>\n    </Stack>\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/useFetchState.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/hooks/useFetchState.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/clusterSettings/ClusterSettings.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/clusterSettings/ClusterSettings.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ModelServingGlobal.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ModelServingGlobal.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ServingRuntimeList.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/modelServing/ServingRuntimeList.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectDetails.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectDetails.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectView.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/integration/pages/projects/ProjectView.stories.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/__tests__/unit/notebookControllerUtils.spec.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/apiMergeUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/errorUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/builds.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/configMaps.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/dashboardConfig.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/events.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/groups.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/imageStreams.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/inferenceServices.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/notebooks.ts",["3373"],[],"import {\n  k8sCreateResource,\n  k8sDeleteResource,\n  k8sGetResource,\n  k8sListResource,\n  k8sPatchResource,\n  k8sUpdateResource,\n  Patch,\n} from '@openshift/dynamic-plugin-sdk-utils';\nimport * as _ from 'lodash';\nimport { NotebookModel } from '~/api/models';\nimport { K8sAPIOptions, K8sStatus, KnownLabels, NotebookKind } from '~/k8sTypes';\nimport { usernameTranslate } from '~/utilities/notebookControllerUtils';\nimport { EnvironmentFromVariable, StartNotebookData } from '~/pages/projects/types';\nimport { ROOT_MOUNT_PATH } from '~/pages/projects/pvc/const';\nimport { translateDisplayNameForK8s } from '~/pages/projects/utils';\nimport { getTolerationPatch, TolerationChanges } from '~/utilities/tolerations';\nimport { applyK8sAPIOptions } from '~/api/apiMergeUtils';\nimport {\n  generateElyraServiceAccountRoleBinding,\n  getElyraVolume,\n  getElyraVolumeMount,\n  getPipelineVolumeMountPatch,\n  getPipelineVolumePatch,\n} from '~/concepts/pipelines/elyra/utils';\nimport { createRoleBinding } from '~/api';\nimport { Volume, VolumeMount } from '~/types';\nimport { assemblePodSpecOptions } from './utils';\n\nconst assembleNotebook = (\n  data: StartNotebookData,\n  username: string,\n  canEnablePipelines?: boolean,\n): NotebookKind => {\n  const {\n    projectName,\n    notebookName,\n    notebookId: overrideNotebookId,\n    description,\n    notebookSize,\n    envFrom,\n    gpus,\n    image,\n    volumes: formVolumes,\n    volumeMounts: formVolumeMounts,\n    tolerationSettings,\n  } = data;\n  const notebookId = overrideNotebookId || translateDisplayNameForK8s(notebookName);\n  const imageUrl = `${image.imageStream?.status?.dockerImageRepository}:${image.imageVersion?.name}`;\n  const imageSelection = `${image.imageStream?.metadata.name}:${image.imageVersion?.name}`;\n\n  const { affinity, tolerations, resources } = assemblePodSpecOptions(\n    notebookSize.resources,\n    gpus,\n    tolerationSettings,\n  );\n\n  const translatedUsername = usernameTranslate(username);\n\n  const location = new URL(window.location.href);\n  const origin = location.origin;\n\n  let volumes: Volume[] | undefined = formVolumes && [...formVolumes];\n  let volumeMounts: VolumeMount[] | undefined = formVolumeMounts && [...formVolumeMounts];\n  if (canEnablePipelines) {\n    volumes = volumes || [];\n    volumes.push(getElyraVolume());\n\n    volumeMounts = volumeMounts || [];\n    volumeMounts.push(getElyraVolumeMount());\n  }\n\n  return {\n    apiVersion: 'kubeflow.org/v1',\n    kind: 'Notebook',\n    metadata: {\n      labels: {\n        app: notebookId,\n        'opendatahub.io/odh-managed': 'true',\n        'opendatahub.io/user': translatedUsername,\n        [KnownLabels.DASHBOARD_RESOURCE]: 'true',\n      },\n      annotations: {\n        'openshift.io/display-name': notebookName,\n        'openshift.io/description': description || '',\n        'notebooks.opendatahub.io/oauth-logout-url': `${origin}/projects/${projectName}?notebookLogout=${notebookId}`,\n        'notebooks.opendatahub.io/last-size-selection': notebookSize.name,\n        'notebooks.opendatahub.io/last-image-selection': imageSelection,\n        'notebooks.opendatahub.io/inject-oauth': 'true',\n        'opendatahub.io/username': username,\n      },\n      name: notebookId,\n      namespace: projectName,\n    },\n    spec: {\n      template: {\n        spec: {\n          affinity,\n          enableServiceLinks: false,\n          containers: [\n            {\n              image: imageUrl,\n              imagePullPolicy: 'Always',\n              workingDir: ROOT_MOUNT_PATH,\n              name: notebookId,\n              env: [\n                {\n                  name: 'NOTEBOOK_ARGS',\n                  value: `--ServerApp.port=8888\n                  --ServerApp.token=''\n                  --ServerApp.password=''\n                  --ServerApp.base_url=/notebook/${projectName}/${notebookId}\n                  --ServerApp.quit_button=False\n                  --ServerApp.tornado_settings={\"user\":\"${translatedUsername}\",\"hub_host\":\"${origin}\",\"hub_prefix\":\"/projects/${projectName}\"}`,\n                },\n                {\n                  name: 'JUPYTER_IMAGE',\n                  value: imageUrl,\n                },\n              ],\n              envFrom,\n              resources,\n              volumeMounts,\n              ports: [\n                {\n                  name: 'notebook-port',\n                  containerPort: 8888,\n                  protocol: 'TCP',\n                },\n              ],\n              livenessProbe: {\n                initialDelaySeconds: 10,\n                periodSeconds: 5,\n                timeoutSeconds: 1,\n                successThreshold: 1,\n                failureThreshold: 3,\n                httpGet: {\n                  scheme: 'HTTP',\n                  path: `/notebook/${projectName}/${notebookId}/api`,\n                  port: 'notebook-port',\n                },\n              },\n              readinessProbe: {\n                initialDelaySeconds: 10,\n                periodSeconds: 5,\n                timeoutSeconds: 1,\n                successThreshold: 1,\n                failureThreshold: 3,\n                httpGet: {\n                  scheme: 'HTTP',\n                  path: `/notebook/${projectName}/${notebookId}/api`,\n                  port: 'notebook-port',\n                },\n              },\n            },\n          ],\n          volumes,\n          tolerations,\n        },\n      },\n    },\n  };\n};\n\nconst getStopPatchDataString = (): string => new Date().toISOString().replace(/\\.\\d{3}Z/i, 'Z');\n\nconst startPatch: Patch = {\n  op: 'remove',\n  path: '/metadata/annotations/kubeflow-resource-stopped',\n};\nconst getStopPatch = (): Patch => ({\n  op: 'add',\n  path: '/metadata/annotations/kubeflow-resource-stopped',\n  value: getStopPatchDataString(),\n});\n\nexport const getNotebooks = (namespace: string): Promise<NotebookKind[]> =>\n  k8sListResource<NotebookKind>({\n    model: NotebookModel,\n    queryOptions: { ns: namespace },\n  }).then((listResource) => listResource.items);\n\nexport const getNotebook = (name: string, namespace: string): Promise<NotebookKind> =>\n  k8sGetResource<NotebookKind>({\n    model: NotebookModel,\n    queryOptions: { name, ns: namespace },\n  });\n\nexport const stopNotebook = (name: string, namespace: string): Promise<NotebookKind> =>\n  k8sPatchResource<NotebookKind>({\n    model: NotebookModel,\n    queryOptions: { name, ns: namespace },\n    patches: [getStopPatch()],\n  });\n\nexport const startNotebook = async (\n  name: string,\n  namespace: string,\n  tolerationChanges: TolerationChanges,\n  enablePipelines?: boolean,\n): Promise<NotebookKind> => {\n  const patches: Patch[] = [];\n  patches.push(startPatch);\n\n  const tolerationPatch = getTolerationPatch(tolerationChanges);\n  if (tolerationPatch) {\n    patches.push(tolerationPatch);\n  }\n\n  if (enablePipelines) {\n    patches.push(getPipelineVolumePatch());\n    patches.push(getPipelineVolumeMountPatch());\n    await createRoleBinding(generateElyraServiceAccountRoleBinding(name, namespace)).catch((e) => {\n      // This is not ideal, but it shouldn't impact the starting of the notebook. Let us log it, and mute the error\n      // eslint-disable-next-line no-console\n      console.error(\n        `Could not patch rolebinding to service account for notebook, ${name}; Reason ${e.message}`,\n      );\n    });\n  }\n\n  return k8sPatchResource<NotebookKind>({\n    model: NotebookModel,\n    queryOptions: { name, ns: namespace },\n    patches,\n  });\n};\n\nexport const createNotebook = (\n  data: StartNotebookData,\n  username: string,\n  canEnablePipelines?: boolean,\n): Promise<NotebookKind> => {\n  const notebook = assembleNotebook(data, username, canEnablePipelines);\n\n  const notebookPromise = k8sCreateResource<NotebookKind>({\n    model: NotebookModel,\n    resource: notebook,\n  });\n\n  if (canEnablePipelines) {\n    return createRoleBinding(\n      generateElyraServiceAccountRoleBinding(notebook.metadata.name, notebook.metadata.namespace),\n    ).then(() => notebookPromise);\n  }\n\n  return notebookPromise;\n};\n\nexport const updateNotebook = (\n  existingNotebook: NotebookKind,\n  data: StartNotebookData,\n  username: string,\n): Promise<NotebookKind> => {\n  data.notebookId = existingNotebook.metadata.name;\n  const notebook = assembleNotebook(data, username);\n\n  const oldNotebook = structuredClone(existingNotebook);\n  const container = oldNotebook.spec.template.spec.containers[0];\n\n  // clean the envFrom array in case of merging the old value again\n  container.envFrom = [];\n  // clean the resources, affinity and tolerations for GPU\n  oldNotebook.spec.template.spec.tolerations = [];\n  oldNotebook.spec.template.spec.affinity = {};\n  container.resources = {};\n\n  return k8sUpdateResource<NotebookKind>({\n    model: NotebookModel,\n    resource: _.merge({}, oldNotebook, notebook),\n  });\n};\n\nexport const createNotebookWithoutStarting = (\n  data: StartNotebookData,\n  username: string,\n): Promise<NotebookKind> =>\n  new Promise((resolve, reject) =>\n    createNotebook(data, username).then((notebook) =>\n      setTimeout(\n        () =>\n          stopNotebook(notebook.metadata.name, notebook.metadata.namespace)\n            .then(resolve)\n            .catch(reject),\n        10_000,\n      ),\n    ),\n  );\n\nexport const deleteNotebook = (notebookName: string, namespace: string): Promise<K8sStatus> =>\n  k8sDeleteResource<NotebookKind, K8sStatus>({\n    model: NotebookModel,\n    queryOptions: { name: notebookName, ns: namespace },\n  });\n\nexport const attachNotebookSecret = (\n  notebookName: string,\n  namespace: string,\n  secretName: string,\n  hasExistingEnvFrom: boolean,\n  opts?: K8sAPIOptions,\n): Promise<NotebookKind> => {\n  const patches: Patch[] = [];\n\n  if (!hasExistingEnvFrom) {\n    // Create the array if it does not exist\n    patches.push({\n      op: 'add',\n      // TODO: can we assume first container?\n      path: '/spec/template/spec/containers/0/envFrom',\n      value: [],\n    });\n  }\n\n  patches.push({\n    op: 'add',\n    // TODO: can we assume first container?\n    path: '/spec/template/spec/containers/0/envFrom/-',\n    value: {\n      secretRef: {\n        name: secretName,\n      },\n    },\n  });\n\n  return k8sPatchResource<NotebookKind>(\n    applyK8sAPIOptions(opts, {\n      model: NotebookModel,\n      queryOptions: { name: notebookName, ns: namespace },\n      patches,\n    }),\n  );\n};\n\nexport const replaceNotebookSecret = (\n  notebookName: string,\n  namespace: string,\n  newEnvs: EnvironmentFromVariable[],\n  opts?: K8sAPIOptions,\n): Promise<NotebookKind> => {\n  const patches: Patch[] = [\n    {\n      op: 'replace',\n      // TODO: can we assume first container?\n      path: '/spec/template/spec/containers/0/envFrom',\n      value: newEnvs,\n    },\n  ];\n\n  return k8sPatchResource<NotebookKind>(\n    applyK8sAPIOptions(opts, {\n      model: NotebookModel,\n      queryOptions: { name: notebookName, ns: namespace },\n      patches,\n    }),\n  );\n};\n\nexport const attachNotebookPVC = (\n  notebookName: string,\n  namespace: string,\n  pvcName: string,\n  mountSuffix: string,\n): Promise<NotebookKind> => {\n  const patches: Patch[] = [\n    {\n      op: 'add',\n      path: '/spec/template/spec/volumes/-',\n      value: { name: pvcName, persistentVolumeClaim: { claimName: pvcName } },\n    },\n    {\n      op: 'add',\n      // TODO: can we assume first container?\n      path: '/spec/template/spec/containers/0/volumeMounts/-',\n      value: { mountPath: `${ROOT_MOUNT_PATH}/${mountSuffix}`, name: pvcName },\n    },\n  ];\n\n  return k8sPatchResource<NotebookKind>({\n    model: NotebookModel,\n    queryOptions: { name: notebookName, ns: namespace },\n    patches,\n  });\n};\n\nexport const removeNotebookPVC = (\n  notebookName: string,\n  namespace: string,\n  pvcName: string,\n): Promise<NotebookKind> =>\n  new Promise((resolve, reject) => {\n    getNotebook(notebookName, namespace)\n      .then((notebook) => {\n        const volumes = notebook.spec.template.spec.volumes || [];\n        // TODO: can we assume first container?\n        const volumeMounts = notebook.spec.template.spec.containers[0].volumeMounts || [];\n        const filteredVolumes = volumes.filter(\n          (volume) => volume.persistentVolumeClaim?.claimName !== pvcName,\n        );\n        const filteredVolumeMounts = volumeMounts.filter(\n          (volumeMount) => volumeMount.name !== pvcName,\n        );\n\n        const patches: Patch[] = [\n          {\n            op: 'replace',\n            path: '/spec/template/spec/volumes',\n            value: filteredVolumes,\n          },\n          {\n            op: 'replace',\n            // TODO: can we assume first container?\n            path: '/spec/template/spec/containers/0/volumeMounts',\n            value: filteredVolumeMounts,\n          },\n        ];\n\n        k8sPatchResource<NotebookKind>({\n          model: NotebookModel,\n          queryOptions: { name: notebookName, ns: namespace },\n          patches,\n        })\n          .then(resolve)\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n\nexport const removeNotebookSecret = (\n  notebookName: string,\n  namespace: string,\n  secretName: string,\n): Promise<NotebookKind> =>\n  new Promise((resolve, reject) => {\n    getNotebook(notebookName, namespace)\n      .then((notebook) => {\n        const envFroms = notebook.spec.template.spec.containers[0].envFrom || [];\n        const filteredEnvFroms = envFroms.filter(\n          (envFrom) => envFrom.secretRef?.name !== secretName,\n        );\n\n        const patches: Patch[] = [\n          {\n            op: 'replace',\n            // TODO: can we assume first container?\n            path: '/spec/template/spec/containers/0/envFrom',\n            value: filteredEnvFroms,\n          },\n        ];\n\n        k8sPatchResource<NotebookKind>({\n          model: NotebookModel,\n          queryOptions: { name: notebookName, ns: namespace },\n          patches,\n        })\n          .then(resolve)\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n","/Users/jshandel/odh-dashboard/frontend/src/api/k8s/pods.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/projects.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/pvcs.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/roleBindings.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/routes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/secrets.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/serviceAccounts.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/servingRuntimes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/templates.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/users.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/k8s/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/models/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/models/k8s.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/models/odh.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/models/openShift.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/models/pipelines.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/callTypes.ts",["3374"],[],"import {\n  GetPipeline,\n  DeletePipeline,\n  ListPipelineRuns,\n  ListPipelineRunJobs,\n  ListPipelineRunsByPipeline,\n  ListPipelines,\n  ListPipelineTemplates,\n  UploadPipeline,\n  UpdatePipelineRunJob,\n  GetPipelineRun,\n  StopPipelineRun,\n  ListExperiments,\n  CreateExperiment,\n  GetExperiment,\n  CreatePipelineRun,\n  CreatePipelineRunJob,\n  GetPipelineRunJob,\n  DeletePipelineRunJob,\n  DeletePipelineRun,\n} from '~/concepts/pipelines/types';\nimport { K8sAPIOptions } from '~/k8sTypes';\n\n// TODO: Determine if there is a better typing than `any` -- the caller makes the proper type\n// eslint-disable-next-line\ntype KubeflowSpecificAPICall = (opts: K8sAPIOptions, ...args: any[]) => Promise<unknown>;\ntype KubeflowAPICall<ActualCall extends KubeflowSpecificAPICall> = (hostPath: string) => ActualCall;\n\nexport type CreateExperimentAPI = KubeflowAPICall<CreateExperiment>;\nexport type CreatePipelineRunAPI = KubeflowAPICall<CreatePipelineRun>;\nexport type CreatePipelineRunJobAPI = KubeflowAPICall<CreatePipelineRunJob>;\nexport type GetExperimentAPI = KubeflowAPICall<GetExperiment>;\nexport type GetPipelineAPI = KubeflowAPICall<GetPipeline>;\nexport type GetPipelineRunAPI = KubeflowAPICall<GetPipelineRun>;\nexport type GetPipelineRunJobAPI = KubeflowAPICall<GetPipelineRunJob>;\nexport type DeletePipelineAPI = KubeflowAPICall<DeletePipeline>;\nexport type DeletePipelineRunAPI = KubeflowAPICall<DeletePipelineRun>;\nexport type DeletePipelineRunJobAPI = KubeflowAPICall<DeletePipelineRunJob>;\nexport type ListExperimentsAPI = KubeflowAPICall<ListExperiments>;\nexport type ListPipelinesAPI = KubeflowAPICall<ListPipelines>;\nexport type ListPipelinesRunAPI = KubeflowAPICall<ListPipelineRuns>;\nexport type ListPipelinesRunJobAPI = KubeflowAPICall<ListPipelineRunJobs>;\nexport type ListPipelineRunsByPipelineAPI = KubeflowAPICall<ListPipelineRunsByPipeline>;\nexport type ListPipelineTemplatesAPI = KubeflowAPICall<ListPipelineTemplates>;\nexport type StopPipelineRunAPI = KubeflowAPICall<StopPipelineRun>;\nexport type UpdatePipelineRunJobAPI = KubeflowAPICall<UpdatePipelineRunJob>;\nexport type UploadPipelineAPI = KubeflowAPICall<UploadPipeline>;\n","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/custom.ts",["3375","3376","3377","3378","3379","3380"],[],"import { proxyCREATE, proxyDELETE, proxyENDPOINT, proxyFILE, proxyGET } from '~/api/proxyUtils';\nimport { ResourceTypeKF } from '~/concepts/pipelines/kfTypes';\nimport {\n  GetPipelineAPI,\n  DeletePipelineAPI,\n  ListPipelineRunsByPipelineAPI,\n  ListPipelinesRunAPI,\n  ListPipelinesRunJobAPI,\n  ListPipelinesAPI,\n  ListPipelineTemplatesAPI,\n  UploadPipelineAPI,\n  UpdatePipelineRunJobAPI,\n  GetPipelineRunAPI,\n  StopPipelineRunAPI,\n  ListExperimentsAPI,\n  CreateExperimentAPI,\n  GetExperimentAPI,\n  CreatePipelineRunAPI,\n  CreatePipelineRunJobAPI,\n  GetPipelineRunJobAPI,\n  DeletePipelineRunAPI,\n  DeletePipelineRunJobAPI,\n} from './callTypes';\nimport { handlePipelineFailures } from './errorUtils';\n\nexport const createExperiment: CreateExperimentAPI = (hostPath) => (opts, name, description) =>\n  handlePipelineFailures(\n    proxyCREATE(hostPath, `/apis/v1beta1/experiments`, { name, description }, {}, opts),\n  );\n\nexport const createPipelineRun: CreatePipelineRunAPI = (hostPath) => (opts, data) =>\n  handlePipelineFailures(proxyCREATE(hostPath, `/apis/v1beta1/runs`, data, {}, opts));\n\nexport const createPipelineRunJob: CreatePipelineRunJobAPI = (hostPath) => (opts, data) =>\n  handlePipelineFailures(proxyCREATE(hostPath, `/apis/v1beta1/jobs`, data, {}, opts));\n\nexport const getExperiment: GetExperimentAPI = (hostPath) => (opts, experimentId) =>\n  handlePipelineFailures(proxyGET(hostPath, `/apis/v1beta1/experiments/${experimentId}`, {}, opts));\n\nexport const getPipeline: GetPipelineAPI = (hostPath) => (opts, pipelineId) =>\n  handlePipelineFailures(proxyGET(hostPath, `/apis/v1beta1/pipelines/${pipelineId}`, {}, opts));\n\nexport const getPipelineRun: GetPipelineRunAPI = (hostPath) => (opts, pipelineRunId) =>\n  handlePipelineFailures(proxyGET(hostPath, `/apis/v1beta1/runs/${pipelineRunId}`, {}, opts));\n\nexport const getPipelineRunJob: GetPipelineRunJobAPI = (hostPath) => (opts, pipelineRunJobId) =>\n  handlePipelineFailures(proxyGET(hostPath, `/apis/v1beta1/jobs/${pipelineRunJobId}`, {}, opts));\n\nexport const deletePipeline: DeletePipelineAPI = (hostPath) => (opts, pipelineId) =>\n  handlePipelineFailures(proxyDELETE(hostPath, `/apis/v1beta1/pipelines/${pipelineId}`, {}, opts));\n\nexport const deletePipelineRun: DeletePipelineRunAPI = (hostPath) => (opts, runId) =>\n  handlePipelineFailures(proxyDELETE(hostPath, `/apis/v1beta1/runs/${runId}`, {}, opts));\n\nexport const deletePipelineRunJob: DeletePipelineRunJobAPI = (hostPath) => (opts, jobId) =>\n  handlePipelineFailures(proxyDELETE(hostPath, `/apis/v1beta1/jobs/${jobId}`, {}, opts));\n\nexport const listExperiments: ListExperimentsAPI = (hostPath) => (opts) =>\n  handlePipelineFailures(\n    // eslint-disable-next-line camelcase\n    proxyGET(hostPath, '/apis/v1beta1/experiments', {}, opts),\n  );\n\nexport const listPipelines: ListPipelinesAPI = (hostPath) => (opts, count) =>\n  handlePipelineFailures(\n    // eslint-disable-next-line camelcase\n    proxyGET(\n      hostPath,\n      '/apis/v1beta1/pipelines',\n      // eslint-disable-next-line camelcase\n      { page_size: count, sort_by: 'created_at desc' },\n      opts,\n    ),\n  );\n\nexport const listPipelineRuns: ListPipelinesRunAPI = (hostPath) => (opts) =>\n  handlePipelineFailures(\n    // eslint-disable-next-line camelcase\n    proxyGET(hostPath, '/apis/v1beta1/runs', { sort_by: 'created_at desc' }, opts),\n  );\n\nexport const listPipelineRunJobs: ListPipelinesRunJobAPI = (hostPath) => (opts) =>\n  handlePipelineFailures(proxyGET(hostPath, '/apis/v1beta1/jobs', {}, opts));\n\nexport const listPipelineRunsByPipeline: ListPipelineRunsByPipelineAPI =\n  (hostPath) => (opts, pipelineId, count) =>\n    handlePipelineFailures(\n      proxyGET(\n        hostPath,\n        '/apis/v1beta1/runs',\n        {\n          'resource_reference_key.id': pipelineId,\n          'resource_reference_key.type': ResourceTypeKF.PIPELINE_VERSION,\n          // eslint-disable-next-line camelcase\n          page_size: count,\n          // eslint-disable-next-line camelcase\n          sort_by: 'created_at desc',\n        },\n        opts,\n      ),\n    );\n\nexport const listPipelineTemplates: ListPipelineTemplatesAPI = (hostPath) => (opts, pipelineId) =>\n  handlePipelineFailures(\n    proxyGET(hostPath, `/apis/v1beta1/pipelines/${pipelineId}/templates`, {}, opts),\n  );\n\nexport const stopPipelineRun: StopPipelineRunAPI = (hostPath) => (opts, runId) =>\n  handlePipelineFailures(\n    proxyENDPOINT(hostPath, `/apis/v1beta1/runs/${runId}/terminate`, {}, opts),\n  );\n\nexport const updatePipelineRunJob: UpdatePipelineRunJobAPI = (hostPath) => (opts, jobId, enabled) =>\n  handlePipelineFailures(\n    proxyENDPOINT(\n      hostPath,\n      `/apis/v1beta1/jobs/${jobId}/${enabled ? 'enable' : 'disable'}`,\n      {},\n      opts,\n    ),\n  );\n\nexport const uploadPipeline: UploadPipelineAPI =\n  (hostPath) => (opts, name, description, fileContents) =>\n    handlePipelineFailures(\n      proxyFILE(hostPath, '/apis/v1beta1/pipelines/upload', fileContents, { name, description }),\n    );\n","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/errorUtils.ts",["3381"],[],"import { isCommonStateError } from '~/utilities/useFetchState';\n\ntype ErrorKF = {\n  error: string;\n  code: number;\n  details: Record<string, unknown>;\n};\ntype ResultErrorKF = {\n  /** Has stack trace */\n  error_details: string;\n  /** Displayable message */\n  error_message: string;\n};\n\nconst isErrorKF = (e: unknown): e is ErrorKF =>\n  ['error', 'code', 'details'].every((key) => key in (e as ErrorKF));\n\nconst isErrorDetailsKF = (result: unknown): result is ResultErrorKF =>\n  ['error_details', 'error_message'].every((key) => key in (result as ResultErrorKF));\n\nexport const handlePipelineFailures = <T>(promise: Promise<T>): Promise<T> =>\n  promise\n    .then((result) => {\n      if (isErrorKF(result)) {\n        throw result;\n      }\n      if (isErrorDetailsKF(result)) {\n        const errorKF: ErrorKF = {\n          error: result.error_message,\n          code: 400, // assume it's our fault\n          details: { trace: result.error_details },\n        };\n        throw errorKF;\n      }\n\n      return result;\n    })\n    .catch((e) => {\n      if (isErrorKF(e)) {\n        throw new Error(e.error);\n      }\n      if (isCommonStateError(e)) {\n        // Common state errors are handled by useFetchState at storage level, let them deal with it\n        throw e;\n      }\n\n      // eslint-disable-next-line no-console\n      console.error('Unknown pipeline API error', e);\n      throw new Error('Error communicating with pipeline server');\n    });\n","/Users/jshandel/odh-dashboard/frontend/src/api/pipelines/k8s.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/pvcs.ts",["3382"],[],"import * as React from 'react';\nimport { PersistentVolumeClaimKind } from '~/k8sTypes';\nimport { POLL_INTERVAL } from '~/utilities/const';\nimport usePrometheusQuery from './usePrometheusQuery';\n\nexport const usePVCFreeAmount = (\n  pvc: PersistentVolumeClaimKind,\n): [bytesInUse: number | typeof NaN, loaded: boolean, error: Error | undefined] => {\n  const [result, loaded, loadError, refetch] = usePrometheusQuery(\n    '/api/prometheus/pvc',\n    `namespace=${pvc.metadata.namespace}&query=kubelet_volume_stats_used_bytes{persistentvolumeclaim='${pvc.metadata.name}'}`,\n  );\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      refetch();\n    }, POLL_INTERVAL);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [refetch]);\n\n  const value = result?.data.result[0]?.value[1];\n  const usedInBytes = parseInt(value || '', 10);\n\n  return [usedInBytes, loaded, loadError];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/serving.ts",["3383"],[],"import * as React from 'react';\nimport { ContextResourceData, PrometheusQueryRangeResultValue } from '~/types';\nimport { ModelServingMetricType } from '~/pages/modelServing/screens/metrics/ModelServingMetricsContext';\nimport { TimeframeTitle } from '~/pages/modelServing/screens/types';\nimport useQueryRangeResourceData from './useQueryRangeResourceData';\n\nexport const useModelServingMetrics = (\n  queries: Record<ModelServingMetricType, string>,\n  timeframe: TimeframeTitle,\n  lastUpdateTime: number,\n  setLastUpdateTime: (time: number) => void,\n): {\n  data: Record<ModelServingMetricType, ContextResourceData<PrometheusQueryRangeResultValue>>;\n  refresh: () => void;\n} => {\n  const [end, setEnd] = React.useState(lastUpdateTime);\n\n  const endpointHealth = useQueryRangeResourceData(\n    queries[ModelServingMetricType.ENDPOINT_HEALTH],\n    end,\n    timeframe,\n  );\n  const inferencePerformance = useQueryRangeResourceData(\n    queries[ModelServingMetricType.INFERENCE_PERFORMANCE],\n    end,\n    timeframe,\n  );\n  const averageResponseTime = useQueryRangeResourceData(\n    queries[ModelServingMetricType.AVG_RESPONSE_TIME],\n    end,\n    timeframe,\n  );\n  const requestCount = useQueryRangeResourceData(\n    queries[ModelServingMetricType.REQUEST_COUNT],\n    end,\n    timeframe,\n  );\n  const failedRequestCount = useQueryRangeResourceData(\n    queries[ModelServingMetricType.FAILED_REQUEST_COUNT],\n    end,\n    timeframe,\n  );\n\n  React.useEffect(() => {\n    setLastUpdateTime(Date.now());\n    // re-compute lastUpdateTime when data changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [endpointHealth, inferencePerformance, averageResponseTime, requestCount, failedRequestCount]);\n\n  const refreshAllMetrics = React.useCallback(() => {\n    setEnd(Date.now());\n  }, []);\n\n  return React.useMemo(\n    () => ({\n      data: {\n        [ModelServingMetricType.ENDPOINT_HEALTH]: endpointHealth,\n        [ModelServingMetricType.INFERENCE_PERFORMANCE]: inferencePerformance,\n        [ModelServingMetricType.AVG_RESPONSE_TIME]: averageResponseTime,\n        [ModelServingMetricType.REQUEST_COUNT]: requestCount,\n        [ModelServingMetricType.FAILED_REQUEST_COUNT]: failedRequestCount,\n      },\n      refresh: refreshAllMetrics,\n    }),\n    [\n      endpointHealth,\n      inferencePerformance,\n      averageResponseTime,\n      requestCount,\n      failedRequestCount,\n      refreshAllMetrics,\n    ],\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/usePrometheusQuery.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/usePrometheusQueryRange.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/prometheus/useQueryRangeResourceData.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/proxyUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/api/useAccessReview.ts",["3384"],[],"import { k8sCreateResource } from '@openshift/dynamic-plugin-sdk-utils';\nimport * as React from 'react';\nimport { ProjectModel, SelfSubjectAccessReviewModel } from '~/api/models';\nimport { AccessReviewResourceAttributes, SelfSubjectAccessReviewKind } from '~/k8sTypes';\n\nconst checkAccess = ({\n  group,\n  resource,\n  subresource,\n  verb,\n  name,\n  namespace,\n}: Required<AccessReviewResourceAttributes>): Promise<SelfSubjectAccessReviewKind> => {\n  // Projects are a special case. `namespace` must be set to the project name\n  // even though it's a cluster-scoped resource.\n  const reviewNamespace =\n    group === ProjectModel.apiGroup && resource === ProjectModel.plural ? name : namespace;\n  const selfSubjectAccessReview: SelfSubjectAccessReviewKind = {\n    apiVersion: 'authorization.k8s.io/v1',\n    kind: 'SelfSubjectAccessReview',\n    spec: {\n      resourceAttributes: {\n        group,\n        resource,\n        subresource,\n        verb,\n        name,\n        namespace: reviewNamespace,\n      },\n    },\n  };\n  return k8sCreateResource<SelfSubjectAccessReviewKind>({\n    model: SelfSubjectAccessReviewModel,\n    resource: selfSubjectAccessReview,\n  });\n};\n\nexport const useAccessReview = (\n  resourceAttributes: AccessReviewResourceAttributes,\n): [boolean, boolean] => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [isAllowed, setAllowed] = React.useState(false);\n\n  const {\n    group = '',\n    resource = '',\n    subresource = '',\n    verb,\n    name = '',\n    namespace = '',\n  } = resourceAttributes;\n\n  React.useEffect(() => {\n    checkAccess({ group, resource, subresource, verb, name, namespace })\n      .then((result) => {\n        if (result.status) {\n          setAllowed(result.status.allowed);\n        } else {\n          setAllowed(true);\n        }\n        setLoaded(true);\n      })\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.warn('SelfSubjectAccessReview failed', e);\n        setAllowed(true);\n        setLoaded(true);\n      });\n  }, [group, name, namespace, resource, subresource, verb]);\n\n  return [isAllowed, loaded];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/app/App.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/AppContext.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/AppLauncher.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/AppNotificationDrawer.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/AppRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/Header.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/HeaderTools.tsx",["3385"],[],"import React from 'react';\nimport {\n\tNotificationBadge,\n\tToolbar,\n\tToolbarContent,\n\tToolbarGroup,\n\tToolbarItem,\n\tButton,\n\tTooltip\n} from '@patternfly/react-core';\nimport {\n\tDropdown,\n\tDropdownPosition,\n\tDropdownToggle,\n\tDropdownItem\n} from '@patternfly/react-core/deprecated';\nimport { ExternalLinkAltIcon, QuestionCircleIcon } from '@patternfly/react-icons';\nimport { COMMUNITY_LINK, DOC_LINK, SUPPORT_LINK, DEV_MODE } from '~/utilities/const';\nimport useNotification from '~/utilities/useNotification';\nimport { updateImpersonateSettings } from '~/services/impersonateService';\nimport { AppNotification } from '~/redux/types';\nimport { useAppSelector } from '~/redux/hooks';\nimport AppLauncher from './AppLauncher';\nimport { useAppContext } from './AppContext';\nimport { logout } from './appUtils';\n\ninterface HeaderToolsProps {\n  onNotificationsClick: () => void;\n}\n\nconst HeaderTools: React.FC<HeaderToolsProps> = ({ onNotificationsClick }) => {\n  const [userMenuOpen, setUserMenuOpen] = React.useState(false);\n  const [helpMenuOpen, setHelpMenuOpen] = React.useState(false);\n  const notifications: AppNotification[] = useAppSelector((state) => state.notifications);\n  const userName: string = useAppSelector((state) => state.user || '');\n  const isImpersonating: boolean = useAppSelector((state) => state.isImpersonating || false);\n  const { dashboardConfig } = useAppContext();\n  const notification = useNotification();\n\n  const newNotifications = React.useMemo(\n    () => notifications.filter((notification) => !notification.read).length,\n    [notifications],\n  );\n\n  const handleLogout = () => {\n    setUserMenuOpen(false);\n    logout().then(() => {\n      /* eslint-disable-next-line no-console */\n      console.log('logged out');\n      window.location.reload();\n    });\n  };\n\n  const userMenuItems = [\n    <DropdownItem key=\"logout\" onClick={handleLogout}>\n      Log out\n    </DropdownItem>,\n  ];\n\n  if (DEV_MODE && !isImpersonating) {\n    userMenuItems.unshift(\n      <DropdownItem\n        key=\"impersonate\"\n        onClick={() => {\n          updateImpersonateSettings(true)\n            .then(() => location.reload())\n            .catch((e) => notification.error('Failed impersonating user', e.message));\n        }}\n      >\n        Start impersonate\n      </DropdownItem>,\n    );\n  }\n\n  const handleHelpClick = () => {\n    setHelpMenuOpen(false);\n  };\n\n  const helpMenuItems: React.ReactElement[] = [];\n  if (DOC_LINK) {\n    helpMenuItems.push(\n      <DropdownItem\n        key=\"documentation\"\n        onClick={handleHelpClick}\n        href={DOC_LINK}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Documentation <ExternalLinkAltIcon />\n      </DropdownItem>,\n    );\n  }\n  if (SUPPORT_LINK && !dashboardConfig.spec.dashboardConfig.disableSupport) {\n    helpMenuItems.push(\n      <DropdownItem\n        key=\"support\"\n        onClick={handleHelpClick}\n        href={SUPPORT_LINK}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Support <ExternalLinkAltIcon />\n      </DropdownItem>,\n    );\n  }\n  if (COMMUNITY_LINK) {\n    helpMenuItems.push(\n      <DropdownItem\n        key=\"community\"\n        onClick={handleHelpClick}\n        href={COMMUNITY_LINK}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Community <ExternalLinkAltIcon />\n      </DropdownItem>,\n    );\n  }\n\n  return (\n    <Toolbar isFullHeight>\n      <ToolbarContent>\n        <ToolbarGroup variant=\"icon-button-group\" align={{ default: 'alignRight' }}>\n          {!dashboardConfig.spec.dashboardConfig.disableAppLauncher ? (\n            <ToolbarItem>\n              <AppLauncher />\n            </ToolbarItem>\n          ) : null}\n          <ToolbarItem>\n            <NotificationBadge\n              aria-label=\"Notification drawer\"\n              variant=\"read\"\n              count={newNotifications}\n              onClick={onNotificationsClick}\n            />\n          </ToolbarItem>\n          {helpMenuItems.length > 0 ? (\n            <ToolbarItem>\n              <Dropdown\n                removeFindDomNode\n                isPlain\n                position={DropdownPosition.right}\n                toggle={\n                  <DropdownToggle\n                    aria-label=\"Help items\"\n                    toggleIndicator={null}\n                    id=\"help-icon-toggle\"\n                    onToggle={() => setHelpMenuOpen(!helpMenuOpen)}\n                  >\n                    <QuestionCircleIcon />\n                  </DropdownToggle>\n                }\n                isOpen={helpMenuOpen}\n                dropdownItems={helpMenuItems}\n              />\n            </ToolbarItem>\n          ) : null}\n        </ToolbarGroup>\n        {DEV_MODE && isImpersonating && (\n          <ToolbarItem>\n            <Tooltip\n              content={`You are impersonating as ${userName}, click to stop impersonating`}\n              position=\"bottom\"\n            >\n              <Button\n                onClick={() =>\n                  updateImpersonateSettings(false)\n                    .then(() => location.reload())\n                    .catch((e) => notification.error('Failed stopping impersonating', e.message))\n                }\n              >\n                Stop impersonate\n              </Button>\n            </Tooltip>\n          </ToolbarItem>\n        )}\n        <ToolbarItem>\n          <Dropdown\n            removeFindDomNode\n            isPlain\n            position={DropdownPosition.right}\n            toggle={\n              <DropdownToggle id=\"user-menu-toggle\" onToggle={() => setUserMenuOpen(!userMenuOpen)}>\n                {userName}\n              </DropdownToggle>\n            }\n            isOpen={userMenuOpen}\n            dropdownItems={userMenuItems}\n          />\n        </ToolbarItem>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nexport default HeaderTools;\n","/Users/jshandel/odh-dashboard/frontend/src/app/NavSidebar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/QuickStarts.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/TelemetrySetup.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/app/appUtils.ts",["3386"],[],"export const logout = (): Promise<unknown> =>\n  /* eslint-disable-next-line no-console */\n  fetch('/oauth/sign_out').catch((err) => console.error('Error logging out', err));\n","/Users/jshandel/odh-dashboard/frontend/src/app/useApplicationSettings.tsx",["3387"],[],"import * as React from 'react';\nimport { DashboardConfig } from '~/types';\nimport { POLL_INTERVAL } from '~/utilities/const';\nimport { useDeepCompareMemoize } from '~/utilities/useDeepCompareMemoize';\nimport { fetchDashboardConfig } from '~/services/dashboardConfigService';\nimport useTimeBasedRefresh from './useTimeBasedRefresh';\n\nexport const useApplicationSettings = (): {\n  dashboardConfig: DashboardConfig | null;\n  loaded: boolean;\n  loadError: Error | undefined;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [dashboardConfig, setDashboardConfig] = React.useState<DashboardConfig | null>(null);\n  const setRefreshMarker = useTimeBasedRefresh();\n\n  React.useEffect(() => {\n    let watchHandle;\n    let cancelled = false;\n    const watchDashboardConfig = () => {\n      fetchDashboardConfig()\n        .then((config) => {\n          if (cancelled) {\n            return;\n          }\n          setDashboardConfig(config);\n          setLoaded(true);\n          setLoadError(undefined);\n        })\n        .catch((e) => {\n          if (e?.message?.includes('Error getting Oauth Info for user')) {\n            // NOTE: this endpoint only requests oauth because of the security layer, this is not an ironclad use-case\n            // Something went wrong on the server with the Oauth, let us just log them out and refresh for them\n            /* eslint-disable-next-line no-console */\n            console.error(\n              'Something went wrong with the oauth token, please log out...',\n              e.message,\n              e,\n            );\n            setRefreshMarker(new Date());\n            return;\n          }\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchDashboardConfig, POLL_INTERVAL);\n    };\n    watchDashboardConfig();\n\n    return () => {\n      cancelled = true;\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n  }, [setRefreshMarker]);\n\n  const retConfig = useDeepCompareMemoize<DashboardConfig | null>(dashboardConfig);\n\n  return { dashboardConfig: retConfig, loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/app/useTimeBasedRefresh.ts",["3388","3389"],[],"import * as React from 'react';\nimport { useBrowserStorage } from '~/components/browserStorage';\nimport { logout } from './appUtils';\n\nexport type SetTime = (refreshDateMarker: Date) => void;\n\nconst useTimeBasedRefresh = (): SetTime => {\n  const KEY_NAME = 'odh.dashboard.last.auto.refresh';\n  const [lastRefreshTimestamp, setLastRefreshTimestamp] = useBrowserStorage(\n    KEY_NAME,\n    '0',\n    false,\n    true,\n  );\n  const ref = React.useRef<{\n    lastRefreshTimestamp: string;\n    setLastRefreshTimestamp: (newValue: string) => void;\n  }>({ lastRefreshTimestamp, setLastRefreshTimestamp });\n  ref.current = { lastRefreshTimestamp, setLastRefreshTimestamp };\n\n  return React.useCallback<SetTime>((refreshDateMarker) => {\n    // Intentionally avoid referential changes. We want the value at call time.\n    // Recomputing the ref is not needed and will impact usage in hooks if it does.\n    const lastDate = new Date(ref.current.lastRefreshTimestamp);\n    const setNewDateString = ref.current.setLastRefreshTimestamp;\n\n    /* eslint-disable no-console */\n    // Print into the console in case we are not refreshing or the browser has preserve log enabled\n    console.warn('Attempting to re-trigger an auto refresh');\n    console.log('Last refresh was on:', lastDate);\n    console.log('Refreshing requested after:', refreshDateMarker);\n\n    lastDate.setHours(lastDate.getHours() + 1);\n    if (lastDate < refreshDateMarker) {\n      setNewDateString(refreshDateMarker.toString());\n      console.log('Logging out and refreshing');\n      logout().then(() => window.location.reload());\n    } else {\n      console.error(\n        `We should have refreshed but it appears the last time we auto-refreshed was less than an hour ago. '${KEY_NAME}' session storage setting can be cleared for this to refresh again within the hour from the last refresh.`,\n      );\n    }\n    /* eslint-enable no-console */\n  }, []);\n};\n\nexport default useTimeBasedRefresh;\n","/Users/jshandel/odh-dashboard/frontend/src/components/BrandImage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/CPUField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/DocCardBadges.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/EmptyStateErrorMessage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ExternalLink.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/FavoriteButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/FieldList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/FilterSidePanelCategoryItem.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/FormGroupSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/GenericSidebar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/MarkdownView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/MemoryField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/MultiSelection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/NumberInputWrapper.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/OdhAppCard.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/OdhDocCard.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/OdhDocListItem.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/OdhExploreCard.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/OdhExploreCardTypeBadge.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/PasswordHiddenText.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ResourceNameTooltip.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ScrollViewOnMount.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/SettingSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/SimpleDropdownSelect.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/SimpleMenuActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/SupportedAppTitle.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ToastNotification.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ToastNotifications.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/ValueUnitField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/browserStorage/BrowserStorageContext.tsx",["3390","3391","3392"],[],"import * as React from 'react';\nimport { useEventListener } from '~/utilities/useEventListener';\n\ntype ValueMap = { [storageKey: string]: unknown };\nexport type BrowserStorageContext = {\n  /** Based on parseJSON it can be any jsonify-able item */\n  getValue: (storageKey: string, parseJSON: boolean, isSessionStorage?: boolean) => unknown;\n  /** Returns a boolean if it was able to json-ify it. */\n  setJSONValue: (storageKey: string, value: unknown, isSessionStorage?: boolean) => boolean;\n  setStringValue: (storageKey: string, value: string, isSessionStorage?: boolean) => void;\n};\n\nconst BrowserStorageContext = React.createContext<BrowserStorageContext>({\n  getValue: () => null,\n  setJSONValue: () => false,\n  setStringValue: () => undefined,\n});\n\n/**\n * @returns {boolean} if it was successful, false if it was not\n */\nexport type SetBrowserStorageHook<T> = (value: T) => boolean;\n\n/**\n * useBrowserStorage will handle all the effort behind managing localStorage or sessionStorage.\n */\nexport const useBrowserStorage = <T,>(\n  storageKey: string,\n  defaultValue: T,\n  jsonify = true,\n  isSessionStorage = false,\n): [T, SetBrowserStorageHook<T>] => {\n  const { getValue, setJSONValue, setStringValue } = React.useContext(BrowserStorageContext);\n\n  const setValue = React.useCallback<SetBrowserStorageHook<T>>(\n    (value) => {\n      if (jsonify) {\n        return setJSONValue(storageKey, value, isSessionStorage);\n      } else if (typeof value === 'string') {\n        setStringValue(storageKey, value, isSessionStorage);\n        return true;\n      }\n      /* eslint-disable-next-line no-console */\n      console.error('Was not a string value provided, cannot stringify');\n      return false;\n    },\n    [isSessionStorage, jsonify, setJSONValue, setStringValue, storageKey],\n  );\n\n  return [(getValue(storageKey, jsonify, isSessionStorage) as T) ?? defaultValue, setValue];\n};\n\ntype BrowserStorageContextProviderProps = {\n  children: React.ReactNode;\n};\n\nconst getStorage = (isSessionStorage: boolean): Storage => {\n  if (isSessionStorage) {\n    return sessionStorage;\n  }\n\n  return localStorage;\n};\n\n/**\n * @see useBrowserStorage\n */\nexport const BrowserStorageContextProvider: React.FC<BrowserStorageContextProviderProps> = ({\n  children,\n}) => {\n  const [values, setValues] = React.useState<ValueMap>({});\n\n  /**\n   * Only listen to other storage changes (windows/tabs) -- which are localStorage.\n   * Session storage does not have cross instance storages.\n   * See MDN for more: https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\n   */\n  useEventListener(window, 'storage', () => {\n    // Another browser tab has updated storage, sync up the data\n    const keys = Object.keys(values);\n    setValues(\n      keys.reduce((acc, key) => {\n        const value = localStorage.getItem(key);\n        return { ...acc, [key]: value };\n      }, {}),\n    );\n  });\n\n  const getValue = React.useCallback<BrowserStorageContext['getValue']>(\n    (key, parseJSON, isSessionStorage = false) => {\n      const value = getStorage(isSessionStorage).getItem(key);\n      if (value === null) {\n        return value;\n      }\n\n      if (parseJSON) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          /* eslint-disable-next-line no-console */\n          console.warn(`Failed to parse storage value \"${key}\"`);\n          return null;\n        }\n      } else {\n        return value;\n      }\n    },\n    [],\n  );\n\n  const setJSONValue = React.useCallback<BrowserStorageContext['setJSONValue']>(\n    (storageKey, value, isSessionStorage = false) => {\n      try {\n        const storageValue = JSON.stringify(value);\n        getStorage(isSessionStorage).setItem(storageKey, storageValue);\n        setValues((oldValues) => ({ ...oldValues, [storageKey]: storageValue }));\n\n        return true;\n      } catch (e) {\n        /* eslint-disable-next-line no-console */\n        console.warn(\n          'Could not store a value because it was requested to be stringified but was an invalid value for stringification.',\n        );\n        return false;\n      }\n    },\n    [],\n  );\n  const setStringValue = React.useCallback<BrowserStorageContext['setStringValue']>(\n    (storageKey, value, isSessionStorage = false) => {\n      getStorage(isSessionStorage).setItem(storageKey, value);\n      setValues((oldValues) => ({ ...oldValues, [storageKey]: value }));\n    },\n    [],\n  );\n\n  return (\n    <BrowserStorageContext.Provider value={{ getValue, setJSONValue, setStringValue }}>\n      {children}\n    </BrowserStorageContext.Provider>\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/components/browserStorage/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/dateRange/DateRange.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/dateRange/utils.ts",["3393"],[],"/**\n * A single string value for the DateRange component.\n * @see DateRange\n * @see makeDateRange\n * @see splitDateRange\n */\nexport type DateRangeString = string;\n\nconst DELIMITER = ' to ';\n\nexport const makeDateRange = (\n  startDate: string | Date | null,\n  endDate: string | Date | null,\n): DateRangeString => `${startDate ?? ''}${DELIMITER}${endDate ?? ''}`;\n\nexport const splitDateRange = (\n  dateRange: DateRangeString,\n): [startDate: string | null, endDate: string | null] => {\n  const [startDate, endDate] = dateRange.split(DELIMITER);\n\n  return [startDate || null, endDate || null];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/components/table/CheckboxTd.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/table/Table.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/table/TableRowTitleDescription.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/table/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/table/useCheckboxTable.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/table/useTableColumnSort.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/components/useQuickStartCardSelected.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/dashboard/DashboardModalFooter.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/dashboard/codeEditor/DashboardCodeEditor.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/k8s/NameDescriptionField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/EnsureAPIAvailability.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/NoPipelineServer.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/useExperiements.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/useExperimentById.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineById.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunById.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunJobById.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunJobs.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRuns.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineRunsForPipeline.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelineTemplate.ts",["3394"],[],"import * as React from 'react';\nimport YAML from 'yaml';\nimport useFetchState, { FetchStateCallbackPromise, NotReadyError } from '~/utilities/useFetchState';\nimport { usePipelinesAPI } from '~/concepts/pipelines/context';\nimport { PipelineRunKind } from '~/k8sTypes';\n\nconst usePipelineTemplate = (pipelineId?: string) => {\n  const { api } = usePipelinesAPI();\n\n  const call = React.useCallback<FetchStateCallbackPromise<PipelineRunKind | null>>(\n    (opts) => {\n      if (!pipelineId) {\n        return Promise.reject(new NotReadyError('No pipeline id'));\n      }\n\n      return api.listPipelineTemplate(opts, pipelineId).then(({ template }) => {\n        let pipelineRun: PipelineRunKind;\n        try {\n          pipelineRun = YAML.parse(template);\n        } catch (e) {\n          const message = (e as Error)?.message || '';\n          // eslint-disable-next-line no-console\n          console.error('Error parsing yaml', e);\n          throw new Error(`Unable to parse Pipeline structure. ${message}`);\n        }\n        return pipelineRun;\n      });\n    },\n    [api, pipelineId],\n  );\n\n  return useFetchState(call, null);\n};\n\nexport default usePipelineTemplate;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/apiHooks/usePipelines.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/DeletePipelineCoreResourceModal.tsx",["3395","3396"],[],"import * as React from 'react';\nimport { Icon, List, ListItem, Stack, StackItem, Text, Tooltip } from '@patternfly/react-core';\nimport { CheckCircleIcon, ExclamationCircleIcon, PendingIcon } from '@patternfly/react-icons';\nimport DeleteModal from '~/pages/projects/components/DeleteModal';\nimport { usePipelinesAPI } from '~/concepts/pipelines/context';\nimport { PipelineCoreResourceKF } from '~/concepts/pipelines/kfTypes';\nimport { K8sAPIOptions } from '~/k8sTypes';\nimport useNotification from '~/utilities/useNotification';\n\ntype DeletePipelineCoreResourceModalProps = {\n  type: 'triggered run' | 'scheduled run' | 'pipeline';\n  toDeleteResources: PipelineCoreResourceKF[];\n  onClose: (deleted?: boolean) => void;\n};\n\nconst DeletePipelineCoreResourceModal: React.FC<DeletePipelineCoreResourceModalProps> = ({\n  toDeleteResources,\n  onClose,\n  type,\n}) => {\n  const { api } = usePipelinesAPI();\n  const [deleting, setDeleting] = React.useState(false);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [deleteStatuses, setDeleteStatus] = React.useState<(true | Error | undefined)[]>([]);\n  const abortControllerRef = React.useRef(new AbortController());\n  const notification = useNotification();\n\n  const resourceCount = toDeleteResources.length;\n\n  const onBeforeCloseRef = React.useRef<(v: boolean) => void>(() => undefined);\n  onBeforeCloseRef.current = (deleteComplete: boolean) => {\n    const deleteErrors = deleteStatuses.reduce<React.ReactNode[]>((acc, state, i) => {\n      if (state instanceof Error) {\n        const resource = toDeleteResources[i];\n        acc.push(\n          <p key={resource.name}>\n            For <b>{resource.name}</b>: {state.message}\n          </p>,\n        );\n      }\n      return acc;\n    }, []);\n\n    if (!deleteComplete || deleteErrors.length === 0) {\n      abortControllerRef.current.abort(); // cancel existing resources\n      onClose(deleteComplete);\n    } else {\n      notification.error(`Errors with deleting ${type}s`, <>{deleteErrors}</>);\n      onClose(true);\n    }\n\n    setDeleting(false);\n    setError(null);\n    setDeleteStatus([]);\n    abortControllerRef.current = new AbortController();\n  };\n\n  return (\n    <DeleteModal\n      title={`Delete ${type}${resourceCount > 1 ? 's' : ''}`}\n      isOpen={resourceCount !== 0}\n      onClose={() => onBeforeCloseRef.current(false)}\n      deleting={deleting}\n      error={error ?? undefined}\n      onDelete={() => {\n        if (resourceCount === 0) {\n          return;\n        }\n\n        let callFunc: (opts: K8sAPIOptions, id: string) => Promise<void>;\n        switch (type) {\n          case 'pipeline':\n            callFunc = api.deletePipeline;\n            break;\n          case 'scheduled run':\n            callFunc = api.deletePipelineRunJob;\n            break;\n          case 'triggered run':\n            callFunc = api.deletePipelineRun;\n            break;\n          default:\n            // eslint-disable-next-line no-console\n            console.error(`Unable to delete due to unknown type (${type})`);\n            setError(new Error('Unable to perform delete for unknown reasons.'));\n            return;\n        }\n        setDeleting(true);\n        setError(null);\n\n        if (resourceCount === 1) {\n          callFunc({ signal: abortControllerRef.current.signal }, toDeleteResources[0].id)\n            .then(() => onBeforeCloseRef.current(true))\n            .catch((e) => {\n              setError(e);\n              setDeleting(false);\n            });\n        } else {\n          Promise.all(\n            toDeleteResources.map((resource, i) =>\n              callFunc({ signal: abortControllerRef.current.signal }, resource.id)\n                .then(() => true)\n                .catch((e) => e)\n                .then((value: true | Error) => {\n                  setDeleteStatus((oldValues) => {\n                    const arr = [...oldValues];\n                    arr[i] = value;\n                    return arr;\n                  });\n                }),\n            ),\n          )\n            .catch((e) => {\n              // eslint-disable-next-line no-console\n              console.error('Error deleting in bulk', e);\n            })\n            .then(() => {\n              onBeforeCloseRef.current(true);\n            });\n        }\n      }}\n      submitButtonLabel={`Delete ${type}${resourceCount > 1 ? 's' : ''}`}\n      deleteName={\n        resourceCount === 1 ? toDeleteResources[0].name : `Delete ${resourceCount} ${type}s`\n      }\n    >\n      {resourceCount <= 1 ? (\n        <>This action cannot be undone.</>\n      ) : (\n        <Stack hasGutter>\n          <StackItem>\n            <Text>\n              You are about to delete {resourceCount} {type}s. This action cannot be undone.\n            </Text>\n          </StackItem>\n          <StackItem>\n            <List>\n              {toDeleteResources.map((resource, i) => {\n                let icon: React.ReactNode;\n                if (!deleting) {\n                  icon = null;\n                } else {\n                  const state = deleteStatuses[i];\n                  if (state === undefined) {\n                    icon = <PendingIcon />;\n                  } else if (state === true) {\n                    icon = (\n                      <Icon status=\"success\">\n                        <CheckCircleIcon />\n                      </Icon>\n                    );\n                  } else {\n                    icon = (\n                      <Tooltip content={state.message}>\n                        <Icon status=\"danger\">\n                          <ExclamationCircleIcon />\n                        </Icon>\n                      </Tooltip>\n                    );\n                  }\n                }\n\n                return (\n                  <ListItem key={resource.id} icon={icon}>\n                    {resource.name}\n                  </ListItem>\n                );\n              })}\n            </List>\n          </StackItem>\n        </Stack>\n      )}\n    </DeleteModal>\n  );\n};\n\nexport default DeletePipelineCoreResourceModal;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/DeletePipelineServerModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/ViewPipelineServerModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/ConfigurePipelinesServerModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/DatabaseConnectionField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/DatabaseConnectionInputField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/ObjectStorageSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/PipelinesDatabaseSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/configurePipelinesServer/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/CloneRunPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/CreateRunPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunForm.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/RunPageFooter.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/EndDateBeforeStartDateError.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/ExperimentSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/ParamsSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/PipelineSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSectionDateTime.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/contentSections/RunTypeSectionScheduled.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/submitUtils.ts",["3397","3398","3399","3400","3401"],[],"import {\n  periodicOptionAsSeconds,\n  RunDateTime,\n  RunFormData,\n  RunTypeOption,\n  SafeRunFormData,\n  ScheduledType,\n} from '~/concepts/pipelines/content/createRun/types';\nimport {\n  CreatePipelineRunJobKFData,\n  CreatePipelineRunKFData,\n  DateTimeKF,\n  RelationshipKF,\n  ResourceReferenceKF,\n  ResourceTypeKF,\n} from '~/concepts/pipelines/kfTypes';\nimport { PipelineAPIs } from '~/concepts/pipelines/types';\nimport { isFilledRunFormData } from '~/concepts/pipelines/content/createRun/utils';\n\nconst getResourceReferences = (formData: SafeRunFormData): ResourceReferenceKF[] => {\n  const refs: ResourceReferenceKF[] = [];\n\n  if (formData.pipeline) {\n    refs.push({\n      key: {\n        id: formData.pipeline.id,\n        type: ResourceTypeKF.PIPELINE_VERSION,\n      },\n      relationship: RelationshipKF.CREATOR,\n    });\n  }\n  // if (formData.experiment) {\n  //   refs.push({\n  //     key: {\n  //       id: formData.experiment.id,\n  //       type: ResourceTypeKF.EXPERIMENT,\n  //     },\n  //     relationship: RelationshipKF.OWNER,\n  //   });\n  // }\n\n  return refs;\n};\n\nconst createRun = async (\n  formData: SafeRunFormData,\n  createRun: PipelineAPIs['createPipelineRun'],\n): Promise<string> => {\n  /* eslint-disable camelcase */\n  const data: CreatePipelineRunKFData = {\n    name: formData.nameDesc.name,\n    description: formData.nameDesc.description,\n    resource_references: getResourceReferences(formData),\n    pipeline_spec: {\n      parameters: formData.params.map(({ value, label }) => ({ name: label, value })) ?? [],\n    },\n    service_account: '',\n  };\n  /* eslint-enable camelcase */\n  return createRun({}, data).then((runResource) => `/pipelineRun/view/${runResource.run.id}`);\n};\n\nconst convertDateDataToKFDateTime = (dateData?: RunDateTime): DateTimeKF | null => {\n  if (!dateData) {\n    return null;\n  }\n\n  const date = new Date(`${dateData.date} ${dateData.time}`);\n  return date.toISOString();\n};\n\nconst createJob = async (\n  formData: SafeRunFormData,\n  createJob: PipelineAPIs['createPipelineRunJob'],\n): Promise<string> => {\n  if (formData.runType.type !== RunTypeOption.SCHEDULED) {\n    return Promise.reject(new Error('Cannot create a scheduled run with incomplete data.'));\n  }\n\n  const startDate = convertDateDataToKFDateTime(formData.runType.data.start) ?? undefined;\n  const endDate = convertDateDataToKFDateTime(formData.runType.data.end) ?? undefined;\n  /* eslint-disable camelcase */\n  const data: CreatePipelineRunJobKFData = {\n    name: formData.nameDesc.name,\n    description: formData.nameDesc.description,\n    resource_references: getResourceReferences(formData),\n    pipeline_spec: {\n      parameters: formData.params?.map(({ value, label }) => ({ name: label, value })) ?? [],\n    },\n    max_concurrency: '10',\n    enabled: true,\n    trigger: {\n      periodic_schedule:\n        formData.runType.data.triggerType === ScheduledType.PERIODIC\n          ? {\n              interval_second: periodicOptionAsSeconds[formData.runType.data.value].toString(),\n              start_time: startDate,\n              end_time: endDate,\n            }\n          : undefined,\n      cron_schedule:\n        formData.runType.data.triggerType === ScheduledType.CRON\n          ? {\n              cron: formData.runType.data.value,\n              start_time: startDate,\n              end_time: endDate,\n            }\n          : undefined,\n    },\n  };\n  /* eslint-enable camelcase */\n  return createJob({}, data).then(() => '');\n};\n\n/** Returns the relative path to navigate to from the namespace qualified route */\nexport const handleSubmit = (formData: RunFormData, api: PipelineAPIs): Promise<string> => {\n  if (!isFilledRunFormData(formData)) {\n    throw new Error('Form data was incomplete.');\n  }\n\n  switch (formData.runType.type) {\n    case RunTypeOption.ONE_TRIGGER:\n      return createRun(formData, api.createPipelineRun);\n    case RunTypeOption.SCHEDULED:\n      return createJob(formData, api.createPipelineRunJob);\n    default:\n      // eslint-disable-next-line no-console\n      console.error('Unknown run type', formData.runType);\n      throw new Error('Unknown run type, unable to create run.');\n  }\n};\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/useCloneRunData.ts",["3402"],[],"import { useParams } from 'react-router-dom';\nimport usePipelineRunById from '~/concepts/pipelines/apiHooks/usePipelineRunById';\nimport { PipelineRunJobKF, PipelineRunKF } from '~/concepts/pipelines/kfTypes';\nimport usePipelineRunJobById from '~/concepts/pipelines/apiHooks/usePipelineRunJobById';\n\nconst useCloneRunData = (): [\n  resource: PipelineRunKF | PipelineRunJobKF | null,\n  loaded: boolean,\n  error: Error | undefined,\n] => {\n  const { pipelineRunId, pipelineRunJobId } = useParams();\n  const [runResource, runLoaded, runError] = usePipelineRunById(pipelineRunId);\n  const [job, jobLoaded, jobError] = usePipelineRunJobById(pipelineRunJobId);\n\n  if (jobLoaded || jobError) {\n    return [job, jobLoaded, jobError];\n  }\n  if (runLoaded || runError) {\n    return [runResource?.run ?? null, runLoaded, runError];\n  }\n\n  return [null, false, undefined];\n};\n\nexport default useCloneRunData;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/useRunFormData.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/createRun/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/experiment/ManageExperimentModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/experiment/useCreateExperimentData.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/ImportPipelineButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/PipelineFileUpload.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/PipelineImportModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/import/useImportModalData.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/PipelineDetailsYAML.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/PipelineTopologyEmpty.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineDetailsActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineNotFound.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/PipelineTaskDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipeline/SelectedTaskDrawerContent.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDetailsActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerBottomContent.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerBottomTabs.tsx",["3403"],[],"import * as React from 'react';\nimport { Tabs, Tab, TabContent, DrawerPanelBody } from '@patternfly/react-core';\nimport PipelineRunTabDetails from '~/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunTabDetails';\nimport PipelineDetailsYAML from '~/concepts/pipelines/content/pipelinesDetails/PipelineDetailsYAML';\nimport { PipelineRunKind } from '~/k8sTypes';\nimport { PipelineRunKF } from '~/concepts/pipelines/kfTypes';\n\nexport enum RunDetailsTabs {\n  DETAILS = 'Details',\n  YAML = 'Run output',\n}\n\nexport type RunDetailsTabSelection = RunDetailsTabs | null;\n\ntype PipelineRunBottomDrawerProps = {\n  selection: RunDetailsTabSelection;\n  onSelection: (id: RunDetailsTabs) => void;\n  pipelineRunDetails?: {\n    kind: PipelineRunKind;\n    kf: PipelineRunKF;\n  };\n};\n\nexport const PipelineRunDrawerBottomTabs: React.FC<PipelineRunBottomDrawerProps> = ({\n  selection,\n  onSelection,\n  pipelineRunDetails,\n}) => (\n  <>\n    <Tabs activeKey={selection ?? undefined} style={{ flexShrink: 0 }}>\n      {Object.values(RunDetailsTabs).map((tab) => (\n        <Tab\n          key={tab}\n          title={tab}\n          eventKey={tab}\n          tabContentId={tab}\n          onClick={() => onSelection(tab)}\n        />\n      ))}\n    </Tabs>\n    {selection && (\n      <DrawerPanelBody style={{ flexGrow: 1, overflow: 'hidden auto' }}>\n        <TabContent\n          id={RunDetailsTabs.DETAILS}\n          eventKey={RunDetailsTabs.DETAILS}\n          activeKey={selection ?? ''}\n          hidden={RunDetailsTabs.DETAILS !== selection}\n        >\n          <PipelineRunTabDetails\n            workflowName={pipelineRunDetails?.kind.metadata.name}\n            pipelineRunKF={pipelineRunDetails?.kf}\n          />\n        </TabContent>\n        <TabContent\n          id={RunDetailsTabs.YAML}\n          eventKey={RunDetailsTabs.YAML}\n          activeKey={selection ?? ''}\n          hidden={RunDetailsTabs.YAML !== selection}\n          style={{ height: '100%' }}\n        >\n          <PipelineDetailsYAML\n            filename={pipelineRunDetails?.kf.name}\n            content={\n              pipelineRunDetails\n                ? {\n                    // eslint-disable-next-line camelcase\n                    pipeline_runtime: { workflow_manifest: pipelineRunDetails.kind },\n                    run: pipelineRunDetails.kf,\n                  }\n                : null\n            }\n          />\n        </TabContent>\n      </DrawerPanelBody>\n    )}\n  </>\n);\n\nexport default PipelineRunDrawerBottomTabs;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerRightContent.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunDrawerRightTabs.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunTabDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/PipelineRunTitle.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeDetailsTab.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeInputOutputTab.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/SelectedNodeVolumeMountsTab.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/pipelineRun/utils.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsCodeBlock.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsInputParams.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsOutputResults.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsPrintKeyValues.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/pipelinesDetails/taskDetails/TaskDetailsVolumeMounts.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/EmptyTableView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/PipelineFilterBar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/RunTableToolbarActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/columns.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTableExpandedRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/PipelinesTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipeline/expandedRowRenderUtils.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/PipelineRunTableToolbar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/useJobRelatedInformation.ts",["3404"],[],"import * as React from 'react';\nimport { PipelineCoreResourceKF, PipelineRunJobKF } from '~/concepts/pipelines/kfTypes';\nimport { usePipelinesAPI } from '~/concepts/pipelines/context';\nimport { getPipelineCoreResourceJobReference } from '~/concepts/pipelines/content/tables/utils';\n\ntype JobStatus = {\n  loading: boolean;\n  data: PipelineRunJobKF | null;\n};\n\nexport type GetJobInformation = (resource: PipelineCoreResourceKF) => JobStatus;\n\nconst useJobRelatedInformation = (): { getJobInformation: GetJobInformation } => {\n  const { api } = usePipelinesAPI();\n  const [jobStorage, setJobStorage] = React.useState<{ [jobId: string]: JobStatus }>({});\n  const loadedIds = React.useRef<string[]>([]);\n\n  return {\n    getJobInformation: React.useCallback<GetJobInformation>(\n      (resource) => {\n        const jobReference = getPipelineCoreResourceJobReference(resource);\n        if (!jobReference) {\n          return { loading: false, data: null };\n        }\n        const jobId = jobReference.key.id;\n        if (jobStorage[jobId]) {\n          return jobStorage[jobId];\n        }\n        if (loadedIds.current.includes(jobId)) {\n          return { loading: true, data: null };\n        }\n        loadedIds.current.push(jobId);\n\n        api\n          .getPipelineRunJob({}, jobId)\n          .then((job) => {\n            setJobStorage((jobState) => ({ ...jobState, [jobId]: { loading: false, data: job } }));\n          })\n          .catch((e) => {\n            // eslint-disable-next-line no-console\n            console.error('Could not fetch job reference', e);\n            loadedIds.current = loadedIds.current.filter((i) => i !== jobId);\n            return null;\n          });\n\n        return { loading: true, data: null };\n      },\n      [api, jobStorage],\n    ),\n  };\n};\n\nexport default useJobRelatedInformation;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRun/usePipelineRunFilter.ts",["3405"],[],"import * as React from 'react';\nimport {\n  getPipelineCoreResourceExperimentName,\n  getPipelineCoreResourcePipelineName,\n} from '~/concepts/pipelines/content/tables/utils';\nimport {\n  PipelineRunKF,\n  PipelineRunStatusesKF,\n  PipelineRunStatusUnknown,\n} from '~/concepts/pipelines/kfTypes';\nimport { computeRunStatus } from '~/concepts/pipelines/content/utils';\nimport { FilterOptions, FilterProps } from './PipelineRunTableToolbar';\n\ntype FilterData = Record<FilterOptions, string>;\nconst DEFAULT_FILTER_DATA: FilterData = {\n  [FilterOptions.NAME]: '',\n  [FilterOptions.EXPERIMENT]: '',\n  [FilterOptions.PIPELINE]: '',\n  [FilterOptions.STARTED]: '',\n  [FilterOptions.STATUS]: '',\n};\n\nconst usePipelineRunFilter = (\n  runs: PipelineRunKF[],\n): [filterJobs: PipelineRunKF[], toolbarProps: FilterProps] => {\n  const [filterData, setFilterData] = React.useState<FilterData>(DEFAULT_FILTER_DATA);\n\n  const filteredRuns = runs.filter((run) => {\n    const runValue = filterData[FilterOptions.NAME];\n    const experimentValue = filterData[FilterOptions.EXPERIMENT];\n    const pipelineValue = filterData[FilterOptions.PIPELINE];\n    const startedValue = filterData[FilterOptions.STARTED];\n    const statusValue = filterData[FilterOptions.STATUS];\n\n    if (runValue && !run.name.toLowerCase().includes(runValue.toLowerCase())) {\n      return false;\n    }\n    if (\n      experimentValue &&\n      !getPipelineCoreResourceExperimentName(run)\n        .toLowerCase()\n        .includes(experimentValue.toLowerCase())\n    ) {\n      return false;\n    }\n    if (\n      pipelineValue &&\n      !getPipelineCoreResourcePipelineName(run).toLowerCase().includes(pipelineValue.toLowerCase())\n    ) {\n      return false;\n    }\n    if (startedValue && !run.created_at.includes(startedValue)) {\n      return false;\n    }\n    if (statusValue) {\n      const { label } = computeRunStatus(run);\n      const keys: string[] = Object.values(PipelineRunStatusesKF);\n      if (statusValue === PipelineRunStatusUnknown && keys.includes(label)) {\n        return false;\n      } else if (statusValue !== PipelineRunStatusUnknown && statusValue !== label) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  const toolbarProps: FilterProps = {\n    filterData: filterData,\n    onFilterUpdate: (key, value) => setFilterData((oldValues) => ({ ...oldValues, [key]: value })),\n    onClearFilters: () => setFilterData(DEFAULT_FILTER_DATA),\n  };\n\n  return [filteredRuns, toolbarProps];\n};\n\nexport default usePipelineRunFilter;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTableToolbar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/pipelineRunJob/usePipelineRunJobFilter.ts",["3406"],[],"import * as React from 'react';\nimport {\n  FilterOptions,\n  FilterProps,\n} from '~/concepts/pipelines/content/tables/pipelineRunJob/PipelineRunJobTableToolbar';\nimport {\n  getPipelineCoreResourceExperimentName,\n  getPipelineCoreResourcePipelineName,\n  isJobWithinDateRange,\n} from '~/concepts/pipelines/content/tables/utils';\nimport { PipelineRunJobKF } from '~/concepts/pipelines/kfTypes';\n\ntype FilterData = Record<FilterOptions, string>;\nconst DEFAULT_FILTER_DATA: FilterData = {\n  [FilterOptions.NAME]: '',\n  [FilterOptions.EXPERIMENT]: '',\n  [FilterOptions.PIPELINE]: '',\n  [FilterOptions.SCHEDULED]: '',\n  [FilterOptions.STATUS]: '',\n};\n\nconst usePipelineRunJobFilter = (\n  jobs: PipelineRunJobKF[],\n): [filterJobs: PipelineRunJobKF[], toolbarProps: FilterProps] => {\n  const [filterData, setFilterData] = React.useState<FilterData>(DEFAULT_FILTER_DATA);\n\n  const filterJobs = jobs.filter((job) => {\n    const runValue = filterData[FilterOptions.NAME];\n    const experimentValue = filterData[FilterOptions.EXPERIMENT];\n    const pipelineValue = filterData[FilterOptions.PIPELINE];\n    const scheduledRangeValue = filterData[FilterOptions.SCHEDULED];\n    const statusValue = filterData[FilterOptions.STATUS];\n\n    if (runValue && !job.name.toLowerCase().includes(runValue.toLowerCase())) {\n      return false;\n    }\n    if (\n      experimentValue &&\n      !getPipelineCoreResourceExperimentName(job)\n        .toLowerCase()\n        .includes(experimentValue.toLowerCase())\n    ) {\n      return false;\n    }\n    if (\n      pipelineValue &&\n      !getPipelineCoreResourcePipelineName(job).toLowerCase().includes(pipelineValue.toLowerCase())\n    ) {\n      return false;\n    }\n    if (scheduledRangeValue && !isJobWithinDateRange(job, scheduledRangeValue)) {\n      return false;\n    }\n    if (statusValue) {\n      // KF removes the enabled prop when it doesn't exist\n      const statusValueAsKF = statusValue === 'Enabled' ? true : undefined;\n      if (job.enabled !== statusValueAsKF) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  const toolbarProps: FilterProps = {\n    filterData: filterData,\n    onFilterUpdate: (key, value) => setFilterData((oldValues) => ({ ...oldValues, [key]: value })),\n    onClearFilters: () => setFilterData(DEFAULT_FILTER_DATA),\n  };\n\n  return [filterJobs, toolbarProps];\n};\n\nexport default usePipelineRunJobFilter;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/renderUtils.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/tables/utils.ts",["3407"],[],"import {\n  PipelineRunJobKF,\n  PipelineRunKF,\n  PipelineCoreResourceKF,\n  PipelineRunStatusesKF,\n  ResourceReferenceKF,\n  ResourceTypeKF,\n} from '~/concepts/pipelines/kfTypes';\nimport { DateRangeString, splitDateRange } from '~/components/dateRange/utils';\n\nexport const getLastRun = (runs: PipelineRunKF[]) => runs[0];\n\nexport const getRunDuration = (run: PipelineRunKF): number => {\n  const finishedDate = new Date(run.finished_at);\n  if (finishedDate.getFullYear() <= 1970) {\n    // Kubeflow initial timestamp -- epoch, not an actual value\n    return 0;\n  }\n\n  const createdDate = new Date(run.created_at);\n  return finishedDate.getTime() - createdDate.getTime();\n};\n\nexport const getStatusWeight = (run: PipelineRunKF): number => {\n  const weights: Record<PipelineRunStatusesKF, number> = {\n    [PipelineRunStatusesKF.CANCELLED]: 0,\n    [PipelineRunStatusesKF.COMPLETED]: 1,\n    [PipelineRunStatusesKF.FAILED]: 2,\n    [PipelineRunStatusesKF.RUNNING]: 3,\n    [PipelineRunStatusesKF.STARTED]: 4,\n  };\n\n  return weights[run.status] ?? Infinity;\n};\n\nexport const getRunResourceReference = (\n  resource: PipelineCoreResourceKF,\n  type: ResourceTypeKF,\n): ResourceReferenceKF | undefined =>\n  resource.resource_references?.find((ref) => ref.key.type === type);\n\nexport const getPipelineCoreResourceJobReference = (\n  resource: PipelineCoreResourceKF,\n): ResourceReferenceKF | undefined => getRunResourceReference(resource, ResourceTypeKF.JOB);\n\nexport const getPipelineCoreResourcePipelineReference = (\n  resource: PipelineCoreResourceKF,\n): ResourceReferenceKF | undefined =>\n  getRunResourceReference(resource, ResourceTypeKF.PIPELINE_VERSION);\n\nexport const getPipelineCoreResourceExperimentReference = (\n  resource: PipelineCoreResourceKF,\n): ResourceReferenceKF | undefined => getRunResourceReference(resource, ResourceTypeKF.EXPERIMENT);\n\nexport const getPipelineCoreResourceExperimentName = (resource: PipelineCoreResourceKF): string =>\n  getPipelineCoreResourceExperimentReference(resource)?.name || 'Default';\n\nexport const getPipelineCoreResourcePipelineName = (resource: PipelineCoreResourceKF): string =>\n  getPipelineCoreResourcePipelineReference(resource)?.name || '';\n\nexport const getPipelineRunJobStartTime = (job: PipelineRunJobKF): Date | null => {\n  const startTime =\n    job.trigger.cron_schedule?.start_time || job.trigger.periodic_schedule?.start_time;\n\n  return startTime ? new Date(startTime) : null;\n};\n\nexport const getPipelineRunJobEndTime = (job: PipelineRunJobKF): Date | null => {\n  const endTime = job.trigger.cron_schedule?.end_time || job.trigger.periodic_schedule?.end_time;\n\n  return endTime ? new Date(endTime) : null;\n};\n\nexport enum ScheduledState {\n  NOT_STARTED,\n  UNBOUNDED_END,\n  STARTED_NOT_ENDED,\n  ENDED,\n}\n\nconst inPast = (date: Date | null): boolean => (date ? date.getTime() - Date.now() <= 0 : false);\nexport const getPipelineRunJobScheduledState = (\n  job: PipelineRunJobKF,\n): [state: ScheduledState, started: Date | null, ended: Date | null] => {\n  const startDate = getPipelineRunJobStartTime(job);\n  const endDate = getPipelineRunJobEndTime(job);\n  const startDateInPast = inPast(startDate);\n  const endDateInPast = inPast(endDate);\n\n  let state: ScheduledState;\n  if (!startDate || startDateInPast) {\n    if (!endDate) {\n      state = ScheduledState.UNBOUNDED_END;\n    } else if (endDateInPast) {\n      state = ScheduledState.ENDED;\n    } else {\n      state = ScheduledState.STARTED_NOT_ENDED;\n    }\n  } else {\n    state = ScheduledState.NOT_STARTED;\n  }\n\n  return [state, startDate, endDate];\n};\n\nexport const getScheduledStateWeight = (job: PipelineRunJobKF): number => {\n  const [state] = getPipelineRunJobScheduledState(job);\n\n  const weights: Record<ScheduledState, number> = {\n    [ScheduledState.UNBOUNDED_END]: 0,\n    [ScheduledState.STARTED_NOT_ENDED]: 1,\n    [ScheduledState.NOT_STARTED]: 2,\n    [ScheduledState.ENDED]: 3,\n  };\n\n  return weights[state] ?? Infinity;\n};\n\nexport const isJobWithinDateRange = (\n  job: PipelineRunJobKF,\n  dateRange: DateRangeString,\n): boolean => {\n  const jobStart = getPipelineRunJobStartTime(job);\n  const jobEnd = getPipelineRunJobEndTime(job);\n\n  if (!jobStart && !jobEnd) {\n    // No start or end, it's within'\n    return true;\n  }\n  const jobStartNumber = jobStart?.getTime() ?? 0;\n  const jobEndNumber = jobEnd?.getTime() ?? Infinity;\n\n  const [startValue, endValue] = splitDateRange(dateRange);\n  const startNumber = startValue ? new Date(startValue).getTime() : 0;\n  const endNumber = endValue ? new Date(endValue).getTime() : Infinity;\n\n  return (\n    (startNumber >= jobStartNumber && startNumber <= jobEndNumber) ||\n    (endNumber >= jobStartNumber && endNumber <= jobEndNumber)\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/content/utils.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/PipelinesContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/useAPIState.ts",["3408"],[],"import * as React from 'react';\nimport {\n  createExperiment,\n  createPipelineRun,\n  createPipelineRunJob,\n  deletePipeline,\n  deletePipelineRun,\n  deletePipelineRunJob,\n  getExperiment,\n  getPipeline,\n  getPipelineRun,\n  getPipelineRunJob,\n  listExperiments,\n  listPipelineRunJobs,\n  listPipelineRuns,\n  listPipelineRunsByPipeline,\n  listPipelines,\n  listPipelineTemplates,\n  stopPipelineRun,\n  updatePipelineRunJob,\n  uploadPipeline,\n} from '~/api';\nimport { PipelineAPIs } from '~/concepts/pipelines/types';\n\nexport type APIState = {\n  /** If API will successfully call */\n  apiAvailable: boolean;\n  /** The available API functions */\n  api: PipelineAPIs;\n};\n\nconst useAPIState = (\n  hostPath: string | null,\n): [apiState: APIState, refreshAPIState: () => void] => {\n  const [internalAPIToggleState, setInternalAPIToggleState] = React.useState(false);\n\n  const refreshAPIState = React.useCallback(() => {\n    setInternalAPIToggleState((v) => !v);\n  }, []);\n\n  const apiState = React.useMemo<APIState>(() => {\n    // Note: This is a hack usage to get around the linter -- avoid copying this logic\n    // eslint-disable-next-line no-console\n    console.log('Computing Pipeline API', internalAPIToggleState ? '' : '');\n\n    let path = hostPath;\n    if (!path) {\n      // TODO: we need to figure out maybe a stopgap or something\n      path = '';\n    }\n\n    return {\n      apiAvailable: !!path,\n      api: {\n        createExperiment: createExperiment(path),\n        createPipelineRun: createPipelineRun(path),\n        createPipelineRunJob: createPipelineRunJob(path),\n        getExperiment: getExperiment(path),\n        getPipeline: getPipeline(path),\n        getPipelineRun: getPipelineRun(path),\n        getPipelineRunJob: getPipelineRunJob(path),\n        deletePipeline: deletePipeline(path),\n        deletePipelineRun: deletePipelineRun(path),\n        deletePipelineRunJob: deletePipelineRunJob(path),\n        listExperiments: listExperiments(path),\n        listPipelines: listPipelines(path),\n        listPipelineRuns: listPipelineRuns(path),\n        listPipelineRunJobs: listPipelineRunJobs(path),\n        listPipelineRunsByPipeline: listPipelineRunsByPipeline(path),\n        listPipelineTemplate: listPipelineTemplates(path),\n        stopPipelineRun: stopPipelineRun(path),\n        updatePipelineRunJob: updatePipelineRunJob(path),\n        uploadPipeline: uploadPipeline(path),\n      },\n    };\n  }, [hostPath, internalAPIToggleState]);\n\n  return [apiState, refreshAPIState];\n};\n\nexport default useAPIState;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/useManageElyraSecret.ts",["3409"],[],"import * as React from 'react';\nimport useElyraSecret from '~/concepts/pipelines/elyra/useElyraSecret';\nimport { createSecret, replaceSecret } from '~/api';\nimport { DSPipelineKind } from '~/k8sTypes';\nimport { generateElyraSecret } from '~/concepts/pipelines/elyra/utils';\nimport useAWSSecret from '~/concepts/secrets/apiHooks/useAWSSecret';\nimport {\n  ELYRA_SECRET_DATA_ENDPOINT,\n  ELYRA_SECRET_DATA_KEY,\n  ELYRA_SECRET_DATA_TYPE,\n} from '~/concepts/pipelines/elyra/const';\n\nconst useManageElyraSecret = (\n  namespace: string,\n  cr: DSPipelineKind | null,\n  routePath: string | null,\n) => {\n  const [elyraSecret, elyraSecretLoaded, elyraSecretError] = useElyraSecret(namespace, !!cr);\n  const [dataConnection, dataConnectionLoaded, dataConnectionError] = useAWSSecret(\n    cr?.spec.objectStorage?.externalStorage?.s3CredentialsSecret?.secretName ?? null,\n    namespace,\n  );\n\n  React.useEffect(() => {\n    const error = elyraSecretError || dataConnectionError;\n    if (error) {\n      // eslint-disable-next-line no-console\n      console.error('Error managing elyra secret', error.message);\n    }\n  }, [dataConnectionError, elyraSecretError]);\n\n  const fullLoadedState = elyraSecretLoaded && dataConnectionLoaded;\n  React.useEffect(() => {\n    if (fullLoadedState && dataConnection && routePath) {\n      if (!elyraSecret) {\n        // Create a new secret\n        createSecret(\n          generateElyraSecret(\n            dataConnection.data,\n            dataConnection.metadata.name,\n            dataConnection.metadata.namespace,\n            routePath,\n          ),\n        );\n        return;\n      }\n      try {\n        const secretValue = JSON.parse(\n          atob(elyraSecret.data?.[ELYRA_SECRET_DATA_KEY] || '{ metadata: {} }'),\n        );\n        const usingOldDataType =\n          secretValue.metadata[ELYRA_SECRET_DATA_TYPE] === 'USER_CREDENTIALS';\n        const usingOldUrl = !secretValue.metadata[ELYRA_SECRET_DATA_ENDPOINT].endsWith('/view/');\n        if (usingOldDataType || usingOldUrl) {\n          // Secret is out of date, update it\n          replaceSecret(\n            generateElyraSecret(\n              dataConnection.data,\n              dataConnection.metadata.name,\n              dataConnection.metadata.namespace,\n              routePath,\n            ),\n          );\n        }\n      } catch (e) {\n        // do nothing\n      }\n    }\n  }, [fullLoadedState, routePath, elyraSecret, dataConnection]);\n};\n\nexport default useManageElyraSecret;\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/usePipelineNamespaceCR.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/context/usePipelinesAPIRoute.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/CanEnableElyraPipelinesCheck.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/useElyraSecret.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/elyra/utils.ts",["3410","3411"],[],"import { Patch } from '@openshift/dynamic-plugin-sdk-utils';\nimport { AWSSecretKind, KnownLabels, NotebookKind, RoleBindingKind, SecretKind } from '~/k8sTypes';\nimport {\n  ELYRA_ROLE_NAME,\n  ELYRA_SECRET_DATA_ENDPOINT,\n  ELYRA_SECRET_DATA_KEY,\n  ELYRA_SECRET_DATA_TYPE,\n  ELYRA_SECRET_NAME,\n} from '~/concepts/pipelines/elyra/const';\nimport { AWS_KEYS } from '~/pages/projects/dataConnections/const';\nimport { Volume, VolumeMount } from '~/types';\nimport { RUNTIME_MOUNT_PATH } from '~/pages/projects/pvc/const';\n\nconst ELYRA_VOLUME_NAME = 'elyra-dsp-details';\n\nexport const getElyraVolumeMount = (): VolumeMount => ({\n  name: ELYRA_VOLUME_NAME,\n  mountPath: RUNTIME_MOUNT_PATH,\n});\n\nexport const getElyraVolume = (): Volume => ({\n  name: ELYRA_VOLUME_NAME,\n  secret: {\n    secretName: ELYRA_SECRET_NAME,\n  },\n});\n\nexport const getPipelineVolumePatch = (): Patch => ({\n  path: '/spec/template/spec/volumes/-',\n  op: 'add',\n  value: getElyraVolume(),\n});\n\nexport const getPipelineVolumeMountPatch = (): Patch => ({\n  // TODO: can we assume first container?\n  path: '/spec/template/spec/containers/0/volumeMounts/-',\n  op: 'add',\n  value: getElyraVolumeMount(),\n});\n\nexport const currentlyHasPipelines = (notebook: NotebookKind): boolean =>\n  !!notebook.spec.template.spec.volumes?.find((v) => v.secret?.secretName === ELYRA_SECRET_NAME);\n\nexport const generateElyraSecret = (\n  dataConnectionData: AWSSecretKind['data'],\n  dataConnectionName: string,\n  namespace: string,\n  route: string,\n): SecretKind => ({\n  apiVersion: 'v1',\n  kind: 'Secret',\n  metadata: {\n    name: ELYRA_SECRET_NAME,\n    namespace,\n  },\n  type: 'Opaque',\n  stringData: {\n    /* eslint-disable camelcase */\n    [ELYRA_SECRET_DATA_KEY]: JSON.stringify({\n      display_name: 'Data Science Pipeline',\n      metadata: {\n        tags: [],\n        display_name: 'Data Science Pipeline',\n        engine: 'Tekton',\n        auth_type: 'KUBERNETES_SERVICE_ACCOUNT_TOKEN',\n        api_endpoint: route,\n        // Append the id on the end to navigate to the details page for that PipelineRun\n        [ELYRA_SECRET_DATA_ENDPOINT]: `${location.origin}/pipelineRuns/${namespace}/pipelineRun/view/`,\n        [ELYRA_SECRET_DATA_TYPE]: 'KUBERNETES_SECRET',\n        cos_secret: dataConnectionName,\n        cos_endpoint: atob(dataConnectionData[AWS_KEYS.S3_ENDPOINT]),\n        cos_bucket: atob(dataConnectionData[AWS_KEYS.AWS_S3_BUCKET]),\n        cos_username: atob(dataConnectionData[AWS_KEYS.ACCESS_KEY_ID]),\n        cos_password: atob(dataConnectionData[AWS_KEYS.SECRET_ACCESS_KEY]),\n        runtime_type: 'KUBEFLOW_PIPELINES',\n      },\n      schema_name: 'kfp',\n    }),\n    /* eslint-enable camelcase */\n  },\n});\n\nexport const generateElyraServiceAccountRoleBinding = (\n  notebookName: string,\n  namespace: string,\n): RoleBindingKind => ({\n  apiVersion: 'rbac.authorization.k8s.io/v1',\n  kind: 'RoleBinding',\n  metadata: {\n    name: `elyra-pipelines-${notebookName}`,\n    namespace,\n    labels: {\n      [KnownLabels.DASHBOARD_RESOURCE]: 'true',\n    },\n  },\n  roleRef: {\n    apiGroup: 'rbac.authorization.k8s.io',\n    kind: 'Role',\n    name: ELYRA_ROLE_NAME,\n  },\n  subjects: [\n    {\n      kind: 'ServiceAccount',\n      name: notebookName,\n    },\n  ],\n});\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/kfTypes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/PipelineTopology.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/PipelineVisualizationSurface.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/customNodes/StandardTaskNode.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/factories.ts",["3412","3413"],[],"import {\n  ComponentFactory,\n  DEFAULT_EDGE_TYPE,\n  DEFAULT_SPACER_NODE_TYPE,\n  DEFAULT_TASK_NODE_TYPE,\n  GraphComponent,\n  ModelKind,\n  SpacerNode,\n  TaskEdge,\n  withPanZoom,\n  withSelection,\n} from '@patternfly/react-topology';\nimport StandardTaskNode from '~/concepts/pipelines/topology/core/customNodes/StandardTaskNode';\n\n// Topology gap... their types have issues with Strict TS mode\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const pipelineComponentFactory: ComponentFactory = (kind, type) => {\n  if (kind === ModelKind.graph) {\n    return withPanZoom()(GraphComponent);\n  }\n  switch (type) {\n    case DEFAULT_TASK_NODE_TYPE:\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return withSelection()(StandardTaskNode);\n    case DEFAULT_SPACER_NODE_TYPE:\n      return SpacerNode;\n    case DEFAULT_EDGE_TYPE:\n      return TaskEdge;\n    default:\n      return undefined;\n  }\n};\n","/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/useTopologyController.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/core/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/pipelineUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/topology/usePipelineTaskTopology.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/pipelines/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/InvalidProject.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectSelectorNavigator.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectsContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/ProjectsRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/apiHooks/useNamespaceSecret.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/useMountProjectRefresh.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/projects/useSyncPreferredProject.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/secrets/apiHooks/useAWSSecret.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/concepts/secrets/apiHooks/useSecret.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/index.tsx",["3414"],[],"import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nimport App from './app/App';\nimport SDKInitialize from './SDKInitialize';\nimport { BrowserStorageContextProvider } from './components/browserStorage/BrowserStorageContext';\n\n/**\n/**\n * Main function\n */\n// https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#updates-to-client-rendering-apis\n// We have to use '!' here for 'document.getElementById('root')' to avoid type errors\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <SDKInitialize>\n          <BrowserStorageContextProvider>\n            <App />\n          </BrowserStorageContextProvider>\n        </SDKInitialize>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n);\n","/Users/jshandel/odh-dashboard/frontend/src/k8sTypes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/ApplicationsPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/BYONImages.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/BYONImagesTable.tsx",["3415"],[],"import React from 'react';\nimport {\n\tButton,\n\tBullseye,\n\tEmptyState,\n\tEmptyStateBody,\n\tEmptyStateIcon,\n\tEmptyStateVariant,\n\tFlex,\n\tFlexItem,\n\tSearchInput,\n\tSwitch,\n\tToolbar,\n\tToolbarContent,\n\tToolbarItem\n} from '@patternfly/react-core';\nimport {\n\tSelect,\n\tSelectOption,\n\tSelectVariant\n} from '@patternfly/react-core/deprecated';\nimport {\n  ActionsColumn,\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  ThProps,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  IAction,\n} from '@patternfly/react-table';\nimport { CubesIcon, SearchIcon } from '@patternfly/react-icons';\nimport { BYONImage } from '~/types';\nimport { relativeTime } from '~/utilities/time';\nimport { updateBYONImage } from '~/services/imagesService';\nimport ImageErrorStatus from '~/pages/BYONImages/ImageErrorStatus';\nimport { ImportImageModal } from './ImportImageModal';\nimport { DeleteImageModal } from './DeleteBYONImageModal';\nimport { UpdateImageModal } from './UpdateImageModal';\n\nimport './BYONImagesTable.scss';\n\nexport type BYONImagesTableProps = {\n  images: BYONImage[];\n  forceUpdate: () => void;\n};\n\ntype BYONImageEnabled = {\n  id: string;\n  visible?: boolean;\n};\n\ntype BYONImageTableFilterOptions = 'user' | 'name' | 'description' | 'phase' | 'user' | 'uploaded';\ntype BYONImageTableFilter = {\n  filter: string;\n  option: BYONImageTableFilterOptions;\n  count: number;\n};\n\nexport const BYONImagesTable: React.FC<BYONImagesTableProps> = ({ images, forceUpdate }) => {\n  const rowActions = (image: BYONImage): IAction[] => [\n    {\n      title: 'Edit',\n      id: `${image.name}-edit-button`,\n      onClick: () => {\n        setcurrentImage(image);\n        setUpdateImageModalVisible(true);\n      },\n    },\n    {\n      isSeparator: true,\n    },\n    {\n      title: 'Delete',\n      id: `${image.name}-delete-button`,\n      onClick: () => {\n        setcurrentImage(image);\n        setDeleteImageModalVisible(true);\n      },\n    },\n  ];\n\n  React.useEffect(() => {\n    setBYONImageVisible(images.map((image) => ({ id: image.id, visible: image.visible })));\n  }, [images]);\n\n  const [currentImage, setcurrentImage] = React.useState<BYONImage>(images[0]);\n  const [deleteImageModalVisible, setDeleteImageModalVisible] = React.useState(false);\n  const [importImageModalVisible, setImportImageModalVisible] = React.useState(false);\n  const [updateImageModalVisible, setUpdateImageModalVisible] = React.useState(false);\n\n  const [activeSortIndex, setActiveSortIndex] = React.useState<number | undefined>(0);\n  const [activeSortDirection, setActiveSortDirection] = React.useState<'asc' | 'desc' | undefined>(\n    'asc',\n  );\n\n  const getFilterCount = (value: string, option): number => {\n    let total = 0;\n    images.forEach((image) => {\n      (image[option] as string).includes(value) ? total++ : null;\n    });\n    return total;\n  };\n\n  const getSortableRowValues = (nb: BYONImage): string[] => {\n    const { name, description = '', visible = false, user = '', uploaded = '' } = nb;\n    return [name, description, visible.toString(), user, uploaded.toString()];\n  };\n\n  const sortedImages = React.useMemo(() => {\n    if (activeSortIndex !== undefined) {\n      return [...images].sort((a, b) => {\n        const aValue = getSortableRowValues(a)[activeSortIndex];\n        const bValue = getSortableRowValues(b)[activeSortIndex];\n\n        if (activeSortDirection === 'asc') {\n          return (aValue as string).localeCompare(bValue as string);\n        }\n        return (bValue as string).localeCompare(aValue as string);\n      });\n    }\n    return [...images];\n  }, [activeSortDirection, activeSortIndex, images]);\n\n  const getSortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc',\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnNames = {\n    name: 'Name',\n    description: 'Description',\n    user: 'User',\n    uploaded: 'Uploaded',\n  };\n\n  const currentTimeStamp: number = Date.now();\n\n  const [expandedBYONImageIDs, setExpandedBYONImageIDs] = React.useState<string[]>([]);\n  const setBYONImageExpanded = (image: BYONImage, isExpanding = true) => {\n    setExpandedBYONImageIDs((prevExpanded) => {\n      const otherExpandedRepoNames = prevExpanded.filter((r) => r !== image.id);\n      return isExpanding ? [...otherExpandedRepoNames, image.id] : otherExpandedRepoNames;\n    });\n  };\n  const isBYONImageExpanded = (image: BYONImage) => expandedBYONImageIDs.includes(image.id);\n  const [BYONImageVisible, setBYONImageVisible] = React.useState<BYONImageEnabled[]>(\n    images.map((image) => ({ id: image.id, visible: image.visible })),\n  );\n\n  const selectOptions = [\n    <SelectOption data-id=\"search-filter-name\" key={1} value=\"name\">\n      Name\n    </SelectOption>,\n    <SelectOption data-id=\"search-filter-desc\" key={2} value=\"description\">\n      Description\n    </SelectOption>,\n    <SelectOption data-id=\"search-filter-user\" key={4} value=\"user\">\n      User\n    </SelectOption>,\n    <SelectOption data-id=\"search-filter-uploaded\" key={5} value=\"uploaded\">\n      Uploaded\n    </SelectOption>,\n  ];\n  const [tableFilter, setTableFilter] = React.useState<BYONImageTableFilter>({\n    filter: '',\n    option: 'name',\n    count: images.length,\n  });\n  const [selected, setSelected] = React.useState('name');\n  const [tableSelectIsOpen, setTableSelectIsOpen] = React.useState(false);\n\n  const items = (\n    <React.Fragment>\n      <ToolbarItem variant=\"search-filter\" className=\"filter-select\">\n        <Select\n          removeFindDomNode\n          data-id=\"search-filter-select\"\n          variant={SelectVariant.single}\n          aria-label=\"Select for image images table\"\n          onToggle={(isExpanded) => {\n            setTableSelectIsOpen(isExpanded);\n          }}\n          onSelect={(_event, value) => {\n            setSelected(value as string);\n            const newCount = getFilterCount(tableFilter.filter, value);\n            setTableFilter({\n              filter: tableFilter.filter,\n              option: value as BYONImageTableFilterOptions,\n              count: newCount,\n            });\n          }}\n          selections={selected}\n          isOpen={tableSelectIsOpen}\n        >\n          {selectOptions}\n        </Select>\n      </ToolbarItem>\n      <ToolbarItem variant=\"search-filter\">\n        <SearchInput\n          removeFindDomNode\n          data-id=\"search-filter-input\"\n          className=\"filter-search\"\n          aria-label=\"search input for image images table\"\n          value={tableFilter.filter}\n          onChange={(_, value) => {\n            const newCount = getFilterCount(value, tableFilter.option);\n            setTableFilter({\n              filter: value,\n              option: tableFilter.option,\n              count: newCount,\n            });\n          }}\n          onClear={() => {\n            setTableFilter({\n              filter: '',\n              option: tableFilter.option,\n              count: images.length,\n            });\n          }}\n        />\n      </ToolbarItem>\n      <ToolbarItem>\n        <Button\n          data-id=\"import-new-image\"\n          onClick={() => {\n            setImportImageModalVisible(true);\n          }}\n        >\n          Import new image\n        </Button>\n      </ToolbarItem>\n    </React.Fragment>\n  );\n\n  const applyTableFilter = (image: BYONImage): boolean => {\n    if (\n      tableFilter.filter !== '' &&\n      image[tableFilter.option] &&\n      tableFilter.option !== 'uploaded'\n    ) {\n      const BYONImageValue: string = image[tableFilter.option] as string;\n      return !BYONImageValue.includes(tableFilter.filter);\n    }\n    if (\n      tableFilter.filter !== '' &&\n      image[tableFilter.option] &&\n      tableFilter.option === 'uploaded'\n    ) {\n      const BYONImageValue: string = relativeTime(\n        currentTimeStamp,\n        new Date(image.uploaded as Date).getTime(),\n      );\n      return !BYONImageValue.includes(tableFilter.filter);\n    }\n    return false;\n  };\n  return (\n    <React.Fragment>\n      <DeleteImageModal\n        image={currentImage}\n        isOpen={deleteImageModalVisible}\n        onDeleteHandler={forceUpdate}\n        onCloseHandler={() => {\n          setDeleteImageModalVisible(false);\n        }}\n      />\n      <ImportImageModal\n        isOpen={importImageModalVisible}\n        onCloseHandler={() => {\n          setImportImageModalVisible(false);\n        }}\n        onImportHandler={forceUpdate}\n      />\n      <UpdateImageModal\n        image={currentImage}\n        isOpen={updateImageModalVisible}\n        onUpdateHandler={forceUpdate}\n        onCloseHandler={() => {\n          setUpdateImageModalVisible(false);\n        }}\n      />\n      <Toolbar data-id=\"toolbar-items\">\n        <ToolbarContent>{items}</ToolbarContent>\n      </Toolbar>\n      <TableComposable\n        className={tableFilter.count === 0 ? 'empty-table' : ''}\n        aria-label=\"Notebook images table\"\n        variant=\"compact\"\n      >\n        <Thead>\n          <Tr>\n            <Td />\n            <Th sort={getSortParams(0)}>{columnNames.name}</Th>\n            <Th sort={getSortParams(1)}>{columnNames.description}</Th>\n            <Th>Enable</Th>\n            <Th sort={getSortParams(3)}>{columnNames.user}</Th>\n            <Th sort={getSortParams(4)}>{columnNames.uploaded}</Th>\n            <Td />\n          </Tr>\n        </Thead>\n        {tableFilter.count > 0 ? (\n          sortedImages.map((image, rowIndex) => {\n            const packages: React.ReactNode[] = [];\n            image.packages?.forEach((nbpackage) => {\n              packages.push(<p>{`${nbpackage.name} ${nbpackage.version}`}</p>);\n            });\n            return (\n              <Tbody key={image.id} isExpanded={isBYONImageExpanded(image)}>\n                <Tr isHidden={applyTableFilter(image)}>\n                  <Td\n                    expand={{\n                      rowIndex,\n                      isExpanded: isBYONImageExpanded(image),\n                      onToggle: () => setBYONImageExpanded(image, !isBYONImageExpanded(image)),\n                    }}\n                  />\n                  <Td dataLabel={columnNames.name}>\n                    <Flex\n                      spaceItems={{ default: 'spaceItemsSm' }}\n                      alignItems={{ default: 'alignItemsCenter' }}\n                    >\n                      <FlexItem>{image.name}</FlexItem>\n                      <FlexItem>\n                        <ImageErrorStatus image={image} />\n                      </FlexItem>\n                    </Flex>\n                  </Td>\n                  <Td dataLabel={columnNames.description}>{image.description}</Td>\n                  <Td>\n                    <Switch\n                      className=\"enable-switch\"\n                      aria-label={`Enable Switch ${image.name}`}\n                      data-id={`enabled-disable-${image.id}`}\n                      isChecked={BYONImageVisible.find((value) => image.id === value.id)?.visible}\n                      onChange={() => {\n                        updateBYONImage({\n                          id: image.id,\n                          visible: !image.visible,\n                          packages: image.packages,\n                        });\n                        setBYONImageVisible(\n                          BYONImageVisible.map((value) =>\n                            image.id === value.id\n                              ? { id: value.id, visible: !value.visible }\n                              : value,\n                          ),\n                        );\n                      }}\n                    />\n                  </Td>\n                  <Td dataLabel={columnNames.user}>{image.user}</Td>\n                  <Td dataLabel={columnNames.uploaded}>\n                    {relativeTime(currentTimeStamp, new Date(image.uploaded as Date).getTime())}\n                  </Td>\n                  <Td isActionCell>\n                    <ActionsColumn items={rowActions(image)} />\n                  </Td>\n                </Tr>\n                <Tr isHidden={applyTableFilter(image)} isExpanded={isBYONImageExpanded(image)}>\n                  <Td dataLabel=\"Package Details\" colSpan={Object.entries(columnNames).length}>\n                    {packages.length > 0 ? (\n                      <ExpandableRowContent>\n                        <Flex className=\"included-packages\">\n                          <FlexItem>Packages Include</FlexItem>\n                          <FlexItem className=\"included-packages-font\">{packages}</FlexItem>\n                        </Flex>\n                      </ExpandableRowContent>\n                    ) : (\n                      <EmptyState variant={EmptyStateVariant.small}>\n                        <EmptyStateHeader titleText=\"No packages detected\" icon={<EmptyStateIcon icon={CubesIcon} />} headingLevel=\"h2\" />\n                        <EmptyStateBody>Edit the image to add packages</EmptyStateBody>\n                      </EmptyState>\n                    )}\n                  </Td>\n                </Tr>\n              </Tbody>\n            );\n          })\n        ) : (\n          <Tbody>\n            <Tr>\n              <Td colSpan={8}>\n                <Bullseye>\n                  <EmptyState variant={EmptyStateVariant.sm}>\n                    <EmptyStateIcon icon={SearchIcon} />\n                    <Title headingLevel=\"h2\" size=\"lg\">\n                      No results found\n                    </Title>\n                    <EmptyStateBody>Clear all filters and try again.</EmptyStateBody><EmptyStateFooter>\n                    <Button\n                      variant=\"link\"\n                      onClick={() => {\n                        setTableFilter({\n                          filter: '',\n                          option: tableFilter.option,\n                          count: images.length,\n                        });\n                      }}\n                    >\n                      Clear all filters\n                    </Button>\n                  </EmptyStateFooter></EmptyState>\n                </Bullseye>\n              </Td>\n            </Tr>\n          </Tbody>\n        )}\n      </Table>\n    </React.Fragment>\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/DeleteBYONImageModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/EditStepTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/ImageErrorStatus.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/ImportImageModal.tsx",["3416"],[],"import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Form,\n  FormGroup,\n  TextInput,\n  Modal,\n  ModalVariant,\n  Tabs,\n  Tab,\n  TabTitleText, EmptyStateHeader, EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { Caption, Table /* data-codemods */, Tbody, Thead, Th, Tr } from '@patternfly/react-table';\nimport { CubesIcon, ExclamationCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { importBYONImage } from '~/services/imagesService';\nimport { ResponseStatus, BYONImagePackage } from '~/types';\nimport { addNotification } from '~/redux/actions/actions';\nimport { useAppDispatch, useAppSelector } from '~/redux/hooks';\nimport { EditStepTableRow } from './EditStepTableRow';\n\nimport './ImportImageModal.scss';\n\nexport type ImportImageModalProps = {\n  isOpen: boolean;\n  onCloseHandler: () => void;\n  onImportHandler();\n};\nexport const ImportImageModal: React.FC<ImportImageModalProps> = ({\n  isOpen,\n  onImportHandler,\n  onCloseHandler,\n}) => {\n  const [repository, setRepository] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [software, setSoftware] = React.useState<BYONImagePackage[]>([]);\n  const [packages, setPackages] = React.useState<BYONImagePackage[]>([]);\n  const [activeTabKey, setActiveTabKey] = React.useState(0);\n  const [validName, setValidName] = React.useState(true);\n  const [validRepo, setValidRepo] = React.useState(true);\n  const userName = useAppSelector((state) => state.user || '');\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (isOpen === true) {\n      setName('');\n      setDescription('');\n      setPackages([]);\n      setSoftware([]);\n      setValidName(true);\n      setValidRepo(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title=\"Import notebook images\"\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      actions={[\n        <Button\n          data-id=\"import-confirm-button\"\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => {\n            if (name.length > 0 && repository.length > 0) {\n              importBYONImage({\n                name: name,\n                url: repository,\n                description: description,\n                user: userName,\n                software: software,\n                packages: packages,\n              }).then((value: ResponseStatus) => {\n                if (value.success === false) {\n                  dispatch(\n                    addNotification({\n                      status: 'danger',\n                      title: `Unable to add notebook image ${name}`,\n                      message: value.error,\n                      timestamp: new Date(),\n                    }),\n                  );\n                }\n                onImportHandler();\n                onCloseHandler();\n              });\n            } else {\n              name.length > 0 ? setValidName(true) : setValidName(false);\n              repository.length > 0 ? setValidRepo(true) : setValidRepo(false);\n            }\n          }}\n        >\n          Import\n        </Button>,\n        <Button data-id=\"import-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCloseHandler}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <FormGroup\n          label=\"Repository\"\n          isRequired\n          fieldId=\"byon-image-repository-input\"\n          helperText=\"Repo where notebook images are stored.\"\n          helperTextInvalid=\"This field is required.\"\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n          validated={validRepo ? undefined : 'error'}\n        >\n          <TextInput\n            id=\"byon-image-repository-input\"\n            isRequired\n            type=\"text\"\n            data-id=\"byon-image-repository-input\"\n            name=\"byon-image-repository-input\"\n            aria-describedby=\"byon-image-repository-input\"\n            value={repository}\n            onChange={(_event, value) => {\n              setRepository(value);\n            }}\n          />\n        </FormGroup>\n        <FormGroup\n          label=\"Name\"\n          isRequired\n          fieldId=\"byon-image-name-input\"\n          helperTextInvalid=\"This field is required.\"\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n          validated={validName ? undefined : 'error'}\n        >\n          <TextInput\n            id=\"byon-image-name-input\"\n            isRequired\n            type=\"text\"\n            data-id=\"byon-image-name-input\"\n            name=\"byon-image-name-input\"\n            value={name}\n            onChange={(_event, value) => {\n              setName(value);\n            }}\n          />\n        </FormGroup>\n        <FormGroup label=\"Description\" fieldId=\"byon-image-description-input\">\n          <TextInput\n            id=\"byon-image-description-input\"\n            isRequired\n            type=\"text\"\n            data-id=\"byon-image-description-input\"\n            name=\"byon-image-description-input\"\n            aria-describedby=\"byon-image-description-input\"\n            value={description}\n            onChange={(_event, value) => {\n              setDescription(value);\n            }}\n          />\n        </FormGroup>\n        <FormGroup fieldId=\"byon-image-software-packages\">\n          <Tabs\n            activeKey={activeTabKey}\n            onSelect={(_event, indexKey) => {\n              setActiveTabKey(indexKey as number);\n            }}\n          >\n            <Tab data-id=\"software-tab\" eventKey={0} title={<TabTitleText>Software</TabTitleText>}>\n              {software.length > 0 ? (\n                <>\n                  <Table aria-label=\"Simple table\" variant=\"compact\">\n                    <Caption>\n                      Add the advertised software shown with this notebook image. Modifying the\n                      software here does not effect the contents of the notebook image.\n                    </Caption>\n                    <Thead>\n                      <Tr>\n                        <Th>Software</Th>\n                        <Th>Version</Th>\n                        <Th />\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {software.map((value, currentIndex) => (\n                        <EditStepTableRow\n                          key={`${value.name}-${currentIndex}`}\n                          imagePackage={value}\n                          setEditedValues={(values) => {\n                            const updatedPackages = [...software];\n                            updatedPackages[currentIndex] = values;\n                            setSoftware(updatedPackages);\n                          }}\n                          onDeleteHandler={() => {\n                            setSoftware(software.filter((_value, index) => index !== currentIndex));\n                          }}\n                        />\n                      ))}\n                    </Tbody>\n                  </Table>\n                  <Button\n                    data-id=\"add-software-secondary-button\"\n                    variant=\"link\"\n                    icon={<PlusCircleIcon />}\n                    onClick={() => {\n                      setSoftware((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add Software\n                  </Button>\n                </>\n              ) : (\n                <EmptyState variant={EmptyStateVariant.sm}>\n                  <EmptyStateHeader titleText=\"No software added\" icon={<EmptyStateIcon icon={CubesIcon} />} headingLevel=\"h2\" />\n                  <EmptyStateBody>\n                    Add software to be advertised with your notebook image. Making changes here\n                    won’t affect the contents of the image.{' '}\n                  </EmptyStateBody><EmptyStateFooter>\n                  <Button\n                    data-id=\"add-software-button\"\n                    className=\"empty-button\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                      setSoftware((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add software\n                  </Button>\n                </EmptyStateFooter></EmptyState>\n              )}\n            </Tab>\n            <Tab data-id=\"packages-tab\" eventKey={1} title={<TabTitleText>Packages</TabTitleText>}>\n              {packages.length > 0 ? (\n                <>\n                  <Table aria-label=\"Simple table\" variant=\"compact\" isStickyHeader>\n                    <Caption>\n                      Add the advertised packages shown with this notebook image. Modifying the\n                      packages here does not effect the contents of the notebook image.\n                    </Caption>\n                    <Thead>\n                      <Tr>\n                        <Th>Package</Th>\n                        <Th>Version</Th>\n                        <Th />\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {packages.map((value, currentIndex) => (\n                        <EditStepTableRow\n                          key={`${value.name}-${currentIndex}`}\n                          imagePackage={value}\n                          setEditedValues={(values) => {\n                            const updatedPackages = [...packages];\n                            updatedPackages[currentIndex] = values;\n                            setPackages(updatedPackages);\n                          }}\n                          onDeleteHandler={() => {\n                            setPackages(packages.filter((_value, index) => index !== currentIndex));\n                          }}\n                        />\n                      ))}\n                    </Tbody>\n                  </Table>\n                  <Button\n                    data-id=\"add-package-secondary-button\"\n                    variant=\"link\"\n                    icon={<PlusCircleIcon />}\n                    onClick={() => {\n                      setPackages((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add Package\n                  </Button>\n                </>\n              ) : (\n                <EmptyState variant={EmptyStateVariant.sm}>\n                  <EmptyStateHeader titleText=\"No packages added\" icon={<EmptyStateIcon icon={CubesIcon} />} headingLevel=\"h2\" />\n                  <EmptyStateBody>\n                    Add packages to be advertised with your notebook image. Making changes here\n                    won’t affect the contents of the image.{' '}\n                  </EmptyStateBody><EmptyStateFooter>\n                  <Button\n                    data-id=\"add-package-button\"\n                    className=\"empty-button\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                      setPackages((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add package\n                  </Button>\n                </EmptyStateFooter></EmptyState>\n              )}\n            </Tab>\n          </Tabs>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ImportImageModal;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/BYONImages/UpdateImageModal.tsx",["3417"],[],"import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Form,\n  FormGroup,\n  Tab,\n  Tabs,\n  TabTitleText,\n  TextInput,\n  Modal,\n  ModalVariant, EmptyStateHeader, EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { Caption, Table /* data-codemods */, Tbody, Thead, Th, Tr } from '@patternfly/react-table';\nimport { CubesIcon, ExclamationCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { updateBYONImage } from '~/services/imagesService';\nimport { BYONImage, BYONImagePackage } from '~/types';\nimport { addNotification } from '~/redux/actions/actions';\nimport { useAppDispatch } from '~/redux/hooks';\nimport { EditStepTableRow } from './EditStepTableRow';\n\nimport './UpdateImageModal.scss';\n\nexport type UpdateImageModalProps = {\n  isOpen: boolean;\n  image: BYONImage;\n  onCloseHandler: () => void;\n  onUpdateHandler();\n};\nexport const UpdateImageModal: React.FC<UpdateImageModalProps> = ({\n  isOpen,\n  image,\n  onUpdateHandler,\n  onCloseHandler,\n}) => {\n  const [name, setName] = React.useState<string>(image.name);\n  const [description, setDescription] = React.useState<string>(\n    image.description != undefined ? image.description : '',\n  );\n  const [packages, setPackages] = React.useState<BYONImagePackage[]>(\n    image.packages != undefined ? image.packages : [],\n  );\n  const [software, setSoftware] = React.useState<BYONImagePackage[]>(\n    image.software != undefined ? image.software : [],\n  );\n  const [activeTabKey, setActiveTabKey] = React.useState(0);\n  const [validName, setValidName] = React.useState(true);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (isOpen === true) {\n      setName(image.name);\n      setDescription(image.description != undefined ? image.description : '');\n      setPackages(image.packages != undefined ? image.packages : []);\n      setSoftware(image.software != undefined ? image.software : []);\n      setValidName(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={`Edit Package Documentation for ${image.name}`}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      actions={[\n        <Button\n          data-id=\"import-confirm-button\"\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => {\n            if (name.length > 0) {\n              updateBYONImage({\n                id: image.id,\n                name: name,\n                description: description,\n                packages: packages,\n                software: software,\n              }).then((value) => {\n                if (value.success === false) {\n                  dispatch(\n                    addNotification({\n                      status: 'danger',\n                      title: 'Error',\n                      message: `Unable to update image ${name}`,\n                      timestamp: new Date(),\n                    }),\n                  );\n                }\n                onUpdateHandler();\n                onCloseHandler();\n              });\n            } else {\n              name.length > 0 ? setValidName(true) : setValidName(false);\n            }\n          }}\n        >\n          Save Changes\n        </Button>,\n        <Button data-id=\"import-cancel-button\" key=\"cancel\" variant=\"link\" onClick={onCloseHandler}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <FormGroup\n          label=\"Name\"\n          isRequired\n          fieldId=\"byon-image-name-input\"\n          helperTextInvalid=\"This field is required.\"\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n          validated={validName ? undefined : 'error'}\n        >\n          <TextInput\n            id=\"byon-image-name-input\"\n            isRequired\n            type=\"text\"\n            data-id=\"byon-image-name-input\"\n            name=\"byon-image-name-input\"\n            value={name}\n            onChange={(_event, value) => {\n              setName(value);\n            }}\n          />\n        </FormGroup>\n        <FormGroup label=\"Description\" fieldId=\"byon-image-description-input\">\n          <TextInput\n            id=\"byon-image-description-input\"\n            isRequired\n            type=\"text\"\n            data-id=\"byon-image-description-input\"\n            name=\"byon-image-description-input\"\n            aria-describedby=\"byon-image-description-input\"\n            value={description}\n            onChange={(_event, value) => {\n              setDescription(value);\n            }}\n          />\n        </FormGroup>\n        <FormGroup fieldId=\"image-software-packages\">\n          <Tabs\n            activeKey={activeTabKey}\n            onSelect={(_event, indexKey) => {\n              setActiveTabKey(indexKey as number);\n            }}\n          >\n            <Tab data-id=\"software-tab\" eventKey={0} title={<TabTitleText>Software</TabTitleText>}>\n              {software.length > 0 ? (\n                <>\n                  <Table aria-label=\"Simple table\" variant=\"compact\">\n                    <Caption>\n                      Change the advertised software shown with this notebook image. Modifying the\n                      software here does not effect the contents of the notebook image.\n                    </Caption>\n                    <Thead>\n                      <Tr>\n                        <Th data-id=\"software-column\">Software</Th>\n                        <Th data-id=\"version-column\">Version</Th>\n                        <Th />\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {software.map((value, currentIndex) => (\n                        <EditStepTableRow\n                          key={`${value.name}-${currentIndex}`}\n                          imagePackage={value}\n                          setEditedValues={(values) => {\n                            const updatedPackages = [...software];\n                            updatedPackages[currentIndex] = values;\n                            setSoftware(updatedPackages);\n                          }}\n                          onDeleteHandler={() => {\n                            setSoftware(software.filter((_value, index) => index !== currentIndex));\n                          }}\n                        />\n                      ))}\n                    </Tbody>\n                  </Table>\n                  <Button\n                    data-id=\"add-software-secondary-button\"\n                    variant=\"link\"\n                    icon={<PlusCircleIcon />}\n                    onClick={() => {\n                      setSoftware((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add Software\n                  </Button>\n                </>\n              ) : (\n                <EmptyState variant={EmptyStateVariant.sm}>\n                  <EmptyStateHeader titleText=\"No software added\" icon={<EmptyStateIcon icon={CubesIcon} />} headingLevel=\"h2\" />\n                  <EmptyStateBody>\n                    Add software to be advertised with your notebook image. Making changes here\n                    won’t affect the contents of the image.{' '}\n                  </EmptyStateBody><EmptyStateFooter>\n                  <Button\n                    data-id=\"add-software-button\"\n                    className=\"empty-button\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                      setSoftware((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add software\n                  </Button>\n                </EmptyStateFooter></EmptyState>\n              )}\n            </Tab>\n            <Tab eventKey={1} title={<TabTitleText>Packages</TabTitleText>}>\n              {packages.length > 0 ? (\n                <>\n                  <Table aria-label=\"Simple table\" variant=\"compact\" isStickyHeader>\n                    <Caption>\n                      Change the advertised packages shown with this notebook image. Modifying the\n                      packages here does not effect the contents of the notebook image.\n                    </Caption>\n                    <Thead>\n                      <Tr>\n                        <Th data-id=\"package-column\">Package</Th>\n                        <Th data-id=\"version-column\">Version</Th>\n                        <Th />\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {packages.map((value, currentIndex) => (\n                        <EditStepTableRow\n                          key={`${value.name}-${currentIndex}`}\n                          imagePackage={value}\n                          setEditedValues={(values) => {\n                            const updatedPackages = [...packages];\n                            updatedPackages[currentIndex] = values;\n                            setPackages(updatedPackages);\n                          }}\n                          onDeleteHandler={() => {\n                            setPackages(packages.filter((_value, index) => index !== currentIndex));\n                          }}\n                        />\n                      ))}\n                    </Tbody>\n                  </Table>\n                  <Button\n                    data-id=\"add-package-secondary-button\"\n                    variant=\"link\"\n                    icon={<PlusCircleIcon />}\n                    onClick={() => {\n                      setPackages((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add Package\n                  </Button>\n                </>\n              ) : (\n                <EmptyState variant={EmptyStateVariant.sm}>\n                  <EmptyStateHeader titleText=\"No packages added\" icon={<EmptyStateIcon icon={CubesIcon} />} headingLevel=\"h2\" />\n                  <EmptyStateBody>\n                    Add packages to be advertised with your notebook image. Making changes here\n                    won’t affect the contents of the image.{' '}\n                  </EmptyStateBody><EmptyStateFooter>\n                  <Button\n                    data-id=\"add-package-button\"\n                    className=\"empty-button\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                      setPackages((previous) => [\n                        ...previous,\n                        {\n                          name: '',\n                          version: '',\n                          visible: true,\n                        },\n                      ]);\n                    }}\n                  >\n                    Add package\n                  </Button>\n                </EmptyStateFooter></EmptyState>\n              )}\n            </Tab>\n          </Tabs>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateImageModal;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/NotFound.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/UnauthorizedError.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/ClusterSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/CullerSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/PVCSizeSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/TelemetrySettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/TolerationSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/clusterSettings/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/dependencies/DependencyMissingPage.tsx",["3418","3419"],[],"import * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFound from '~/pages/NotFound';\nimport PipelinesDependencyMissing from '~/pages/dependencies/PipelinesDependencyMissing';\nimport { useAppContext } from '~/app/AppContext';\n\nconst DependencyMissingPage: React.FC = () => {\n  const { dashboardConfig } = useAppContext();\n  const { area } = useParams();\n\n  switch (area) {\n    case 'pipelines':\n      if (dashboardConfig.status.dependencyOperators.redhatOpenshiftPipelines.available) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'The pipelines dependency has been met, this page will not render the content.',\n        );\n        break;\n      }\n      return <PipelinesDependencyMissing />;\n    default:\n      // eslint-disable-next-line no-console\n      console.error('Unknown area of the dependency missing screen', area);\n  }\n\n  return <NotFound />;\n};\n\nexport default DependencyMissingPage;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/dependencies/PipelinesDependencyMissing.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/enabledApplications/EnabledApplications.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/EnableModal.tsx",["3420"],[],"import * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormAlert,\n  Modal,\n  ModalVariant,\n  Spinner,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { OdhApplication } from '~/types';\nimport { EnableApplicationStatus, useEnableApplication } from '~/utilities/useEnableApplication';\nimport EnableVariable from './EnableVariable';\n\nimport './EnableModal.scss';\n\ntype EnableModalProps = {\n  selectedApp: OdhApplication;\n  shown: boolean;\n  onClose: () => void;\n};\n\nconst EnableModal: React.FC<EnableModalProps> = ({ selectedApp, shown, onClose }) => {\n  const [postError, setPostError] = React.useState('');\n  const [validationInProgress, setValidationInProgress] = React.useState(false);\n  const [enableValues, setEnableValues] = React.useState<{ [key: string]: string }>({});\n  const [validationStatus, validationErrorMessage] = useEnableApplication(\n    validationInProgress,\n    selectedApp.metadata.name,\n    selectedApp.spec.displayName,\n    enableValues,\n  );\n  const focusRef = (element: HTMLElement | null) => {\n    if (element) {\n      element.focus();\n    }\n  };\n\n  const updateEnableValue = (key: string, value: string): void => {\n    const updatedValues = {\n      ...enableValues,\n      [key]: value,\n    };\n    setEnableValues(updatedValues);\n  };\n\n  const onDoEnableApp = () => {\n    setPostError('');\n    setValidationInProgress(true);\n  };\n\n  React.useEffect(() => {\n    if (validationInProgress && validationStatus === EnableApplicationStatus.SUCCESS) {\n      setValidationInProgress(false);\n      selectedApp.spec.isEnabled = true;\n      selectedApp.spec.shownOnEnabledPage = true;\n      onClose();\n    }\n    if (validationInProgress && validationStatus === EnableApplicationStatus.FAILED) {\n      setValidationInProgress(false);\n      setPostError(validationErrorMessage);\n    }\n  }, [onClose, selectedApp.spec, validationErrorMessage, validationInProgress, validationStatus]);\n\n  React.useEffect(() => {\n    if (shown) {\n      if (!validationInProgress) {\n        setPostError('');\n      }\n    }\n    // Only update when shown is updated to true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shown]);\n\n  const handleClose = () => {\n    if (!validationInProgress) {\n      setEnableValues({});\n    }\n    onClose();\n  };\n\n  if (!selectedApp?.spec?.enable || !shown) {\n    return null;\n  }\n  const { enable } = selectedApp.spec;\n\n  return (\n    <Modal\n      aria-label={`Enable ${enable.title}`}\n      className=\"odh-enable-modal\"\n      data-id=\"enable-modal\"\n      variant={ModalVariant.small}\n      title={enable.title}\n      isOpen\n      onClose={handleClose}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={onDoEnableApp}\n          isDisabled={validationInProgress}\n        >\n          {enable.actionLabel}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleClose}>\n          {validationInProgress ? 'Close' : 'Cancel'}\n        </Button>,\n      ]}\n    >\n      {enable.description ? enable.description : null}\n      {enable.link ? (\n        <div className=\"odh-enable-modal__enable-link\">\n          {enable.linkPreface ? <div>{enable.linkPreface}</div> : null}\n          <a href={enable.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {enable.link} <ExternalLinkAltIcon />\n          </a>\n        </div>\n      ) : null}\n      {enable.variables ? (\n        <Form>\n          {postError ? (\n            <FormAlert>\n              <Alert\n                variantLabel=\"error\"\n                variant=\"danger\"\n                title=\"Validation failed\"\n                aria-live=\"polite\"\n                isInline\n              >\n                {postError}\n              </Alert>\n            </FormAlert>\n          ) : null}\n          {validationInProgress ? (\n            <FormAlert>\n              <Alert\n                className=\"m-no-alert-icon\"\n                variantLabel=\"information\"\n                variant=\"info\"\n                title={\n                  <div className=\"odh-enable-modal__progress-title\">\n                    <Spinner  size=\"md\" /> Validating your entries\n                  </div>\n                }\n                aria-live=\"polite\"\n                isInline\n              />\n            </FormAlert>\n          ) : null}\n          {Object.keys(enable.variables).map((key, index) => (\n            <EnableVariable\n              key={key}\n              ref={index === 0 ? focusRef : undefined}\n              label={enable.variableDisplayText?.[key] ?? ''}\n              inputType={enable.variables?.[key] as TextInputTypes}\n              helperText={enable.variableHelpText?.[key] ?? ''}\n              validationInProgress={validationInProgress}\n              value={enableValues[key]}\n              updateValue={(value: string) => updateEnableValue(key, value)}\n            />\n          ))}\n        </Form>\n      ) : null}\n    </Modal>\n  );\n};\n\nexport default EnableModal;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/EnableVariable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/ExploreApplications.tsx",["3421"],[],"import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport {\n  Drawer,\n  DrawerContent,\n  DrawerContentBody,\n  Gallery,\n  PageSection,\n} from '@patternfly/react-core';\nimport { useWatchComponents } from '~/utilities/useWatchComponents';\nimport OdhExploreCard from '~/components/OdhExploreCard';\nimport ApplicationsPage from '~/pages/ApplicationsPage';\nimport { OdhApplication } from '~/types';\nimport { useQueryParams } from '~/utilities/useQueryParams';\nimport { removeQueryArgument, setQueryArgument } from '~/utilities/router';\nimport { fireTrackingEvent } from '~/utilities/segmentIOUtils';\nimport { ODH_PRODUCT_NAME } from '~/utilities/const';\nimport { useAppContext } from '~/app/AppContext';\nimport GetStartedPanel from './GetStartedPanel';\n\nimport './DrawerContentBody.scss';\n\nconst description = `Add optional applications to your ${ODH_PRODUCT_NAME} instance.`;\nconst disabledDescription = `View optional applications for your ${ODH_PRODUCT_NAME} instance. Contact an administrator to install these applications.`;\n\ntype ExploreApplicationsInnerProps = {\n  loaded: boolean;\n  isEmpty: boolean;\n  loadError?: Error;\n  exploreComponents: OdhApplication[];\n  selectedComponent?: OdhApplication;\n  updateSelection: (selectedId?: string | null) => void;\n};\n\nconst ExploreApplicationsInner: React.FC<ExploreApplicationsInnerProps> = React.memo(\n  ({ loaded, isEmpty, loadError, exploreComponents, selectedComponent, updateSelection }) => {\n    const { dashboardConfig } = useAppContext();\n    const disableInfo = dashboardConfig.spec.dashboardConfig.disableInfo;\n    const [enableApp, setEnableApp] = React.useState<OdhApplication>();\n\n    return (\n      <Drawer\n        data-id=\"explore-applications\"\n        isExpanded={!disableInfo && !!selectedComponent}\n        isInline\n      >\n        <DrawerContent\n          panelContent={\n            <GetStartedPanel\n              onClose={() => updateSelection()}\n              selectedApp={selectedComponent}\n              onEnable={() => setEnableApp(selectedComponent)}\n            />\n          }\n        >\n          <DrawerContentBody className=\"odh-explore-page__drawer-body-content\">\n            <ApplicationsPage\n              title=\"Explore\"\n              description={disableInfo ? disabledDescription : description}\n              loaded={loaded}\n              empty={isEmpty}\n              loadError={loadError}\n            >\n              <PageSection isFilled data-id=\"page-content\">\n                <Gallery maxWidths={{ default: '330px' }} role=\"list\" hasGutter>\n                  {exploreComponents.map((c) => (\n                    <OdhExploreCard\n                      key={c.metadata.name}\n                      odhApp={c}\n                      isSelected={selectedComponent?.metadata.name === c.metadata.name}\n                      onSelect={() => {\n                        updateSelection(c.metadata.name);\n                        fireTrackingEvent('Explore card clicked', {\n                          name: c.metadata.name,\n                        });\n                      }}\n                      disableInfo={disableInfo}\n                      enableOpen={c.metadata.name === enableApp?.metadata.name}\n                      onEnableClose={() => setEnableApp(undefined)}\n                    />\n                  ))}\n                </Gallery>\n              </PageSection>\n            </ApplicationsPage>\n          </DrawerContentBody>\n        </DrawerContent>\n      </Drawer>\n    );\n  },\n);\nExploreApplicationsInner.displayName = 'ExploreApplicationsInner';\n\nconst ExploreApplications: React.FC = () => {\n  const { components, loaded, loadError } = useWatchComponents(false);\n  const navigate = useNavigate();\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [selectedComponent, setSelectedComponent] = React.useState<OdhApplication>();\n  const isEmpty = !components || components.length === 0;\n\n  const updateSelection = React.useCallback(\n    (selectedId?: string | null): void => {\n      const selection = components.find((c) => c.metadata.name && c.metadata.name === selectedId);\n      if (selectedId && selection) {\n        setQueryArgument(navigate, 'selectId', selectedId);\n        setSelectedComponent(selection);\n        return;\n      }\n\n      setSelectedComponent(undefined);\n      removeQueryArgument(navigate, 'selectId');\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [components],\n  );\n\n  const exploreComponents = React.useMemo<OdhApplication[]>(\n    () =>\n      _.cloneDeep(components).sort((a, b) => a.spec.displayName.localeCompare(b.spec.displayName)),\n    [components],\n  );\n\n  React.useEffect(() => {\n    if (components?.length > 0) {\n      updateSelection(selectedId);\n    }\n  }, [updateSelection, selectedId, components]);\n\n  return (\n    <ExploreApplicationsInner\n      loaded={loaded}\n      isEmpty={isEmpty}\n      loadError={loadError}\n      exploreComponents={exploreComponents}\n      selectedComponent={selectedComponent}\n      updateSelection={updateSelection}\n    />\n  );\n};\n\nexport default ExploreApplications;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/exploreApplication/GetStartedPanel.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/groupSettings/GroupSettings.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/groupSettings/groupTypes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/ApplicationFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/CategoryFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/DocTypeFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/EnabledFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenter.tsx",["3422"],[],"import React from 'react';\nimport * as _ from 'lodash';\nimport useDimensions from 'react-cool-dimensions';\nimport { QuickStartContext, QuickStartContextValues } from '@patternfly/quickstarts';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { OdhDocument, OdhDocumentType } from '~/types';\nimport { useWatchComponents } from '~/utilities/useWatchComponents';\nimport { useWatchDocs } from '~/utilities/useWatchDocs';\nimport { useBrowserStorage } from '~/components/browserStorage';\nimport { useQueryParams } from '~/utilities/useQueryParams';\nimport ApplicationsPage from '~/pages/ApplicationsPage';\nimport QuickStarts from '~/app/QuickStarts';\nimport { DOC_LINK, ODH_PRODUCT_NAME } from '~/utilities/const';\nimport { combineCategoryAnnotations } from '~/utilities/utils';\nimport { useDeepCompareMemoize } from '~/utilities/useDeepCompareMemoize';\nimport {\n  DOC_SORT_KEY,\n  DOC_SORT_ORDER_KEY,\n  SORT_ASC,\n  SORT_DESC,\n  SORT_TYPE_APPLICATION,\n  SORT_TYPE_DURATION,\n  SORT_TYPE_NAME,\n  SORT_TYPE_TYPE,\n  CARD_VIEW,\n  VIEW_TYPE,\n  FAVORITE_RESOURCES,\n} from './const';\nimport LearningCenterToolbar from './LearningCenterToolbar';\nimport LearningCenterFilters from './LearningCenterFilters';\nimport { useDocFilterer } from './useDocFilterer';\nimport LearningCenterDataView from './LearningCenterDataView';\n\nimport './LearningCenter.scss';\n\nconst description = `Access all learning resources for ${ODH_PRODUCT_NAME} and supported applications.`;\nconst docText = ` To learn more about ${ODH_PRODUCT_NAME}, `;\n\nexport const LearningCenter: React.FC = () => {\n  const { docs: odhDocs, loaded: docsLoaded, loadError: docsLoadError } = useWatchDocs();\n  const { components, loaded, loadError } = useWatchComponents(false);\n  const qsContext = React.useContext<QuickStartContextValues>(QuickStartContext);\n  const [docApps, setDocApps] = React.useState<OdhDocument[]>([]);\n  const [filteredDocApps, setFilteredDocApps] = React.useState<OdhDocument[]>([]);\n  const queryParams = useQueryParams();\n  const sortType = queryParams.get(DOC_SORT_KEY) || SORT_TYPE_NAME;\n  const sortOrder = queryParams.get(DOC_SORT_ORDER_KEY) || SORT_ASC;\n  const [favorites, setFavorites] = useBrowserStorage<string[]>(FAVORITE_RESOURCES, []);\n  const favoriteResources = useDeepCompareMemoize(favorites);\n  const docFilterer = useDocFilterer(favoriteResources);\n  const [viewType, setViewType] = useBrowserStorage<string>(VIEW_TYPE, '', false);\n  const [filtersCollapsed, setFiltersCollapsed] = React.useState(false);\n  const [filtersCollapsible, setFiltersCollapsible] = React.useState(false);\n  const { observe } = useDimensions({\n    breakpoints: { sm: 0, md: 600 },\n    onResize: ({ currentBreakpoint }) => {\n      setFiltersCollapsed(currentBreakpoint === 'sm');\n      setFiltersCollapsible(currentBreakpoint === 'sm');\n    },\n  });\n\n  React.useEffect(() => {\n    if (loaded && !loadError && docsLoaded && !docsLoadError) {\n      const docs = [...odhDocs];\n\n      // Add doc cards for all components' documentation\n      components.forEach((component) => {\n        if (component.spec.docsLink) {\n          const odhDoc: OdhDocument = {\n            metadata: {\n              name: `${component.metadata.name}-doc`,\n            },\n            spec: {\n              type: OdhDocumentType.Documentation,\n              appName: component.metadata.name,\n              provider: component.spec.provider,\n              url: component.spec.docsLink,\n              displayName: component.spec.displayName,\n              description: component.spec.description,\n            },\n          };\n          docs.push(odhDoc);\n        }\n      });\n\n      // Add doc cards for all quick starts\n      qsContext.allQuickStarts?.forEach((quickStart) => {\n        const odhDoc = _.merge({}, quickStart, {\n          spec: { type: OdhDocumentType.QuickStart },\n        });\n        docs.push(odhDoc as unknown as OdhDocument); // TODO: Fix QuickStart type dependency -- they updated their types and broke us\n      });\n\n      const updatedDocApps = docs\n        .filter((doc) => doc.spec.type !== 'getting-started')\n        .map((odhDoc) => {\n          const odhApp = components.find((c) => c.metadata.name === odhDoc.spec.appName);\n          const updatedDoc = _.cloneDeep(odhDoc);\n          if (odhApp) {\n            combineCategoryAnnotations(odhDoc, odhApp);\n            updatedDoc.spec.appDisplayName = odhApp.spec.displayName;\n            updatedDoc.spec.appEnabled = odhApp.spec.isEnabled ?? false;\n            updatedDoc.spec.img = odhDoc.spec.img || odhApp.spec.img;\n            updatedDoc.spec.description = odhDoc.spec.description || odhApp.spec.description;\n            updatedDoc.spec.provider = odhDoc.spec.provider || odhApp.spec.provider;\n            updatedDoc.spec.appCategory = odhDoc.spec.appCategory || odhApp.spec.category;\n          } else {\n            updatedDoc.spec.appEnabled = false;\n          }\n          return updatedDoc;\n        });\n      setDocApps(updatedDocApps);\n    }\n  }, [components, loaded, loadError, odhDocs, docsLoaded, docsLoadError, qsContext.allQuickStarts]);\n\n  React.useEffect(() => {\n    const filtered = docFilterer(docApps);\n    setFilteredDocApps(\n      filtered.sort((a, b) => {\n        const aFav = favoriteResources.includes(a.metadata.name);\n        const bFav = favoriteResources.includes(b.metadata.name);\n        if (aFav && !bFav) {\n          return -1;\n        }\n        if (!aFav && bFav) {\n          return 1;\n        }\n        let sortVal;\n        switch (sortType) {\n          case SORT_TYPE_NAME:\n            sortVal = a.spec.displayName.localeCompare(b.spec.displayName);\n            break;\n          case SORT_TYPE_TYPE:\n            sortVal = a.spec.type.localeCompare(b.spec.type);\n            break;\n          case SORT_TYPE_APPLICATION:\n            if (!a.spec.appDisplayName) {\n              sortVal = -1;\n            } else if (!b.spec.appDisplayName) {\n              sortVal = 1;\n            } else {\n              sortVal = a.spec.appDisplayName.localeCompare(b.spec.appDisplayName);\n            }\n            break;\n          case SORT_TYPE_DURATION:\n            sortVal = (a.spec.durationMinutes || 0) - (b.spec.durationMinutes || 0);\n            break;\n          default:\n            sortVal = a.spec.displayName.localeCompare(b.spec.displayName);\n        }\n        if (sortVal === 0) {\n          sortVal = a.spec.displayName.localeCompare(b.spec.displayName);\n        }\n        if (sortOrder === SORT_DESC) {\n          sortVal *= -1;\n        }\n        return sortVal;\n      }),\n    );\n    // Do not include favoriteResources change to prevent re-sorting when favoriting/unfavoriting\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [docApps, docFilterer, sortOrder, sortType]);\n\n  const updateFavorite = React.useCallback(\n    (isFavorite: boolean, name: string): void => {\n      const updatedFavorites = [...favoriteResources];\n      const index = updatedFavorites.indexOf(name);\n      if (isFavorite) {\n        if (index === -1) {\n          updatedFavorites.push(name);\n        }\n      } else {\n        if (index !== -1) {\n          updatedFavorites.splice(index, 1);\n        }\n      }\n      setFavorites(updatedFavorites);\n    },\n    [favoriteResources, setFavorites],\n  );\n\n  const docLink = DOC_LINK ? (\n    <>\n      {docText}\n      <a href={DOC_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n        view the documentation. <ExternalLinkAltIcon />\n      </a>\n    </>\n  ) : null;\n\n  return (\n    <ApplicationsPage\n      title=\"Resources\"\n      description={\n        <>\n          {description}\n          {docLink}\n        </>\n      }\n      loaded={loaded && docsLoaded}\n      loadError={loadError || docsLoadError}\n      empty={false}\n    >\n      <div className=\"odh-dashboard__page-content\" data-id=\"page-content\" ref={observe}>\n        <LearningCenterFilters\n          docApps={docApps}\n          collapsible={filtersCollapsible}\n          collapsed={filtersCollapsed}\n          onCollapse={() => setFiltersCollapsed(true)}\n          favorites={favoriteResources}\n        />\n        <div className=\"odh-learning-paths__view-panel\">\n          <LearningCenterToolbar\n            count={filteredDocApps.length}\n            totalCount={docApps.length}\n            viewType={viewType || CARD_VIEW}\n            updateViewType={setViewType}\n            filtersCollapsible={filtersCollapsible}\n            onToggleFiltersCollapsed={() => setFiltersCollapsed(!filtersCollapsed)}\n          />\n          <LearningCenterDataView\n            filteredDocApps={filteredDocApps}\n            favorites={favoriteResources}\n            updateFavorite={updateFavorite}\n            viewType={viewType || CARD_VIEW}\n          />\n        </div>\n      </div>\n    </ApplicationsPage>\n  );\n};\n\nconst LearningCenterWrapper: React.FC = () => (\n  <QuickStarts>\n    <LearningCenter />\n  </QuickStarts>\n);\n\nexport default LearningCenterWrapper;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterDataView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterListHeader.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/LearningCenterToolbar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/ProviderTypeFilters.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/useDocFilterer.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/learningCenter/useQueryFilters.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/ModelServingContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/ModelServingRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeAddTemplate.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeEditTemplate.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeEnabledToggle.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeListView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/CustomServingRuntimeView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/DeleteCustomServingRuntimeModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/EmptyCustomServingRuntime.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/templatedData.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useCustomServingRuntimesEnabled.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplateDisablement.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplateOrder.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/useTemplates.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/customServingRuntimes/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/DeleteInferenceServiceModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/EmptyModelServing.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceEndpoint.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceListView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceModel.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceProject.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceStatus.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InferenceServiceTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/InternalServicePopoverContent.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/ModelServingGlobal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/ServeModelButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/useRouteForInferenceService.ts",["3423"],[],"import * as React from 'react';\nimport { InferenceServiceKind } from '~/k8sTypes';\nimport { getRoute } from '~/api';\n\nconst useRouteForInferenceService = (\n  inferenceService: InferenceServiceKind,\n  isRouteEnabled: boolean,\n): [routeLink: string | null, loaded: boolean, loadError: Error | null] => {\n  const [route, setRoute] = React.useState<string | null>(null);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | null>(null);\n\n  const routeName = inferenceService.metadata.name;\n  const routeNamespace = inferenceService.metadata.namespace;\n\n  React.useEffect(() => {\n    if (!isRouteEnabled) {\n      setLoadError(null);\n      setLoaded(true);\n      return;\n    }\n    getRoute(routeName, routeNamespace)\n      .then((route) => {\n        setRoute(`https://${route.spec.host}${route.spec.path}`);\n        setLoaded(true);\n      })\n      .catch((e) => {\n        setLoadError(e);\n        setLoaded(true);\n      });\n  }, [routeName, routeNamespace, isRouteEnabled]);\n\n  return [route, loaded, loadError];\n};\n\nexport default useRouteForInferenceService;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/global/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsChart.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/MetricsPageToolbar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/ModelServingMetricsContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/ModelServingMetricsWrapper.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/metrics/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/DeleteServingRuntimeModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/DetailsPageMetricsWrapper.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/EmptyInferenceServicesCell.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionExistingField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionFolderPathField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/DataConnectionSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ExistingProjectField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/InferenceServiceFrameworkSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/InferenceServiceServingRuntimeSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ManageInferenceServiceModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/ProjectSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/useModelFramework.ts",["3424"],[],"import * as React from 'react';\nimport { getServingRuntime } from '~/api';\nimport { SupportedModelFormats } from '~/k8sTypes';\n\nconst useModelFramework = (\n  name?: string,\n  namespace?: string,\n): [models: SupportedModelFormats[], loaded: boolean, loadError: Error | undefined] => {\n  const [models, setModels] = React.useState<SupportedModelFormats[]>([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (!name || !namespace) {\n      return;\n    }\n    setLoadError(undefined);\n    setLoaded(false);\n    getServingRuntime(name, namespace)\n      .then((servingRuntime) => {\n        setModels(servingRuntime.spec.supportedModelFormats);\n        setLoaded(true);\n      })\n      .catch((e) => {\n        setLoadError(e);\n      });\n  }, [name, namespace]);\n\n  return [models, loaded, loadError];\n};\n\nexport default useModelFramework;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/InferenceServiceModal/useModelServingProjects.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeListButtonAction.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ManageServingRuntimeModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeReplicaSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeSizeExpandedField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeSizeSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTemplateSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTokenInput.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeModal/ServingRuntimeTokenSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTableExpandedSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokenDisplay.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokenTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/ServingRuntimeTokensTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/useServingRuntimeSecrets.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/projects/utils.ts",["3425"],[],"import * as React from 'react';\nimport { InferenceServiceKind, SecretKind, ServingRuntimeKind } from '~/k8sTypes';\nimport { UpdateObjectAtPropAndValue } from '~/pages/projects/types';\nimport useGenericObjectState from '~/utilities/useGenericObjectState';\nimport {\n  CreatingInferenceServiceObject,\n  CreatingServingRuntimeObject,\n  InferenceServiceStorageType,\n  ServingRuntimeSize,\n} from '~/pages/modelServing/screens/types';\nimport { ContainerResourceAttributes, DashboardConfig } from '~/types';\nimport { DEFAULT_MODEL_SERVER_SIZES } from '~/pages/modelServing/screens/const';\nimport { useAppContext } from '~/app/AppContext';\nimport { useDeepCompareMemoize } from '~/utilities/useDeepCompareMemoize';\nimport { EMPTY_AWS_SECRET_DATA } from '~/pages/projects/dataConnections/const';\nimport { getDisplayNameFromK8sResource } from '~/pages/projects/utils';\nimport { getDisplayNameFromServingRuntimeTemplate } from '~/pages/modelServing/customServingRuntimes/utils';\nimport { isCpuLimitEqual, isMemoryLimitEqual } from '~/utilities/valueUnits';\n\nexport const getServingRuntimeSizes = (config: DashboardConfig): ServingRuntimeSize[] => {\n  let sizes = config.spec.modelServerSizes || [];\n  if (sizes.length === 0) {\n    sizes = DEFAULT_MODEL_SERVER_SIZES;\n  }\n  return sizes;\n};\n\nexport const isServingRuntimeTokenEnabled = (servingRuntime: ServingRuntimeKind): boolean =>\n  servingRuntime.metadata.annotations?.['enable-auth'] === 'true';\n\nexport const isServingRuntimeRouteEnabled = (servingRuntime: ServingRuntimeKind): boolean =>\n  servingRuntime.metadata.annotations?.['enable-route'] === 'true';\n\nexport const isGpuDisabled = (servingRuntime: ServingRuntimeKind): boolean =>\n  servingRuntime.metadata.annotations?.['opendatahub.io/disable-gpu'] === 'true';\n\nexport const getInferenceServiceFromServingRuntime = (\n  inferenceServices: InferenceServiceKind[],\n  servingRuntime: ServingRuntimeKind,\n): InferenceServiceKind[] =>\n  inferenceServices.filter(\n    (inferenceService) =>\n      inferenceService.spec.predictor.model.runtime === servingRuntime.metadata.name,\n  );\n\nexport const useCreateServingRuntimeObject = (existingData?: {\n  servingRuntime?: ServingRuntimeKind;\n  secrets: SecretKind[];\n}): [\n  data: CreatingServingRuntimeObject,\n  setData: UpdateObjectAtPropAndValue<CreatingServingRuntimeObject>,\n  resetDefaults: () => void,\n  sizes: ServingRuntimeSize[],\n] => {\n  const { dashboardConfig } = useAppContext();\n\n  const sizes = useDeepCompareMemoize(getServingRuntimeSizes(dashboardConfig));\n\n  const createModelState = useGenericObjectState<CreatingServingRuntimeObject>({\n    name: '',\n    servingRuntimeTemplateName: '',\n    numReplicas: 1,\n    modelSize: sizes[0],\n    gpus: 0,\n    externalRoute: false,\n    tokenAuth: false,\n    tokens: [],\n  });\n\n  const [, setCreateData] = createModelState;\n\n  const existingServingRuntimeName = existingData?.servingRuntime\n    ? getDisplayNameFromK8sResource(existingData.servingRuntime)\n    : '';\n\n  const existingServingRuntimeTemplateName = existingData?.servingRuntime\n    ? getDisplayNameFromServingRuntimeTemplate(existingData.servingRuntime)\n    : '';\n\n  const existingNumReplicas = existingData?.servingRuntime?.spec.replicas ?? 1;\n\n  const existingResources =\n    existingData?.servingRuntime?.spec?.containers[0]?.resources || sizes[0].resources;\n\n  const existingGpus =\n    existingData?.servingRuntime?.spec?.containers[0]?.resources?.requests?.[\n      ContainerResourceAttributes.NVIDIA_GPU\n    ] || 0;\n\n  const existingExternalRoute =\n    existingData?.servingRuntime?.metadata.annotations?.['enable-route'] === 'true';\n  const existingTokenAuth =\n    existingData?.servingRuntime?.metadata.annotations?.['enable-auth'] === 'true';\n\n  const existingTokens = useDeepCompareMemoize(\n    (existingData?.secrets || []).map((secret) => ({\n      name: getDisplayNameFromK8sResource(secret) || secret.metadata.name,\n      editName: secret.metadata.name,\n      uuid: secret.metadata.name,\n      error: '',\n    })),\n  );\n\n  React.useEffect(() => {\n    if (existingServingRuntimeName) {\n      setCreateData('name', existingServingRuntimeName);\n      setCreateData('servingRuntimeTemplateName', existingServingRuntimeTemplateName);\n      setCreateData('numReplicas', existingNumReplicas);\n      const size = sizes.find(\n        (size) =>\n          isCpuLimitEqual(size.resources.limits?.cpu, existingResources.limits?.cpu) &&\n          isMemoryLimitEqual(size.resources.limits?.memory, existingResources.limits?.memory),\n      );\n      setCreateData(\n        'modelSize',\n        size || {\n          name: 'Custom',\n          resources: existingResources,\n        },\n      );\n      setCreateData(\n        'gpus',\n        typeof existingGpus == 'string' ? parseInt(existingGpus) : existingGpus,\n      );\n      setCreateData('externalRoute', existingExternalRoute);\n      setCreateData('tokenAuth', existingTokenAuth);\n      setCreateData('tokens', existingTokens);\n    }\n  }, [\n    existingServingRuntimeName,\n    existingServingRuntimeTemplateName,\n    existingNumReplicas,\n    existingResources,\n    existingGpus,\n    existingExternalRoute,\n    existingTokenAuth,\n    existingTokens,\n    setCreateData,\n    sizes,\n  ]);\n  return [...createModelState, sizes];\n};\n\nexport const defaultInferenceService: CreatingInferenceServiceObject = {\n  name: '',\n  project: '',\n  servingRuntimeName: '',\n  storage: {\n    type: InferenceServiceStorageType.EXISTING_STORAGE,\n    path: '',\n    dataConnection: '',\n    awsData: EMPTY_AWS_SECRET_DATA,\n  },\n  format: {\n    name: '',\n  },\n};\n\nexport const useCreateInferenceServiceObject = (\n  existingData?: InferenceServiceKind,\n): [\n  data: CreatingInferenceServiceObject,\n  setData: UpdateObjectAtPropAndValue<CreatingInferenceServiceObject>,\n  resetDefaults: () => void,\n] => {\n  const createInferenceServiceState =\n    useGenericObjectState<CreatingInferenceServiceObject>(defaultInferenceService);\n\n  const [, setCreateData] = createInferenceServiceState;\n\n  const existingName =\n    existingData?.metadata.annotations?.['openshift.io/display-name'] ||\n    existingData?.metadata.name ||\n    '';\n  const existingStorage = existingData?.spec?.predictor.model.storage || undefined;\n  const existingServingRuntime = existingData?.spec?.predictor.model.runtime || '';\n  const existingProject = existingData?.metadata.namespace || '';\n  const existingFormat = existingData?.spec?.predictor.model.modelFormat || undefined;\n\n  React.useEffect(() => {\n    if (existingName) {\n      setCreateData('name', existingName);\n      setCreateData('servingRuntimeName', existingServingRuntime);\n      setCreateData('project', existingProject);\n      setCreateData('storage', {\n        type: InferenceServiceStorageType.EXISTING_STORAGE,\n        path: existingStorage?.path || '',\n        dataConnection: existingStorage?.key || '',\n        awsData: EMPTY_AWS_SECRET_DATA,\n      });\n      setCreateData(\n        'format',\n        existingFormat || {\n          name: '',\n        },\n      );\n    }\n  }, [\n    existingName,\n    existingStorage,\n    existingFormat,\n    existingServingRuntime,\n    existingProject,\n    setCreateData,\n  ]);\n\n  return createInferenceServiceState;\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/screens/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useInferenceServices.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useModelMetricsEnabled.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useModelServingEnabled.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/useServingRuntimes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/modelServing/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookController.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookControllerContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/NotebookLogoutRedirect.tsx",["3426"],[],"import * as React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getNotebook } from '~/services/notebookService';\nimport ApplicationsPage from '~/pages/ApplicationsPage';\nimport useNotification from '~/utilities/useNotification';\nimport useRouteForNotebook from '~/pages/projects/notebook/useRouteForNotebook';\nimport useNamespaces from './useNamespaces';\n\nconst NotebookLogoutRedirect: React.FC = () => {\n  const { namespace, notebookName } = useParams<{ namespace: string; notebookName: string }>();\n  const notification = useNotification();\n  const navigate = useNavigate();\n  const { notebookNamespace } = useNamespaces();\n  const [routeLink, loaded, error] = useRouteForNotebook(notebookName, namespace, true);\n\n  React.useEffect(() => {\n    let cancelled = false;\n    if (namespace && notebookName && namespace === notebookNamespace) {\n      getNotebook(namespace, notebookName)\n        .then((notebook) => {\n          if (cancelled) {\n            return;\n          }\n          if (notebook?.metadata.annotations?.['opendatahub.io/link']) {\n            const location = new URL(notebook.metadata.annotations['opendatahub.io/link']);\n            window.location.href = `${location.origin}/oauth/sign_out`;\n          } else {\n            notification.error(\n              'Error fetching notebook URL.',\n              'Please check the status of your notebook.',\n            );\n            navigate('not-found');\n          }\n        })\n        .catch((e) => {\n          if (cancelled) {\n            return;\n          }\n          /* eslint-disable-next-line no-console */\n          console.error(e);\n        });\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [namespace, notebookName, navigate, notification, notebookNamespace]);\n\n  React.useEffect(() => {\n    let cancelled = false;\n    if (cancelled) {\n      return;\n    }\n    if (namespace && notebookName && namespace !== notebookNamespace) {\n      if (loaded) {\n        if (error) {\n          notification.error(`Error when logging out ${notebookName}`, error.message);\n          navigate(`/projects/${namespace}`);\n        } else if (routeLink) {\n          const location = new URL(routeLink);\n          window.location.href = `${location.origin}/oauth/sign_out`;\n        }\n      }\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [\n    routeLink,\n    loaded,\n    error,\n    notification,\n    namespace,\n    notebookName,\n    navigate,\n    notebookNamespace,\n  ]);\n\n  return (\n    <ApplicationsPage title=\"Logging out...\" description={null} loaded={false} empty={false} />\n  );\n};\n\nexport default NotebookLogoutRedirect;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/SetupCurrentNotebook.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/ValidateNotebookNamespace.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/notebookControllerContextTypes.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/ImpersonateAlert.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdmin.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdminContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookAdminControl.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/NotebookControllerTabs.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/ServerStatus.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/StopAllServersButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/UserTableCellTransform.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/useAdminUsers.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/admin/useCheckForAllowedUsers.ts",["3427"],[],"import * as React from 'react';\nimport { getAllowedUsers } from '~/redux/actions/actions';\nimport useNamespaces from '~/pages/notebookController/useNamespaces';\nimport { AllowedUser } from './types';\n\nconst useCheckForAllowedUsers = (): [\n  allowedUsers: AllowedUser[],\n  loaded: boolean,\n  error: Error | undefined,\n] => {\n  const { notebookNamespace } = useNamespaces();\n  const [allowedUsers, setAllowedUsers] = React.useState<AllowedUser[]>([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [error, setError] = React.useState<Error | undefined>();\n\n  React.useEffect(() => {\n    getAllowedUsers(notebookNamespace)\n      .then((users) => {\n        setAllowedUsers(users);\n        setLoaded(true);\n      })\n      .catch((e) => {\n        setError(new Error(e.response.data.message));\n        setLoaded(false);\n      });\n  }, [notebookNamespace]);\n\n  return [allowedUsers, loaded, error];\n};\n\nexport default useCheckForAllowedUsers;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/BrowserTabPreferenceCheckbox.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/EnvironmentVariablesField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/EnvironmentVariablesRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/GPUSelectField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageTagPopover.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/ImageVersions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookControlPanelRedirect.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServer.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServerDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/NotebookServerRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/SizeSelectField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/SpawnerPage.tsx",["3428","3429"],[],"import * as React from 'react';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  FormSection,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { CUSTOM_VARIABLE, EMPTY_KEY, ENV_VAR_NAME_REGEX } from '~/pages/notebookController/const';\nimport {\n  ImageInfo,\n  ImageTag,\n  VariableRow,\n  ImageTagInfo,\n  ConfigMap,\n  Secret,\n  EnvVarResourceType,\n  NotebookState,\n} from '~/types';\nimport { checkOrder, getDefaultTag, isImageTagBuildValid } from '~/utilities/imageUtils';\nimport { enableNotebook, stopNotebook } from '~/services/notebookService';\nimport {\n  generateEnvVarFileNameFromUsername,\n  verifyResource,\n  useNotebookUserState,\n  classifyEnvVars,\n} from '~/utilities/notebookControllerUtils';\nimport { useAppContext } from '~/app/AppContext';\nimport { useWatchImages } from '~/utilities/useWatchImages';\nimport ApplicationsPage from '~/pages/ApplicationsPage';\nimport useNotification from '~/utilities/useNotification';\nimport { NotebookControllerContext } from '~/pages/notebookController/NotebookControllerContext';\nimport ImpersonateAlert from '~/pages/notebookController/screens/admin/ImpersonateAlert';\nimport useNamespaces from '~/pages/notebookController/useNamespaces';\nimport { fireTrackingEvent } from '~/utilities/segmentIOUtils';\nimport { getEnvConfigMap, getEnvSecret } from '~/services/envService';\nimport GPUSelectField from './GPUSelectField';\nimport SizeSelectField from './SizeSelectField';\nimport useSpawnerNotebookModalState from './useSpawnerNotebookModalState';\nimport BrowserTabPreferenceCheckbox from './BrowserTabPreferenceCheckbox';\nimport EnvironmentVariablesRow from './EnvironmentVariablesRow';\nimport ImageSelector from './ImageSelector';\nimport { usePreferredNotebookSize } from './usePreferredNotebookSize';\nimport StartServerModal from './StartServerModal';\n\nimport '~/pages/notebookController/NotebookController.scss';\n\nconst SpawnerPage: React.FC = () => {\n  const navigate = useNavigate();\n  const notification = useNotification();\n  const { images, loaded, loadError } = useWatchImages();\n  const { buildStatuses } = useAppContext();\n  const { currentUserNotebook, requestNotebookRefresh, impersonatedUsername, setImpersonating } =\n    React.useContext(NotebookControllerContext);\n  const { notebookNamespace: projectName } = useNamespaces();\n  const currentUserState = useNotebookUserState();\n  const username = currentUserState.user;\n  const [createInProgress, setCreateInProgress] = React.useState(false);\n  const { startShown, hideStartShown, refreshNotebookForStart } =\n    useSpawnerNotebookModalState(createInProgress);\n  const [selectedImageTag, setSelectedImageTag] = React.useState<ImageTag>({\n    image: undefined,\n    tag: undefined,\n  });\n  const { selectedSize, setSelectedSize, sizes } = usePreferredNotebookSize();\n  const [selectedGpu, setSelectedGpu] = React.useState('0');\n  const [variableRows, setVariableRows] = React.useState<VariableRow[]>([]);\n  const [submitError, setSubmitError] = React.useState<Error | null>(null);\n\n  const disableSubmit =\n    createInProgress || variableRows.some(({ errors }) => Object.keys(errors).length > 0);\n\n  React.useEffect(() => {\n    const setFirstValidImage = () => {\n      const getDefaultImageTag = () => {\n        let found = false;\n        let i = 0;\n        while (!found && i < images.length) {\n          const image = images[i++];\n          if (image) {\n            const tag = getDefaultTag(buildStatuses, image);\n            if (tag) {\n              setSelectedImageTag({ image, tag });\n              found = true;\n            }\n          }\n        }\n      };\n      if (currentUserState?.lastSelectedImage) {\n        const [imageName, tagName] = [...currentUserState.lastSelectedImage.split(':')];\n        const image = images.find((image) => image.name === imageName);\n        const tag = image?.tags.find((tag) => tag.name === tagName);\n        if (image && tag && isImageTagBuildValid(buildStatuses, image, tag)) {\n          setSelectedImageTag({ image, tag });\n        } else {\n          getDefaultImageTag();\n        }\n      } else {\n        getDefaultImageTag();\n      }\n    };\n    if (images && currentUserState) {\n      setFirstValidImage();\n    }\n  }, [currentUserState, images, buildStatuses]);\n\n  const mapRows = React.useCallback(\n    async (fetchFunc: (namespace: string, name: string) => Promise<ConfigMap | Secret>) => {\n      if (!username) {\n        return [];\n      }\n      let fetchedVariableRows: VariableRow[] = [];\n      const envVarFileName = generateEnvVarFileNameFromUsername(username);\n      const response = await verifyResource<ConfigMap | Secret>(\n        envVarFileName,\n        projectName,\n        fetchFunc,\n      );\n      if (response && response.data) {\n        const isSecret = response.kind === EnvVarResourceType.Secret;\n        fetchedVariableRows = Object.entries(response.data).map(([key, value]) => {\n          const errors = fetchedVariableRows.find((variableRow) =>\n            variableRow.variables.find((variable) => variable.name === key),\n          )\n            ? { [key]: 'That name is already in use. Try a different name.' }\n            : {};\n          return {\n            variableType: CUSTOM_VARIABLE,\n            variables: [\n              {\n                name: key,\n                value: isSecret ? atob(value) : value,\n                type: isSecret ? 'password' : 'text',\n              },\n            ],\n            errors,\n          };\n        });\n      }\n      return fetchedVariableRows;\n    },\n    [username, projectName],\n  );\n\n  React.useEffect(() => {\n    let cancelled = false;\n    const mapEnvironmentVariableRows = async () => {\n      const fetchedVariableRowsConfigMap = await mapRows(getEnvConfigMap);\n      const fetchedVariableRowsSecret = await mapRows(getEnvSecret);\n      if (!cancelled) {\n        setVariableRows([...fetchedVariableRowsConfigMap, ...fetchedVariableRowsSecret]);\n      }\n    };\n    /* eslint-disable-next-line no-console */\n    mapEnvironmentVariableRows().catch((e) => console.error(e));\n    return () => {\n      cancelled = true;\n    };\n  }, [mapRows]);\n\n  const handleImageTagSelection = (image: ImageInfo, tag: ImageTagInfo, checked: boolean) => {\n    if (checked) {\n      setSelectedImageTag({ image, tag });\n    }\n  };\n\n  const renderEnvironmentVariableRows = () => {\n    if (!variableRows?.length) {\n      return null;\n    }\n    return variableRows.map((row, index) => (\n      <EnvironmentVariablesRow\n        key={`environment-variable-row-${index}`}\n        rowIndex={`environment-variable-row-${index}`}\n        categories={[]}\n        variableRow={row}\n        onUpdate={(updatedRow) => onUpdateRow(index, updatedRow)}\n      />\n    ));\n  };\n\n  const onUpdateRow = (index: number, updatedRow?: VariableRow) => {\n    const updatedRows = [...variableRows];\n\n    if (!updatedRow) {\n      updatedRows.splice(index, 1); // remove the whole variable at the index\n      setVariableRows(updatedRows);\n      return;\n    }\n\n    updatedRows[index] = { ...updatedRow };\n    updatedRows[index].errors = {};\n    for (let i = 0; i < updatedRows.length; i++) {\n      if (i !== index) {\n        updatedRow.variables.forEach((variable) => {\n          if (updatedRows[i].variables.find((v) => v.name === variable.name)) {\n            updatedRows[index].errors[variable.name] =\n              'That name is already in use. Try a different name.';\n          }\n        });\n      }\n    }\n    updatedRow.variables.forEach((variable) => {\n      if (!ENV_VAR_NAME_REGEX.test(variable.name)) {\n        updatedRows[index].errors[variable.name] =\n          \"Invalid variable name. The name must consist of alphabetic characters, digits, '_', '-', or '.', and must not start with a digit.\";\n      }\n    });\n    setVariableRows(updatedRows);\n  };\n\n  const addEnvironmentVariableRow = () => {\n    const newRow: VariableRow = {\n      variableType: CUSTOM_VARIABLE,\n      variables: [\n        {\n          name: EMPTY_KEY,\n          type: 'text',\n          value: '',\n        },\n      ],\n      errors: {},\n    };\n    setVariableRows([...variableRows, newRow]);\n  };\n\n  const fireStartServerEvent = () => {\n    fireTrackingEvent('Notebook Server Started', {\n      GPU: parseInt(selectedGpu),\n      lastSelectedSize: selectedSize.name,\n      lastSelectedImage: `${selectedImageTag.image?.name}:${selectedImageTag.tag?.name}`,\n    });\n  };\n\n  const handleNotebookAction = async () => {\n    setSubmitError(null);\n    setCreateInProgress(true);\n    const envVars = classifyEnvVars(variableRows);\n\n    enableNotebook({\n      notebookSizeName: selectedSize.name,\n      imageName: selectedImageTag.image?.name || '',\n      imageTagName: selectedImageTag.tag?.name || '',\n      gpus: parseInt(selectedGpu),\n      envVars: envVars,\n      state: NotebookState.Started,\n      username: impersonatedUsername || undefined,\n    })\n      .then(() => {\n        fireStartServerEvent();\n        refreshNotebookForStart();\n      })\n      .catch((e) => {\n        setSubmitError(e);\n        setCreateInProgress(false);\n        // We had issues spawning the notebook -- try to stop it\n        stopNotebook(impersonatedUsername || undefined).catch(() =>\n          notification.error(\n            'Error creating notebook',\n            'Error spawning notebook and unable to properly stop it',\n          ),\n        );\n      });\n  };\n\n  return (\n    <>\n      <ImpersonateAlert />\n      <ApplicationsPage\n        title=\"Start a notebook server\"\n        description=\"Select options for your notebook server.\"\n        provideChildrenPadding\n        loaded={loaded}\n        loadError={loadError}\n        empty={!images || images.length === 0}\n      >\n        <Form maxWidth=\"1000px\">\n          <FormSection title=\"Notebook image\">\n            <FormGroup fieldId=\"modal-notebook-image\">\n              <Grid sm={12} md={12} lg={12} xl={6} xl2={6} hasGutter>\n                {[...images]\n                  .filter((image) => !image.error)\n                  .sort(checkOrder)\n                  .map((image) => (\n                    <GridItem key={image.name}>\n                      <ImageSelector\n                        data-id=\"image-selector\"\n                        image={image}\n                        selectedImage={selectedImageTag.image}\n                        selectedTag={selectedImageTag.tag}\n                        handleSelection={handleImageTagSelection}\n                      />\n                    </GridItem>\n                  ))}\n              </Grid>\n            </FormGroup>\n          </FormSection>\n          <FormSection title=\"Deployment size\">\n            <SizeSelectField\n              data-id=\"container-size\"\n              value={selectedSize}\n              setValue={(size) => setSelectedSize(size)}\n              sizes={sizes}\n            />\n            <GPUSelectField value={selectedGpu} setValue={(size) => setSelectedGpu(size)} />\n          </FormSection>\n          <FormSection title=\"Environment variables\" className=\"odh-notebook-controller__env-var\">\n            {renderEnvironmentVariableRows()}\n            <Button\n              className=\"odh-notebook-controller__env-var-add-button\"\n              isInline\n              variant=\"link\"\n              onClick={addEnvironmentVariableRow}\n            >\n              <PlusCircleIcon />\n              {` Add more variables`}\n            </Button>\n          </FormSection>\n          <div>\n            {submitError && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"Failed to create the notebook, please try again later\"\n              >\n                {submitError.message}\n              </Alert>\n            )}\n            <ActionGroup>\n              <Button\n                data-id=\"start-server-button\"\n                variant=\"primary\"\n                onClick={() => {\n                  handleNotebookAction().catch((e) => {\n                    setCreateInProgress(false);\n                    hideStartShown();\n                    /* eslint-disable-next-line no-console */\n                    console.error('Error submitting resources around starting a notebook', e);\n                    setSubmitError(e);\n                  });\n                }}\n                isDisabled={disableSubmit}\n              >\n                Start server\n              </Button>\n              <Button\n                data-id=\"cancel-button\"\n                variant=\"secondary\"\n                onClick={() => {\n                  if (impersonatedUsername) {\n                    setImpersonating();\n                  } else {\n                    navigate('/');\n                  }\n                }}\n              >\n                Cancel\n              </Button>\n            </ActionGroup>\n          </div>\n          <BrowserTabPreferenceCheckbox />\n        </Form>\n        <StartServerModal\n          spawnInProgress={startShown}\n          open={createInProgress}\n          onClose={() => {\n            if (currentUserNotebook) {\n              const notebookName = currentUserNotebook.metadata.name;\n              stopNotebook(impersonatedUsername || undefined)\n                .then(() => requestNotebookRefresh())\n                .catch((e) => notification.error(`Error stop notebook ${notebookName}`, e.message));\n            } else {\n              // Shouldn't happen, but if we don't have a notebook, there is nothing to stop\n              hideStartShown();\n            }\n            setCreateInProgress(false);\n          }}\n        />\n      </ApplicationsPage>\n    </>\n  );\n};\n\nexport default SpawnerPage;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/StartServerModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/StopServerModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useBrowserTabPreference.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useGPUSetting.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/usePreferredNotebookSize.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/screens/server/useSpawnerNotebookModalState.ts",["3430"],[],"import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { NotebookControllerContext } from '~/pages/notebookController/NotebookControllerContext';\nimport { FAST_POLL_INTERVAL } from '~/utilities/const';\nimport { NotebookControllerContextProps } from '~/pages/notebookController/notebookControllerContextTypes';\nimport { stopNotebook } from '~/services/notebookService';\nimport useNamespaces from '~/pages/notebookController/useNamespaces';\n\nconst useRefreshNotebookAndCleanup = (startShown: boolean) => {\n  const { requestNotebookRefresh } = React.useContext(NotebookControllerContext);\n\n  const methodRef =\n    React.useRef<NotebookControllerContextProps['requestNotebookRefresh']>(requestNotebookRefresh);\n  methodRef.current = requestNotebookRefresh; // we don't care about the ref, we just want the last one\n\n  React.useEffect(() => {\n    if (startShown) {\n      // Start modal is open, we are relying on events now, dial back the Notebook requests back to normal\n      methodRef.current();\n    }\n  }, [startShown]);\n\n  return React.useCallback(() => {\n    // We are about to spawn, get notebook more frequently in case it was slow updating\n    methodRef.current(FAST_POLL_INTERVAL);\n  }, []);\n};\n\nconst useSpawnerNotebookModalState = (\n  createInProgress: boolean,\n): {\n  startShown: boolean;\n  hideStartShown: () => void;\n  refreshNotebookForStart: () => void;\n} => {\n  const { currentUserNotebook: notebook, currentUserNotebookIsRunning: isNotebookRunning } =\n    React.useContext(NotebookControllerContext);\n  const { notebookNamespace } = useNamespaces();\n  const navigate = useNavigate();\n  const [startShown, setStartShown] = React.useState(false);\n\n  React.useEffect(() => {\n    if (notebook) {\n      if (!isNotebookRunning) {\n        // If we are in the middle of spawning a notebook\n        const notStopped = !notebook.metadata.annotations?.['kubeflow-resource-stopped'];\n        if (notStopped) {\n          // Not stopped means we are spawning (as it is not running)\n          if (!createInProgress) {\n            // We are not creating, make sure the Notebook is stopped\n            stopNotebook().catch(() => {\n              /* eslint-disable-next-line no-console */\n              console.error('Failed to stop notebook on refresh');\n            });\n          } else {\n            setStartShown(true);\n          }\n        } else {\n          // Stopped, no need for a modal (if it is open)\n          setStartShown(false);\n        }\n      } else if (!startShown) {\n        // We are running -- but we want to make sure we only redirect if the modal is not open\n        // Last moments of spawning a notebook & before we send them to JL\n        navigate('/notebookController', { replace: true });\n      }\n    }\n  }, [notebook, navigate, startShown, isNotebookRunning, createInProgress, notebookNamespace]);\n\n  const refreshNotebookForStart = useRefreshNotebookAndCleanup(startShown);\n  const hideStartShown = React.useCallback(() => setStartShown(false), []);\n\n  return { startShown, hideStartShown, refreshNotebookForStart };\n};\n\nexport default useSpawnerNotebookModalState;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useAdminTabState.ts",["3431"],[],"import * as React from 'react';\nimport { useUser } from '~/redux/selectors';\nimport { NotebookControllerTabTypes } from './const';\n\nexport type SetCurrentAdminTab = (newTab: NotebookControllerTabTypes) => void;\n\nconst useAdminTabState = (): [\n  adminTab: NotebookControllerTabTypes,\n  setCurrentAdminTab: SetCurrentAdminTab,\n] => {\n  const [currentTab, setCurrentTab] = React.useState(NotebookControllerTabTypes.SERVER);\n  const { isAdmin } = useUser();\n  const setCurrentAdminTab = React.useCallback(\n    (newTab: NotebookControllerTabTypes) => {\n      if (!isAdmin) {\n        return;\n      } // cannot change tab as a non-admin\n\n      setCurrentTab(newTab);\n    },\n    [isAdmin],\n  );\n\n  return [currentTab, setCurrentAdminTab];\n};\n\nexport default useAdminTabState;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useImpersonationForContext.ts",["3432"],[],"import * as React from 'react';\nimport { Notebook } from '~/types';\nimport { useUser } from '~/redux/selectors';\nimport { NotebookContextStorage, SetNotebookState } from './notebookControllerContextTypes';\n\nexport type SetImpersonating = (\n  impersonateNotebookState?: { notebook: Notebook | null; isRunning: boolean },\n  impersonateUsername?: string,\n) => void;\n\nconst useImpersonationForContext = (\n  setNotebookState: SetNotebookState,\n): [impersonatedUsername: string | null, setImpersating: SetImpersonating] => {\n  const [impersonatedUsername, setImpersonatedUsername] = React.useState<string | null>(null);\n  const { isAdmin } = useUser();\n\n  const setImpersonating = React.useCallback<SetImpersonating>(\n    (impersonateNotebookState, newImpersonatingUsername) => {\n      if (!isAdmin) {\n        return;\n      } // cannot impersonate as a non-admin\n      // if (currentUserNotebook === undefined) return; // we are in a loading state -- don't allow\n\n      if (newImpersonatingUsername && impersonateNotebookState) {\n        // Impersonating as admin\n        if (impersonatedUsername) {\n          // Already impersonating, current state does not matter\n          setNotebookState((prevState) => ({\n            ...prevState,\n            current: impersonateNotebookState.notebook,\n            currentIsRunning: impersonateNotebookState.isRunning,\n          }));\n          return;\n        }\n\n        // Starting impersonation, keep current state for when we reset\n        setNotebookState((prevState) => {\n          const currentState: NotebookContextStorage['former'] = {\n            current: prevState.current,\n            currentIsRunning: prevState.currentIsRunning,\n            currentPodUID: prevState.currentPodUID,\n            requestRefresh: prevState.requestRefresh,\n          };\n          return {\n            ...prevState,\n            current: impersonateNotebookState.notebook,\n            currentIsRunning: impersonateNotebookState.isRunning,\n            former: currentState,\n          };\n        });\n        setImpersonatedUsername(newImpersonatingUsername);\n        return;\n      }\n\n      // Undo impersonation\n      setNotebookState((prevState) => ({\n        ...prevState,\n        ...prevState.former,\n        former: null,\n      }));\n      setImpersonatedUsername(null);\n    },\n    [isAdmin, setNotebookState, impersonatedUsername],\n  );\n\n  return [impersonatedUsername, setImpersonating];\n};\n\nexport default useImpersonationForContext;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/notebookController/useNamespaces.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/GlobalPipelineRunsRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/GlobalPipelinesRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/GlobalPipelineCoreDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/GlobalPipelineCoreLoader.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreApplicationPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreNoProjects.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/PipelineCoreProjectSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalNoPipelines.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalPipelines.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/GlobalPipelinesTableToolbar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/PipelinesPageHeaderActions.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/PipelinesView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/pipelines/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/CreateRunEmptyState.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/GlobalPipelineRuns.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/GlobalPipelineRunsTabs.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/ScheduledRuns.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/TriggeredRuns.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/pipelines/global/runs/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/ProjectDetailsContext.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/ProjectViewRoutes.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/DeleteModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/DeleteModalConnectedAlert.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/EmptyTableCellForAlignment.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/ExistingPVCField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/GenericHorizontalBar.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/IndentSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/NotebookRestartAlert.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/PVSizeField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/PasswordInput.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/SearchField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/components/StorageSizeBars.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/dataConnections/AWSField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/dataConnections/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ConnectedNotebookField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ConnectedNotebookNames.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/DeleteNotebookModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/ListNotebookState.tsx",["3433"],[],"import * as React from 'react';\nimport { Flex, FlexItem, Skeleton } from '@patternfly/react-core';\nimport CanEnableElyraPipelinesCheck from '~/concepts/pipelines/elyra/CanEnableElyraPipelinesCheck';\nimport { NotebookState } from './types';\nimport NotebookRouteLink from './NotebookRouteLink';\nimport NotebookStatusToggle from './NotebookStatusToggle';\n\n/** Keep the size of each notebook state the same so they can stay horizontally aligned */\nconst EQUAL_SIZE_STYLE = { height: 'var(--pf-c-switch--Height)' };\n\ntype ListNotebookStateProps = {\n  notebookStates: NotebookState[];\n  loaded: boolean;\n  error?: Error;\n  show: 'notebook' | 'status';\n  namespace: string;\n};\n\nconst ListNotebookState: React.FC<ListNotebookStateProps> = ({\n  notebookStates,\n  loaded,\n  error,\n  show,\n  namespace,\n}) => {\n  if (!loaded) {\n    return <Skeleton />;\n  }\n\n  if (error) {\n    return <>{error.message}</>;\n  }\n\n  if (notebookStates.length === 0) {\n    return <>-</>;\n  }\n\n  const notebookState = (state: NotebookState, canEnablePipelines: boolean) => {\n    switch (show) {\n      case 'notebook':\n        return <NotebookRouteLink notebook={state.notebook} isRunning={state.isRunning} />;\n      case 'status':\n        return (\n          <NotebookStatusToggle\n            notebookState={state}\n            doListen\n            enablePipelines={canEnablePipelines}\n          />\n        );\n      default:\n        /* eslint-disable-next-line no-console */\n        console.error('Unknown show type', show);\n        return <>-</>;\n    }\n  };\n\n  return (\n    <Flex direction={{ default: 'column' }}>\n      <CanEnableElyraPipelinesCheck namespace={namespace}>\n        {(canEnablePipelines) =>\n          notebookStates.map((state) => (\n            <FlexItem key={state.notebook.metadata.name} style={EQUAL_SIZE_STYLE}>\n              {notebookState(state, canEnablePipelines)}\n            </FlexItem>\n          ))\n        }\n      </CanEnableElyraPipelinesCheck>\n    </Flex>\n  );\n};\n\nexport default ListNotebookState;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookImagePackageDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookRouteLink.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookStatusText.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/NotebookStatusToggle.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StartNotebookModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StopNotebookConfirmModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/StorageNotebookConnections.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/service.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useProjectNotebookStates.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRefreshNotebookUntilStart.ts",["3434"],[],"import * as React from 'react';\nimport { FAST_POLL_INTERVAL } from '~/utilities/const';\nimport { NotebookState } from './types';\n\nconst useRefreshNotebookUntilStart = (\n  notebookState: NotebookState,\n  doListen: boolean,\n): ((listen: boolean) => void) => {\n  const [watchingForNotebook, setWatchingForNotebook] = React.useState(false);\n  const lastNotebookState = React.useRef<NotebookState>(notebookState);\n  lastNotebookState.current = notebookState;\n\n  React.useEffect(() => {\n    let interval;\n    if (watchingForNotebook && doListen) {\n      interval = setInterval(() => {\n        const { isRunning, refresh } = lastNotebookState.current;\n        if (!isRunning) {\n          refresh().catch((e) => {\n            /* eslint-disable-next-line no-console */\n            console.error('Error refreshing, stopping notebook refresh', e);\n            setWatchingForNotebook(false);\n          });\n        } else {\n          setWatchingForNotebook(false);\n        }\n      }, FAST_POLL_INTERVAL);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [watchingForNotebook, doListen]);\n\n  return React.useCallback((listen: boolean) => {\n    setWatchingForNotebook(listen);\n  }, []);\n};\n\nexport default useRefreshNotebookUntilStart;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRelatedNotebooks.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useRouteForNotebook.ts",["3435"],[],"import * as React from 'react';\nimport { getRoute } from '~/api';\nimport { FAST_POLL_INTERVAL } from '~/utilities/const';\n\nconst useRouteForNotebook = (\n  notebookName?: string,\n  projectName?: string,\n  isRunning?: boolean,\n): [routeLink: string | null, loaded: boolean, loadError: Error | null] => {\n  const [route, setRoute] = React.useState<string | null>(null);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | null>(null);\n\n  React.useEffect(() => {\n    let watchHandle;\n    let cancelled = false;\n    const watchRoute = () => {\n      if (cancelled) {\n        return;\n      }\n      if (notebookName && projectName) {\n        getRoute(notebookName, projectName)\n          .then((route) => {\n            if (cancelled) {\n              return;\n            }\n            setRoute(`https://${route.spec.host}/notebook/${projectName}/${notebookName}`);\n            setLoadError(null);\n            setLoaded(true);\n          })\n          .catch((e) => {\n            if (cancelled) {\n              return;\n            }\n            if (!isRunning && e.statusObject?.code === 404) {\n              setLoadError(null);\n            } else {\n              setLoadError(e);\n            }\n            watchHandle = setTimeout(watchRoute, FAST_POLL_INTERVAL);\n          });\n      }\n    };\n    watchRoute();\n    return () => {\n      cancelled = true;\n      clearTimeout(watchHandle);\n    };\n  }, [notebookName, projectName, isRunning]);\n\n  return [route, loaded, loadError];\n};\n\nexport default useRouteForNotebook;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useStopNotebookModalAvailability.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useWatchNotebookEvents.ts",["3436"],[],"import * as React from 'react';\nimport { EventKind } from '~/k8sTypes';\nimport { getNotebookEvents } from '~/api';\nimport { FAST_POLL_INTERVAL } from '~/utilities/const';\n\nexport const useWatchNotebookEvents = (\n  projectName: string,\n  podUid: string,\n  activeFetch: boolean,\n): EventKind[] => {\n  const [notebookEvents, setNoteBookEvents] = React.useState<EventKind[]>([]);\n\n  React.useEffect(() => {\n    let watchHandle;\n    let cancelled = false;\n\n    const clear = () => {\n      cancelled = true;\n      clearTimeout(watchHandle);\n    };\n\n    if (activeFetch) {\n      const watchNotebookEvents = () => {\n        if (projectName && podUid) {\n          getNotebookEvents(projectName, podUid)\n            .then((data: EventKind[]) => {\n              if (cancelled) {\n                return;\n              }\n              setNoteBookEvents(data);\n            })\n            .catch((e) => {\n              /* eslint-disable-next-line no-console */\n              console.error('Error fetching notebook events', e);\n              clear();\n            });\n          watchHandle = setTimeout(watchNotebookEvents, FAST_POLL_INTERVAL);\n        }\n      };\n\n      watchNotebookEvents();\n    }\n    return clear;\n  }, [projectName, podUid, activeFetch]);\n\n  return notebookEvents;\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/useWillNotebooksRestart.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/notebook/utils.ts",["3437"],[],"import { EventKind, NotebookKind } from '~/k8sTypes';\nimport { EventStatus, NotebookStatus } from '~/types';\nimport { ROOT_MOUNT_PATH } from '~/pages/projects/pvc/const';\nimport { useWatchNotebookEvents } from './useWatchNotebookEvents';\n\nexport const hasStopAnnotation = (notebook: NotebookKind): boolean =>\n  !!(\n    notebook.metadata.annotations?.['kubeflow-resource-stopped'] &&\n    notebook.metadata.annotations['kubeflow-resource-stopped'] !== 'odh-notebook-controller-lock'\n  );\n\nexport const getNotebookPVCVolumeNames = (notebook: NotebookKind): { [name: string]: string } =>\n  (notebook.spec.template.spec.volumes || []).reduce((acc, volume) => {\n    if (!volume.persistentVolumeClaim?.claimName) {\n      return acc;\n    }\n\n    return {\n      ...acc,\n      [volume.name]: volume.persistentVolumeClaim.claimName,\n    };\n  }, {});\n\nconst relativeMountPath = (mountPath: string): string =>\n  mountPath.slice(ROOT_MOUNT_PATH.length) || '/';\n\nexport const getNotebookPVCMountPathMap = (\n  notebook?: NotebookKind,\n): { [claimName: string]: string } => {\n  if (!notebook) {\n    return {};\n  }\n\n  const pvcVolumeNames = getNotebookPVCVolumeNames(notebook);\n\n  return notebook.spec.template.spec.containers.reduce(\n    (acc, container) => ({\n      ...acc,\n      ...(container.volumeMounts || []).reduce((acc, volumeMount) => {\n        const claimName = pvcVolumeNames[volumeMount.name];\n        if (!claimName) {\n          return acc;\n        }\n\n        return { ...acc, [claimName]: relativeMountPath(volumeMount.mountPath) };\n      }, {}),\n    }),\n    {},\n  );\n};\n\nexport const getNotebookMountPaths = (notebook?: NotebookKind): string[] => {\n  if (!notebook) {\n    return [];\n  }\n\n  return notebook.spec.template.spec.containers\n    .map(\n      (container) =>\n        container.volumeMounts?.map((volumeMount) => relativeMountPath(volumeMount.mountPath)) ||\n        [],\n    )\n    .flat();\n};\n\nexport const getEventTimestamp = (event: EventKind): string =>\n  event.lastTimestamp || event.eventTime;\n\nconst filterEvents = (\n  allEvents: EventKind[],\n  lastActivity: Date,\n): [filterEvents: EventKind[], thisInstanceEvents: EventKind[], gracePeriod: boolean] => {\n  const thisInstanceEvents = allEvents.filter(\n    (event) => new Date(getEventTimestamp(event)) >= lastActivity,\n  );\n  if (thisInstanceEvents.length === 0) {\n    // Filtered out all of the events, exit early\n    return [[], [], false];\n  }\n\n  let filteredEvents = thisInstanceEvents;\n\n  const now = Date.now();\n  let gracePeriod = false;\n\n  // Ignore the rest of the filter logic if we pass 20 minutes\n  const maxCap = new Date(lastActivity).setMinutes(lastActivity.getMinutes() + 20);\n  if (now <= maxCap) {\n    // Haven't hit the cap yet, filter events for accepted scenarios\n    const infoEvents = filteredEvents.filter((event) => event.type === 'Normal');\n    const idleTime = new Date(lastActivity).setSeconds(lastActivity.getSeconds() + 30);\n    gracePeriod = idleTime - now > 0;\n\n    // Suppress the warnings when we are idling\n    if (gracePeriod) {\n      filteredEvents = infoEvents;\n    }\n\n    // If we are scaling up, we want to focus on that\n    const hasScaleUp = infoEvents.some((event) => event.reason === 'TriggeredScaleUp');\n    if (hasScaleUp) {\n      // Scaling up event is present -- look for issues with it\n      const hasScaleUpIssueIndex = thisInstanceEvents.findIndex(\n        (event) => event.reason === 'NotTriggerScaleUp',\n      );\n      if (hasScaleUpIssueIndex >= 0) {\n        // Has scale up issue, show that\n        filteredEvents = [thisInstanceEvents[hasScaleUpIssueIndex]];\n      } else {\n        // Haven't hit a failure in scale up, show just infos\n        filteredEvents = infoEvents;\n      }\n    }\n  }\n\n  return [filteredEvents, thisInstanceEvents, gracePeriod];\n};\n\nexport const useNotebookStatus = (\n  notebook: NotebookKind,\n  podUid: string,\n  spawnInProgress: boolean,\n): [status: NotebookStatus | null, events: EventKind[]] => {\n  const events = useWatchNotebookEvents(notebook.metadata.namespace, podUid, spawnInProgress);\n\n  const annotationTime = notebook?.metadata.annotations?.['notebooks.kubeflow.org/last-activity'];\n  const lastActivity = annotationTime ? new Date(annotationTime) : null;\n\n  if (!lastActivity) {\n    // Notebook not started, we don't have a filter time, ignore\n    return [null, []];\n  }\n\n  const [filteredEvents, thisInstanceEvents, gracePeriod] = filterEvents(events, lastActivity);\n  if (filteredEvents.length === 0) {\n    return [null, thisInstanceEvents];\n  }\n\n  // Parse the last event\n  let percentile = 0;\n  let status: EventStatus = EventStatus.IN_PROGRESS;\n  const lastItem = filteredEvents[filteredEvents.length - 1];\n  let currentEvent = '';\n  if (lastItem.message.includes('oauth-proxy')) {\n    switch (lastItem.reason) {\n      case 'Pulling': {\n        currentEvent = 'Pulling oauth proxy';\n        percentile = 72;\n        break;\n      }\n      case 'Pulled': {\n        currentEvent = 'Oauth proxy pulled';\n        percentile = 80;\n        break;\n      }\n      case 'Created': {\n        currentEvent = 'Oauth proxy container created';\n        percentile = 88;\n        break;\n      }\n      case 'Started': {\n        currentEvent = 'Oauth proxy container started';\n        percentile = 96;\n        break;\n      }\n      case 'Killing': {\n        currentEvent = 'Stopping container oauth-proxy';\n        status = EventStatus.WARNING;\n        break;\n      }\n      default: {\n        if (lastItem.type === 'Warning') {\n          currentEvent = 'Issue creating oauth proxy container';\n          status = EventStatus.WARNING;\n        }\n      }\n    }\n  } else {\n    switch (lastItem.reason) {\n      case 'SuccessfulCreate': {\n        currentEvent = 'Pod created';\n        percentile = 8;\n        break;\n      }\n      case 'Scheduled': {\n        currentEvent = 'Pod assigned';\n        percentile = 16;\n        break;\n      }\n      case 'SuccessfulAttachVolume': {\n        currentEvent = 'PVC attached';\n        percentile = 24;\n        break;\n      }\n      case 'AddedInterface': {\n        currentEvent = 'Interface added';\n        percentile = 32;\n        break;\n      }\n      case 'Pulling': {\n        currentEvent = 'Pulling notebook image';\n        percentile = 40;\n        break;\n      }\n      case 'Pulled': {\n        currentEvent = 'Notebook image pulled';\n        percentile = 48;\n        break;\n      }\n      case 'Created': {\n        currentEvent = 'Notebook container created';\n        percentile = 56;\n        break;\n      }\n      case 'Started': {\n        currentEvent = 'Notebook container started';\n        percentile = 64;\n        break;\n      }\n      case 'NotTriggerScaleUp':\n        currentEvent = 'Failed to scale-up';\n        status = EventStatus.ERROR;\n        break;\n      case 'TriggeredScaleUp': {\n        currentEvent = 'Pod triggered scale-up';\n        status = EventStatus.INFO;\n        break;\n      }\n      default: {\n        if (!gracePeriod && lastItem.reason === 'FailedScheduling') {\n          currentEvent = 'Insufficient resources to start';\n          status = EventStatus.ERROR;\n        } else if (lastItem.type === 'Warning') {\n          currentEvent = 'Issue creating notebook container';\n          status = EventStatus.WARNING;\n        }\n      }\n    }\n  }\n\n  return [\n    {\n      percentile,\n      currentEvent,\n      currentEventReason: lastItem.reason,\n      currentEventDescription: lastItem.message,\n      currentStatus: status,\n    },\n    thisInstanceEvents,\n  ];\n};\n\nexport const getEventFullMessage = (event: EventKind): string =>\n  `${getEventTimestamp(event)} [${event.type}] ${event.message}`;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharing.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingNameInput.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingPermissionSelection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableRowAdd.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/ProjectSharingTableSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/useGroups.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/useProjectSharing.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/projectSharing/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/AddNotebookStorage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/DeletePVCModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/MountPathField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/useNotebookPVCItems.ts",["3438"],[],"import * as React from 'react';\nimport { NotebookKind, PersistentVolumeClaimKind } from '~/k8sTypes';\nimport { useDeepCompareMemoize } from '~/utilities/useDeepCompareMemoize';\nimport { ProjectDetailsContext } from '~/pages/projects/ProjectDetailsContext';\nimport { getNotebookPVCNames } from './utils';\n\nconst useNotebookPVCItems = (\n  notebook: NotebookKind,\n): [pvcs: PersistentVolumeClaimKind[], loaded: boolean, loadError?: Error] => {\n  const {\n    pvcs: { data: allPvcs, loaded, error },\n  } = React.useContext(ProjectDetailsContext);\n\n  const pvcNames = useDeepCompareMemoize(getNotebookPVCNames(notebook));\n\n  const pvcs = React.useMemo(\n    () => allPvcs.filter((pvc) => pvcNames.includes(pvc.metadata.name)),\n    [allPvcs, pvcNames],\n  );\n\n  return [pvcs, loaded, error];\n};\n\nexport default useNotebookPVCItems;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/pvc/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/DetailsSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/EmptyDetailsList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/ProjectDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/ProjectDetailsComponents.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DataConnectionsTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/DeleteDataConnectionModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/ManageDataConnectionModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/connectionRenderers.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/useDataConnections.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/useSelectedNotebooks.ts",["3439"],[],"import * as React from 'react';\nimport { NotebookKind } from '~/k8sTypes';\nimport { useDeepCompareMemoize } from '~/utilities/useDeepCompareMemoize';\nimport useRelatedNotebooks, {\n  ConnectedNotebookContext,\n} from '~/pages/projects/notebook/useRelatedNotebooks';\nimport { DataConnection } from '~/pages/projects/types';\nimport { getDataConnectionResourceName } from './utils';\n\nconst useSelectedNotebooks = (\n  existingData?: DataConnection,\n): [\n  loaded: boolean,\n  selections: string[],\n  setSelections: (data: string[]) => void,\n  allSelections: NotebookKind[],\n  connectedNames: string[],\n] => {\n  const [selectedNotebooks, setSelectedNotebooks] = React.useState<string[]>([]);\n\n  const resourceName = existingData ? getDataConnectionResourceName(existingData) : '';\n\n  const { notebooks: connectedNotebooks, loaded } = useRelatedNotebooks(\n    ConnectedNotebookContext.EXISTING_DATA_CONNECTION,\n    resourceName,\n  );\n  const connectedNotebookNames = useDeepCompareMemoize(\n    connectedNotebooks.map((notebook) => notebook.metadata.name),\n  );\n  const { notebooks: nonConnectedNotebooks } = useRelatedNotebooks(\n    ConnectedNotebookContext.POSSIBLE_DATA_CONNECTION,\n    resourceName,\n  );\n\n  const allAvailableNotebooks = React.useMemo(\n    () => [...connectedNotebooks, ...nonConnectedNotebooks],\n    [connectedNotebooks, nonConnectedNotebooks],\n  );\n\n  React.useEffect(() => {\n    setSelectedNotebooks(connectedNotebookNames);\n  }, [connectedNotebookNames]);\n\n  return [\n    loaded,\n    selectedNotebooks,\n    setSelectedNotebooks,\n    allAvailableNotebooks,\n    connectedNotebookNames,\n  ];\n};\n\nexport default useSelectedNotebooks;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/data-connections/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookSizeDetails.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookStorageBars.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/NotebookTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookDeploymentSize.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookGPUNumber.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookImage.ts",["3440"],[],"import { NotebookKind } from '~/k8sTypes';\nimport {\n  getImageStreamDisplayName,\n  getImageVersionDependencies,\n  getRelatedVersionDescription,\n} from '~/pages/projects/screens/spawner/spawnerUtils';\nimport { ImageVersionDependencyType } from '~/pages/projects/screens/spawner/types';\nimport useNotebookImageData from './useNotebookImageData';\n\nexport type NotebookImage = {\n  imageName: string;\n  tagSoftware?: string;\n  dependencies: ImageVersionDependencyType[];\n};\n\nconst useNotebookImage = (\n  notebook: NotebookKind,\n): [notebookImage: NotebookImage | null, loaded: boolean] => {\n  const [imageData, loaded] = useNotebookImageData(notebook);\n\n  if (!imageData) {\n    return [null, loaded];\n  }\n\n  const { imageStream, imageVersion } = imageData;\n\n  return [\n    {\n      imageName: getImageStreamDisplayName(imageStream),\n      tagSoftware: getRelatedVersionDescription(imageStream),\n      dependencies: getImageVersionDependencies(imageVersion, false),\n    },\n    loaded,\n  ];\n};\n\nexport default useNotebookImage;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/notebooks/useNotebookImageData.ts",["3441"],[],"import * as React from 'react';\nimport { ImageStreamKind, ImageStreamSpecTagType, NotebookKind } from '~/k8sTypes';\nimport useNamespaces from '~/pages/notebookController/useNamespaces';\nimport useImageStreams from '~/pages/projects/screens/spawner/useImageStreams';\nimport { NotebookContainer } from '~/types';\n\nconst useNotebookImageData = (\n  notebook?: NotebookKind,\n): [\n  data: { imageStream: ImageStreamKind; imageVersion: ImageStreamSpecTagType } | null,\n  loaded: boolean,\n] => {\n  const { dashboardNamespace } = useNamespaces();\n  const [images, loaded] = useImageStreams(dashboardNamespace);\n\n  return React.useMemo(() => {\n    if (!notebook) {\n      return [null, false];\n    }\n\n    if (!loaded) {\n      return [null, false];\n    }\n\n    const container: NotebookContainer | undefined = notebook.spec.template.spec.containers.find(\n      (container) => container.name === notebook.metadata.name,\n    );\n    const imageTag = container?.image.split('/').at(-1)?.split(':');\n\n    if (!imageTag || imageTag.length < 2 || !container) {\n      return [null, true];\n    }\n\n    const [imageName, versionName] = imageTag;\n    const imageStream = images.find((image) => image.metadata.name === imageName);\n\n    if (!imageStream) {\n      return [null, true];\n    }\n\n    const versions = imageStream.spec.tags || [];\n    const imageVersion = versions.find((version) => version.name === versionName);\n\n    if (!imageVersion) {\n      return [null, true];\n    }\n\n    return [{ imageStream, imageVersion }, loaded];\n  }, [images, loaded, notebook]);\n};\n\nexport default useNotebookImageData;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/PipelinesList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/PipelinesSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/pipelines/ProjectPipelineBreadcrumbPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/ExistingConnectedNotebooks.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/ManageStorageModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageList.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageTable.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/StorageWarningStatus.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/data.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useIsRootVolume.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useProjectPvcs.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/useStorageStatusAlert.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/storage/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/detail/useCheckLogoutParams.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/DeleteProjectModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/EmptyProjects.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/LaunchJupyterButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ManageProjectModal.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/NewProjectButton.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectLink.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectListView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectTableRow.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/ProjectView.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/tableData.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/projects/useProjectTableRowItems.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/EditSpawnerPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/SpawnerFooter.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/SpawnerPage.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/DataConnectionField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/ExistingDataConnectionField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/dataConnection/useNotebookDataConnection.ts",["3442"],[],"import * as React from 'react';\nimport { NotebookKind } from '~/k8sTypes';\nimport { DataConnection, DataConnectionData } from '~/pages/projects/types';\n\nexport const getNotebookDataConnection = (\n  notebook?: NotebookKind,\n  dataConnections?: DataConnection[],\n) => {\n  const envFromList = notebook?.spec.template.spec.containers[0].envFrom || [];\n  const notebookSecrets = envFromList.filter((envFrom) => envFrom.secretRef);\n  const notebookDataConnection = dataConnections?.find((connection) =>\n    notebookSecrets.some((secret) => connection.data.metadata.name === secret.secretRef?.name),\n  );\n  return notebookDataConnection;\n};\n\nexport const useNotebookDataConnection = (\n  notebook?: NotebookKind,\n  dataConnections: DataConnection[] = [],\n): [\n  dataConnection: DataConnectionData,\n  setDataConnection: (connection: DataConnectionData) => void,\n] => {\n  const [dataConnection, setDataConnection] = React.useState<DataConnectionData>({\n    type: 'creating',\n    enabled: false,\n  });\n\n  React.useEffect(() => {\n    if (notebook) {\n      // find data connection from env list\n      const notebookDataConnectionSecret = getNotebookDataConnection(notebook, dataConnections)\n        ?.data.metadata.name;\n\n      if (notebookDataConnectionSecret) {\n        setDataConnection({\n          type: 'existing',\n          enabled: true,\n          existing: {\n            secretRef: {\n              name: notebookDataConnectionSecret,\n            },\n          },\n        });\n      }\n    }\n  }, [notebook, dataConnections]);\n\n  return [dataConnection, setDataConnection];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/deploymentSize/ContainerSizeSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvConfigMap.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvDataTypeField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvSecret.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvTypeSelectField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvTypeSwitch.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvUploadField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/EnvironmentVariables.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/GenericKeyValuePairField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/useNotebookEnvVariables.tsx",["3443"],[],"import * as React from 'react';\nimport { DATA_CONNECTION_PREFIX, getConfigMap, getSecret } from '~/api';\nimport { ConfigMapKind, NotebookKind, SecretKind } from '~/k8sTypes';\nimport { EnvVarResourceType } from '~/types';\nimport {\n  ConfigMapCategory,\n  EnvironmentVariableType,\n  EnvVariable,\n  SecretCategory,\n} from '~/pages/projects/types';\n\nexport const fetchNotebookEnvVariables = (notebook: NotebookKind): Promise<EnvVariable[]> => {\n  const envFromList = notebook.spec.template.spec.containers[0].envFrom || [];\n  return Promise.all(\n    envFromList\n      .map((envFrom) => {\n        if (envFrom.configMapRef) {\n          return getConfigMap(notebook.metadata.namespace, envFrom.configMapRef.name);\n        } else if (envFrom.secretRef) {\n          return getSecret(notebook.metadata.namespace, envFrom.secretRef.name);\n        }\n        return Promise.resolve(undefined);\n      })\n      .filter((v): v is Promise<SecretKind | ConfigMapKind> => !!v),\n  ).then((results) =>\n    results.reduce<EnvVariable[]>((acc, resource) => {\n      const data = resource.data || [];\n      let envVar: EnvVariable;\n      if (resource.kind === EnvVarResourceType.ConfigMap) {\n        envVar = {\n          type: EnvironmentVariableType.CONFIG_MAP,\n          existingName: resource.metadata.name,\n          values: {\n            category: ConfigMapCategory.GENERIC,\n            data: Object.keys(data).map((key) => ({ key, value: data[key] })),\n          },\n        };\n      } else if (\n        resource.kind === EnvVarResourceType.Secret &&\n        !resource.metadata.name.startsWith(DATA_CONNECTION_PREFIX)\n      ) {\n        envVar = {\n          type: EnvironmentVariableType.SECRET,\n          existingName: resource.metadata.name,\n          values: {\n            category: SecretCategory.GENERIC,\n            data: Object.keys(data).map((key) => ({ key, value: atob(data[key]) })),\n          },\n        };\n      } else {\n        return acc;\n      }\n      return [...acc, envVar];\n    }, []),\n  );\n};\n\nexport const useNotebookEnvVariables = (\n  notebook?: NotebookKind,\n): [envVariables: EnvVariable[], setEnvVariables: (envVars: EnvVariable[]) => void] => {\n  const [envVariables, setEnvVariables] = React.useState<EnvVariable[]>([]);\n\n  React.useEffect(() => {\n    if (notebook) {\n      fetchNotebookEnvVariables(notebook)\n        .then((envVars) => setEnvVariables(envVars))\n        /* eslint-disable-next-line no-console */\n        .catch((e) => console.error('Reading environment variables failed: ', e));\n    }\n  }, [notebook]);\n\n  return [envVariables, setEnvVariables];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/environmentVariables/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageSelectorField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageStreamPopover.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageStreamSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageVersionSelector.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/imageSelector/ImageVersionTooltip.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/service.ts",["3444"],[],"import * as _ from 'lodash';\nimport {\n  assembleConfigMap,\n  assemblePvc,\n  assembleSecret,\n  createConfigMap,\n  createPvc,\n  createSecret,\n  deleteConfigMap,\n  deleteSecret,\n  replaceConfigMap,\n  replaceSecret,\n} from '~/api';\nimport { Volume, VolumeMount } from '~/types';\nimport {\n  ConfigMapCategory,\n  DataConnection,\n  DataConnectionData,\n  EnvironmentFromVariable,\n  EnvVariable,\n  SecretCategory,\n  StorageData,\n  StorageType,\n} from '~/pages/projects/types';\nimport { ROOT_MOUNT_PATH } from '~/pages/projects/pvc/const';\nimport { ConfigMapKind, K8sStatus, NotebookKind, SecretKind } from '~/k8sTypes';\nimport { getVolumesByStorageData } from './spawnerUtils';\nimport { fetchNotebookEnvVariables } from './environmentVariables/useNotebookEnvVariables';\n\nexport const createPvcDataForNotebook = async (\n  projectName: string,\n  storageData: StorageData,\n): Promise<{ volumes: Volume[]; volumeMounts: VolumeMount[] }> => {\n  const {\n    storageType,\n    creating: {\n      nameDesc: { name: pvcName, description: pvcDescription },\n      size,\n    },\n  } = storageData;\n\n  const { volumes, volumeMounts } = getVolumesByStorageData(storageData);\n\n  if (storageType === StorageType.NEW_PVC) {\n    const pvcData = assemblePvc(pvcName, projectName, pvcDescription, size);\n    const pvc = await createPvc(pvcData);\n    const newPvcName = pvc.metadata.name;\n    volumes.push({ name: newPvcName, persistentVolumeClaim: { claimName: newPvcName } });\n    volumeMounts.push({ mountPath: ROOT_MOUNT_PATH, name: newPvcName });\n  }\n  return { volumes, volumeMounts };\n};\n\nexport const replaceRootVolumesForNotebook = async (\n  projectName: string,\n  notebook: NotebookKind,\n  storageData: StorageData,\n): Promise<{ volumes: Volume[]; volumeMounts: VolumeMount[] }> => {\n  const {\n    storageType,\n    creating: {\n      nameDesc: { name: creatingName, description },\n      size,\n    },\n    existing: { storage: existingName },\n  } = storageData;\n\n  const oldVolumes = notebook.spec.template.spec.volumes || [];\n  const oldVolumeMounts = notebook.spec.template.spec.containers[0].volumeMounts || [];\n\n  let replacedVolume: Volume;\n  let replacedVolumeMount: VolumeMount;\n\n  if (storageType === StorageType.EXISTING_PVC) {\n    replacedVolume = {\n      name: existingName,\n      persistentVolumeClaim: { claimName: existingName },\n    };\n    replacedVolumeMount = { name: existingName, mountPath: ROOT_MOUNT_PATH };\n  } else {\n    const pvcData = assemblePvc(creatingName, projectName, description, size);\n    const pvc = await createPvc(pvcData);\n    const newPvcName = pvc.metadata.name;\n    replacedVolume = { name: newPvcName, persistentVolumeClaim: { claimName: newPvcName } };\n    replacedVolumeMount = { mountPath: ROOT_MOUNT_PATH, name: newPvcName };\n  }\n\n  const rootVolumeMount = oldVolumeMounts.find(\n    (volumeMount) => volumeMount.mountPath === ROOT_MOUNT_PATH,\n  );\n\n  // if no root, add the replaced one as the root\n  if (!rootVolumeMount) {\n    return {\n      volumes: [...oldVolumes, replacedVolume],\n      volumeMounts: [...oldVolumeMounts, replacedVolumeMount],\n    };\n  }\n\n  const volumes = oldVolumes.map((volume) =>\n    volume.name === rootVolumeMount.name ? replacedVolume : volume,\n  );\n  const volumeMounts = oldVolumeMounts.map((volumeMount) =>\n    volumeMount.name === rootVolumeMount.name ? replacedVolumeMount : volumeMount,\n  );\n\n  return { volumes, volumeMounts };\n};\n\nconst getPromisesForConfigMapsAndSecrets = (\n  projectName: string,\n  envVariables: EnvVariable[],\n  type: 'create' | 'update',\n): Promise<SecretKind | ConfigMapKind>[] =>\n  envVariables\n    .map<Promise<SecretKind | ConfigMapKind> | null>((envVar) => {\n      if (!envVar.values) {\n        return null;\n      }\n\n      const dataAsRecord = envVar.values.data.reduce<Record<string, string>>(\n        (acc, { key, value }) => ({ ...acc, [key]: value }),\n        {},\n      );\n\n      switch (envVar.values.category) {\n        case SecretCategory.GENERIC:\n        case SecretCategory.UPLOAD:\n          return type === 'create'\n            ? createSecret(assembleSecret(projectName, dataAsRecord))\n            : replaceSecret(\n                assembleSecret(projectName, dataAsRecord, 'generic', envVar.existingName),\n              );\n        case SecretCategory.AWS:\n          return type === 'create'\n            ? createSecret(assembleSecret(projectName, dataAsRecord, 'aws'))\n            : replaceSecret(assembleSecret(projectName, dataAsRecord, 'aws', envVar.existingName));\n        case ConfigMapCategory.GENERIC:\n        case ConfigMapCategory.UPLOAD:\n          return type === 'create'\n            ? createConfigMap(assembleConfigMap(projectName, dataAsRecord))\n            : replaceConfigMap(assembleConfigMap(projectName, dataAsRecord, envVar.existingName));\n        default:\n          return null;\n      }\n    })\n    .filter((v): v is Promise<SecretKind | ConfigMapKind> => !!v);\n\nconst getEnvFromList = (\n  resources: (ConfigMapKind | SecretKind)[],\n  initialList: EnvironmentFromVariable[],\n): EnvironmentFromVariable[] =>\n  resources.reduce<EnvironmentFromVariable[]>((acc, resource) => {\n    let envFrom;\n    if (resource.kind === 'Secret') {\n      envFrom = {\n        secretRef: {\n          name: resource.metadata.name,\n        },\n      };\n    } else if (resource.kind === 'ConfigMap') {\n      envFrom = {\n        configMapRef: {\n          name: resource.metadata.name,\n        },\n      };\n    } else {\n      return acc;\n    }\n    return [...acc, envFrom];\n  }, initialList);\n\nexport const createConfigMapsAndSecretsForNotebook = async (\n  projectName: string,\n  envVariables: EnvVariable[],\n): Promise<EnvironmentFromVariable[]> => {\n  const creatingPromises = getPromisesForConfigMapsAndSecrets(projectName, envVariables, 'create');\n\n  return Promise.all(creatingPromises)\n    .then((results: (ConfigMapKind | SecretKind)[]) => getEnvFromList(results, []))\n    .catch((e) => {\n      /* eslint-disable-next-line no-console */\n      console.error('Creating environment variables failed: ', e);\n      throw e;\n    });\n};\n\nexport const updateConfigMapsAndSecretsForNotebook = async (\n  projectName: string,\n  notebook: NotebookKind,\n  envVariables: EnvVariable[],\n  dataConnection?: DataConnectionData,\n  existingDataConnection?: DataConnection,\n): Promise<EnvironmentFromVariable[]> => {\n  const existingEnvVars = await fetchNotebookEnvVariables(notebook);\n  const newDataConnection =\n    dataConnection?.enabled && dataConnection.type === 'creating' && dataConnection.creating\n      ? dataConnection.creating\n      : undefined;\n  const replaceDataConnection =\n    dataConnection?.enabled &&\n    dataConnection.type === 'existing' &&\n    dataConnection.existing?.secretRef.name !== existingDataConnection?.data.metadata.name\n      ? dataConnection.existing\n      : undefined;\n\n  const removeDataConnections =\n    existingDataConnection &&\n    (replaceDataConnection || newDataConnection || !dataConnection?.enabled)\n      ? [existingDataConnection.data.metadata.name]\n      : [];\n\n  const [oldResources, newResources] = _.partition(envVariables, (envVar) => envVar.existingName);\n  const currentNames = oldResources\n    .map((envVar) => envVar.existingName)\n    .filter((v): v is string => !!v);\n  const removeResources = existingEnvVars.filter(\n    (envVar) => envVar.existingName && !currentNames.includes(envVar.existingName),\n  );\n\n  const [typeChangeResources, updateResources] = _.partition(oldResources, (envVar) =>\n    existingEnvVars.find(\n      (existingEnvVar) =>\n        existingEnvVar.existingName === envVar.existingName &&\n        existingEnvVar.values?.category !== envVar.values?.category,\n    ),\n  );\n\n  const deleteResources = [...removeResources, ...typeChangeResources];\n  // will only delete generic files here when updating because we only map them\n  const deletingPromises = deleteResources\n    .map((envVar) => {\n      if (!envVar.existingName) {\n        return null;\n      }\n      switch (envVar.values?.category) {\n        case SecretCategory.GENERIC:\n          return deleteSecret(projectName, envVar.existingName);\n        case ConfigMapCategory.GENERIC:\n          return deleteConfigMap(projectName, envVar.existingName);\n        default:\n          return null;\n      }\n    })\n    .filter((v): v is Promise<K8sStatus> => !!v);\n  const creatingPromises = getPromisesForConfigMapsAndSecrets(\n    projectName,\n    [...newResources, ...typeChangeResources, ...(newDataConnection ? [newDataConnection] : [])],\n    'create',\n  );\n\n  const updatingPromises = getPromisesForConfigMapsAndSecrets(\n    projectName,\n    updateResources,\n    'update',\n  );\n\n  const [created] = await Promise.all([\n    Promise.all(creatingPromises),\n    Promise.all(deletingPromises),\n    Promise.all(updatingPromises),\n  ]);\n\n  const deletingNames = deleteResources.map((resource) => resource.existingName || '');\n  deletingNames.push(...removeDataConnections);\n\n  const envFromList = notebook.spec.template.spec.containers[0].envFrom || [];\n\n  return getEnvFromList(created, [\n    ...envFromList,\n    ...(replaceDataConnection ? [replaceDataConnection] : []),\n  ]).filter(\n    (envFrom) =>\n      !(envFrom.secretRef?.name && deletingNames.includes(envFrom.secretRef?.name)) &&\n      !(envFrom.configMapRef?.name && deletingNames.includes(envFrom.configMapRef?.name)),\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/spawnerUtils.ts",["3445"],[],"import * as React from 'react';\nimport compareVersions from 'compare-versions';\nimport { NotebookSize, Volume, VolumeMount } from '~/types';\nimport { BuildKind, ImageStreamKind, ImageStreamSpecTagType, NotebookKind } from '~/k8sTypes';\nimport {\n  ConfigMapCategory,\n  DataConnectionData,\n  EnvVariable,\n  EnvVariableDataEntry,\n  SecretCategory,\n  StartNotebookData,\n  StorageData,\n  StorageType,\n} from '~/pages/projects/types';\nimport { ROOT_MOUNT_PATH } from '~/pages/projects/pvc/const';\nimport { AWS_FIELDS } from '~/pages/projects/dataConnections/const';\nimport {\n  BuildStatus,\n  ImageStreamSelectOptionObjectType,\n  ImageVersionDependencyType,\n  ImageVersionSelectOptionObjectType,\n} from './types';\nimport { FAILED_PHASES, PENDING_PHASES, IMAGE_ANNOTATIONS } from './const';\n\n/******************* Common utils *******************/\nexport const useMergeDefaultPVCName = (\n  storageData: StorageData,\n  defaultPVCName: string,\n): StorageData => {\n  const modifiedRef = React.useRef(false);\n\n  if (modifiedRef.current || storageData.creating.nameDesc.name) {\n    modifiedRef.current = true;\n    return storageData;\n  }\n\n  return {\n    ...storageData,\n    creating: {\n      ...storageData.creating,\n      nameDesc: {\n        ...storageData.creating.nameDesc,\n        name: storageData.creating.nameDesc.name || defaultPVCName,\n      },\n    },\n  };\n};\n\nexport const getVersion = (version?: string, prefix?: string): string => {\n  if (!version) {\n    return '';\n  }\n  const versionString =\n    version.startsWith('v') || version.startsWith('V') ? version.slice(1) : version;\n\n  return `${prefix ? prefix : ''}${versionString}`;\n};\n\nexport const getNameVersionString = (software: ImageVersionDependencyType): string =>\n  `${software.name} ${getVersion(software.version, 'v')}`;\n\n/******************* PF Select related utils *******************/\n/**\n * Create object for PF Select component to use\n * `toString` decides the text shown for the select option\n */\nexport const getImageStreamSelectOptionObject = (\n  imageStream: ImageStreamKind,\n): ImageStreamSelectOptionObjectType => ({\n  imageStream,\n  toString: () => getImageStreamDisplayName(imageStream),\n});\nexport const getImageVersionSelectOptionObject = (\n  imageStream: ImageStreamKind,\n  imageVersion: ImageStreamSpecTagType,\n): ImageVersionSelectOptionObjectType => ({\n  imageVersion,\n  toString: () =>\n    `${imageVersion.name}${checkVersionRecommended(imageVersion) ? ' (Recommended)' : ''}`,\n});\nexport const isImageStreamSelectOptionObject = (\n  object: unknown,\n): object is ImageStreamSelectOptionObjectType =>\n  (object as ImageStreamSelectOptionObjectType).imageStream !== undefined;\nexport const isImageVersionSelectOptionObject = (\n  object: unknown,\n): object is ImageVersionSelectOptionObjectType =>\n  (object as ImageVersionSelectOptionObjectType).imageVersion !== undefined;\n\n/******************* Compare utils for sorting *******************/\nconst getBuildNumber = (build: BuildKind): number => {\n  const buildNumber = build.metadata.annotations?.['openshift.io/build.number'] || '-1';\n  return parseInt(buildNumber, 10);\n};\n\nexport const compareBuilds = (b1: BuildKind, b2: BuildKind): number => {\n  const b1Pending = PENDING_PHASES.includes(b1.status.phase);\n  const b2Pending = PENDING_PHASES.includes(b2.status.phase);\n\n  if (b1Pending && !b2Pending) {\n    return -1;\n  }\n  if (b2Pending && !b1Pending) {\n    return 1;\n  }\n  return getBuildNumber(b1) - getBuildNumber(b2);\n};\n\nexport const compareTagVersions = (\n  a: ImageStreamSpecTagType,\n  b: ImageStreamSpecTagType,\n): number => {\n  // Recommended tags should be first\n  if (a.annotations?.[IMAGE_ANNOTATIONS.RECOMMENDED]) {\n    return -1;\n  } else if (b.annotations?.[IMAGE_ANNOTATIONS.RECOMMENDED]) {\n    return 1;\n  }\n  if (compareVersions.validate(a.name) && compareVersions.validate(b.name)) {\n    return compareVersions(b.name, a.name);\n  }\n  return b.name.localeCompare(a.name);\n};\n\nexport const compareImageVersionOrder = (\n  a: ImageStreamSpecTagType,\n  b: ImageStreamSpecTagType,\n): number => compareTagVersions(a, b);\n\nexport const compareImageStreamOrder = (a: ImageStreamKind, b: ImageStreamKind): number =>\n  getImageSteamOrder(a) - getImageSteamOrder(b);\n\n/******************* ImageStream and ImageVersion utils *******************/\nexport const getImageStreamDisplayName = (imageStream: ImageStreamKind): string =>\n  imageStream.metadata.annotations?.[IMAGE_ANNOTATIONS.DISP_NAME] || imageStream.metadata.name;\n\nexport const getImageStreamDescription = (imageStream: ImageStreamKind): string =>\n  imageStream.metadata.annotations?.[IMAGE_ANNOTATIONS.DESC] || '';\n\nexport const getImageSteamOrder = (imageStream: ImageStreamKind): number =>\n  parseInt(imageStream.metadata.annotations?.[IMAGE_ANNOTATIONS.IMAGE_ORDER] || '100');\n\n/**\n * Parse annotation software field or dependencies field from long string to array\n */\nexport const getImageVersionDependencies = (\n  imageVersion: ImageStreamSpecTagType,\n  isSoftware = false,\n): ImageVersionDependencyType[] => {\n  const depString = isSoftware\n    ? imageVersion.annotations?.[IMAGE_ANNOTATIONS.SOFTWARE] || ''\n    : imageVersion.annotations?.[IMAGE_ANNOTATIONS.DEPENDENCIES] || '';\n  let dependencies: ImageVersionDependencyType[];\n  try {\n    dependencies = JSON.parse(depString);\n  } catch (e) {\n    if (depString.includes('[')) {\n      // It was intended to be an array but failed to parse, log the error\n      /* eslint-disable-next-line no-console */\n      console.error(`JSON parse error when parsing ${imageVersion.name}`);\n    }\n    dependencies = [];\n  }\n  return dependencies || [];\n};\n\n/**\n * Get the long string of the software that the version is using\n */\nexport const getImageVersionSoftwareString = (imageVersion: ImageStreamSpecTagType): string => {\n  const dependencies = getImageVersionDependencies(imageVersion, true);\n  const softwareString = dependencies.map((software) => getNameVersionString(software));\n  return softwareString.join(', ');\n};\n\n/**\n * Get all the `imageStream.spec.tags` and filter the ones exists in `imageStream.status.tags`\n */\nexport const getExistingVersionsForImageStream = (\n  imageStream: ImageStreamKind,\n): ImageStreamSpecTagType[] => {\n  const allVersions = imageStream.spec.tags || [];\n  return allVersions.filter((version) => checkVersionExistence(imageStream, version));\n};\n\n/**\n * Takes an ImageStream and returns the related description we show next to the name\n */\nexport const getRelatedVersionDescription = (imageStream: ImageStreamKind): string | undefined => {\n  const versions = getExistingVersionsForImageStream(imageStream);\n  return versions.length === 1 ? getImageVersionSoftwareString(versions[0]) : undefined;\n};\n\n/**\n * Get all the existing tags and check their build status, filter out the available ones\n */\nexport const getAvailableVersionsForImageStream = (\n  imageStream: ImageStreamKind,\n  buildStatuses: BuildStatus[],\n): ImageStreamSpecTagType[] => {\n  const existingVersions = getExistingVersionsForImageStream(imageStream);\n  return existingVersions.filter((version) =>\n    checkTagBuildValid(buildStatuses, imageStream, version),\n  );\n};\n\n/**\n * Get the recommended tag or the default tag\n * if no recommended or default, return the latest version\n */\nexport const getDefaultVersionForImageStream = (\n  imageStream: ImageStreamKind,\n  buildStatuses: BuildStatus[],\n): ImageStreamSpecTagType | undefined => {\n  const availableVersions = getAvailableVersionsForImageStream(imageStream, buildStatuses);\n  if (availableVersions.length === 0) {\n    return undefined;\n  }\n\n  const sortedVersions = [...availableVersions].sort(compareTagVersions);\n\n  // Return the most recent version\n  return sortedVersions[0];\n};\n\n/******************* Deployment Size utils *******************/\nexport const getSizeDescription = (size: NotebookSize): string =>\n  `Limits: ${size.resources.limits?.cpu || '??'} CPU, ` +\n  `${size.resources.limits?.memory || '??'} Memory ` +\n  `Requests: ${size.resources.requests?.cpu || '??'} CPU, ` +\n  `${size.resources.requests?.memory || '??'} Memory`;\n\n/******************* Storage utils *******************/\nexport const getVolumesByStorageData = (\n  storageData: StorageData,\n): { volumes: Volume[]; volumeMounts: VolumeMount[] } => {\n  const { storageType, existing } = storageData;\n  const volumes: Volume[] = [];\n  const volumeMounts: VolumeMount[] = [];\n\n  if (storageType === StorageType.EXISTING_PVC) {\n    const { storage } = existing;\n    if (storage) {\n      volumes.push({ name: storage, persistentVolumeClaim: { claimName: storage } });\n      volumeMounts.push({ mountPath: ROOT_MOUNT_PATH, name: storage });\n    }\n  }\n\n  return { volumes, volumeMounts };\n};\n\nexport const getRootVolumeName = (notebook?: NotebookKind): string =>\n  notebook?.spec.template.spec.containers[0].volumeMounts?.find(\n    (volumeMount) => volumeMount.mountPath === ROOT_MOUNT_PATH,\n  )?.name || '';\n\n/******************* Checking utils *******************/\n/**\n * Check if there is 1 or more versions available for an image stream\n */\nexport const checkImageStreamAvailability = (\n  imageStream: ImageStreamKind,\n  buildStatuses: BuildStatus[],\n): boolean => {\n  const tags = getAvailableVersionsForImageStream(imageStream, buildStatuses);\n  return tags.length !== 0;\n};\n\nexport const checkTagBuildValid = (\n  buildStatuses: BuildStatus[],\n  imageStream: ImageStreamKind,\n  imageVersion: ImageStreamSpecTagType,\n): boolean => {\n  const imageStreamVersion = `${imageStream.metadata.name}:${imageVersion.name}`;\n  const build = buildStatuses.find(\n    (buildStatus) => buildStatus.imageStreamVersion === imageStreamVersion,\n  );\n  if (!build) {\n    return true;\n  }\n  return !PENDING_PHASES.includes(build.status) && !FAILED_PHASES.includes(build.status);\n};\n\nexport const checkVersionExistence = (\n  imageStream: ImageStreamKind,\n  imageVersion: ImageStreamSpecTagType,\n): boolean => {\n  const versions = imageStream.status?.tags || [];\n  return versions.some((version) => version.tag === imageVersion.name);\n};\n\nexport const checkVersionRecommended = (imageVersion: ImageStreamSpecTagType): boolean =>\n  !!imageVersion.annotations?.[IMAGE_ANNOTATIONS.RECOMMENDED];\n\nexport const isValidGenericKey = (key: string): boolean => !!key;\n\nexport const isAWSValid = (values: EnvVariableDataEntry[]): boolean =>\n  values.every(({ key, value }) =>\n    AWS_FIELDS.filter((field) => field.isRequired)\n      .map((field) => field.key)\n      .includes(key)\n      ? !!value\n      : true,\n  );\n\nexport const isEnvVariableDataValid = (envVariables: EnvVariable[]): boolean => {\n  if (envVariables.length === 0) {\n    return true;\n  }\n\n  const hasValidValuesForType = (\n    values: EnvVariableDataEntry[],\n    type: ConfigMapCategory | SecretCategory,\n  ) => {\n    if (values.length === 0) {\n      // No entries -- they have partial form structure\n      return false;\n    }\n\n    switch (type) {\n      case ConfigMapCategory.GENERIC:\n      case SecretCategory.GENERIC:\n      case ConfigMapCategory.UPLOAD:\n      case SecretCategory.UPLOAD:\n        return values.every(({ key, value }) => isValidGenericKey(key) && !!value);\n      case SecretCategory.AWS:\n        return isAWSValid(values);\n      default:\n        return false;\n    }\n  };\n\n  const isValid = envVariables.every(\n    (envVar) =>\n      !!envVar.type &&\n      !!envVar.values &&\n      !!envVar.values.category &&\n      hasValidValuesForType(envVar.values.data, envVar.values.category),\n  );\n\n  return isValid;\n};\n\nexport const checkRequiredFieldsForNotebookStart = (\n  startNotebookData: StartNotebookData,\n  storageData: StorageData,\n  envVariables: EnvVariable[],\n  dataConnection: DataConnectionData,\n): boolean => {\n  const { projectName, notebookName, notebookSize, image } = startNotebookData;\n  const { storageType, creating, existing } = storageData;\n  const isNotebookDataValid = !!(\n    projectName &&\n    notebookName &&\n    notebookSize &&\n    image.imageStream &&\n    image.imageVersion\n  );\n\n  const newStorageFieldInvalid = storageType === StorageType.NEW_PVC && !creating.nameDesc.name;\n  const existingStorageFieldInvalid = storageType === StorageType.EXISTING_PVC && !existing.storage;\n  const isStorageDataValid = !newStorageFieldInvalid && !existingStorageFieldInvalid;\n\n  const newDataConnectionInvalid =\n    dataConnection.type === 'creating' &&\n    !(dataConnection?.creating?.values?.data && isAWSValid(dataConnection.creating.values.data));\n  const existingDataConnectionInvalid =\n    dataConnection.type === 'existing' && !dataConnection?.existing?.secretRef.name;\n  const isDataConnectionValid =\n    !dataConnection.enabled || (!newDataConnectionInvalid && !existingDataConnectionInvalid);\n\n  return (\n    isNotebookDataValid &&\n    isStorageDataValid &&\n    isEnvVariableDataValid(envVariables) &&\n    isDataConnectionValid\n  );\n};\n\nexport const isInvalidBYONImageStream = (imageStream: ImageStreamKind) => {\n  // there will be always only 1 tag in the spec for BYON images\n  // status tags could be more than one\n  const activeTag = imageStream.status?.tags?.find(\n    (statusTag) => statusTag.tag === imageStream.spec.tags?.[0].name,\n  );\n  return (\n    imageStream.metadata.labels?.['app.kubernetes.io/created-by'] === 'byon' &&\n    (activeTag === undefined || activeTag.items === null)\n  );\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/AddExistingStorageField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/CreateNewStorageSection.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/StorageField.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useAvailablePvcSize.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useAvailablePvcs.ts",["3446"],[],"import * as React from 'react';\nimport * as _ from 'lodash';\nimport { getDashboardPvcs } from '~/api';\nimport { PersistentVolumeClaimKind } from '~/k8sTypes';\nimport { NotebookState } from '~/pages/projects/notebook/types';\nimport { getNotebookPVCNames } from '~/pages/projects/pvc/utils';\n\nconst useAvailablePvcs = (\n  projectName: string,\n  notebooks: NotebookState[],\n  editStorage?: string,\n): [pvcs: PersistentVolumeClaimKind[], loaded: boolean, loadError: Error | undefined] => {\n  const [pvcs, setPvcs] = React.useState<PersistentVolumeClaimKind[]>([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (projectName) {\n      getDashboardPvcs(projectName)\n        .then((newPvcs) => {\n          const usedPvcs = _.uniq(\n            notebooks.flatMap((notebook) => getNotebookPVCNames(notebook.notebook)),\n          );\n          const filteredPvc = editStorage\n            ? usedPvcs.filter((pvc) => pvc !== editStorage)\n            : usedPvcs;\n          setPvcs(newPvcs.filter((pvc) => !filteredPvc.includes(pvc.metadata.name)));\n          setLoaded(true);\n        })\n        .catch((e) => {\n          setLoadError(e);\n          setLoaded(true);\n        });\n    }\n  }, [projectName, notebooks, editStorage]);\n\n  return [pvcs, loaded, loadError];\n};\n\nexport default useAvailablePvcs;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/useNotebookRootStorage.ts",["3447"],[],"import * as React from 'react';\nimport { getPvc } from '~/api';\nimport { NotebookKind, PersistentVolumeClaimKind } from '~/k8sTypes';\nimport { ROOT_MOUNT_PATH } from '~/pages/projects/pvc/const';\n\nconst useNotebookRootStorage = (notebook?: NotebookKind): PersistentVolumeClaimKind | undefined => {\n  const [pvc, setPvc] = React.useState<PersistentVolumeClaimKind>();\n\n  React.useEffect(() => {\n    if (notebook) {\n      const volumeMounts = notebook.spec.template.spec.containers[0].volumeMounts || [];\n      const volumeMount = volumeMounts.find(\n        (volumeMount) => volumeMount.mountPath === ROOT_MOUNT_PATH,\n      );\n      if (!volumeMount) {\n        /* eslint-disable-next-line no-console */\n        console.error('No storage mounted on root path');\n        setPvc(undefined);\n      } else {\n        getPvc(notebook.metadata.namespace, volumeMount.name).then((pvc) => setPvc(pvc));\n      }\n    }\n  }, [notebook]);\n\n  return pvc;\n};\n\nexport default useNotebookRootStorage;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/storage/utils.ts",["3448"],[],"import * as React from 'react';\nimport {\n  CreatingStorageObjectForNotebook,\n  ExistingStorageObjectForNotebook,\n  StorageData,\n  StorageType,\n  UpdateObjectAtPropAndValue,\n} from '~/pages/projects/types';\nimport { getPvcDescription, getPvcDisplayName } from '~/pages/projects/utils';\nimport { NotebookKind, PersistentVolumeClaimKind } from '~/k8sTypes';\nimport useRelatedNotebooks, {\n  ConnectedNotebookContext,\n} from '~/pages/projects/notebook/useRelatedNotebooks';\nimport useGenericObjectState from '~/utilities/useGenericObjectState';\nimport { getRootVolumeName } from '~/pages/projects/screens/spawner/spawnerUtils';\nimport useDefaultPvcSize from './useAvailablePvcSize';\n\nexport const useCreateStorageObjectForNotebook = (\n  existingData?: PersistentVolumeClaimKind,\n): [\n  data: CreatingStorageObjectForNotebook,\n  setData: UpdateObjectAtPropAndValue<CreatingStorageObjectForNotebook>,\n  resetDefaults: () => void,\n] => {\n  const defaultPvcSize = useDefaultPvcSize();\n  const createDataState = useGenericObjectState<CreatingStorageObjectForNotebook>({\n    nameDesc: {\n      name: '',\n      k8sName: undefined,\n      description: '',\n    },\n    size: defaultPvcSize,\n    forNotebook: {\n      name: '',\n      mountPath: {\n        value: '',\n        error: '',\n      },\n    },\n    hasExistingNotebookConnections: false,\n  });\n\n  const [, setCreateData] = createDataState;\n\n  const existingName = existingData ? getPvcDisplayName(existingData) : '';\n  const existingDescription = existingData ? getPvcDescription(existingData) : '';\n  const existingSize = existingData ? existingData.spec.resources.requests.storage : '';\n  const { notebooks: relatedNotebooks } = useRelatedNotebooks(\n    ConnectedNotebookContext.REMOVABLE_PVC,\n    existingData ? existingData.metadata.name : undefined,\n  );\n  React.useEffect(() => {\n    if (existingName) {\n      setCreateData('nameDesc', {\n        name: existingName,\n        description: existingDescription,\n      });\n\n      if (relatedNotebooks.length > 0) {\n        setCreateData('hasExistingNotebookConnections', true);\n      }\n\n      const newSize = parseInt(existingSize);\n      if (newSize) {\n        setCreateData('size', newSize);\n      }\n    }\n  }, [existingName, existingDescription, setCreateData, relatedNotebooks, existingSize]);\n\n  return createDataState;\n};\n\nexport const useExistingStorageDataObjectForNotebook = (): [\n  data: ExistingStorageObjectForNotebook,\n  setData: UpdateObjectAtPropAndValue<ExistingStorageObjectForNotebook>,\n  resetDefaults: () => void,\n] =>\n  useGenericObjectState<ExistingStorageObjectForNotebook>({\n    name: '',\n    mountPath: {\n      value: '',\n      error: '',\n    },\n  });\n\nexport const useStorageDataObject = (\n  notebook?: NotebookKind,\n): [\n  data: StorageData,\n  setData: UpdateObjectAtPropAndValue<StorageData>,\n  resetDefaults: () => void,\n] => {\n  const defaultPvcSize = useDefaultPvcSize();\n  return useGenericObjectState<StorageData>({\n    storageType: notebook ? StorageType.EXISTING_PVC : StorageType.NEW_PVC,\n    creating: {\n      nameDesc: {\n        name: '',\n        description: '',\n      },\n      size: defaultPvcSize,\n    },\n    existing: {\n      storage: getRootVolumeName(notebook),\n    },\n  });\n};\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useBuildStatuses.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useImageStreams.ts",["3449"],[],"import * as React from 'react';\nimport { ImageStreamKind } from '~/k8sTypes';\nimport { getNotebookImageStreams } from '~/api';\n\nconst useImageStreams = (\n  namespace?: string,\n): [imageStreams: ImageStreamKind[], loaded: boolean, loadError: Error | undefined] => {\n  const [imageStreams, setImageStreams] = React.useState<ImageStreamKind[]>([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (namespace) {\n      getNotebookImageStreams(namespace)\n        .then((imageStreams) => {\n          setImageStreams(imageStreams);\n          setLoaded(true);\n        })\n        .catch((e) => {\n          setLoadError(e);\n          setLoaded(true);\n        });\n    }\n  }, [namespace]);\n\n  return [imageStreams, loaded, loadError];\n};\n\nexport default useImageStreams;\n","/Users/jshandel/odh-dashboard/frontend/src/pages/projects/screens/spawner/useNotebookSize.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/typeHelpers.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/pages/projects/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/actions/actions.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/hooks.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/reducers/appReducer.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/clusterInfo.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/index.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/project.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/selectors/user.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/redux/store/store.ts",["3450"],[],"import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport appReducer from '~/redux/reducers/appReducer';\n\n// eslint-disable-next-line\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => createStore(appReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nexport const store = configureStore();\n","/Users/jshandel/odh-dashboard/frontend/src/redux/types.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/buildsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/clusterSettingsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/componentsServices.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/consoleLinksService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/dashboardConfigService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/dashboardService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/docsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/envService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/gpuService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/groupSettingsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/imagesService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/impersonateService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/notebookEventsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/notebookService.ts",["3451"],[],"import axios from 'axios';\nimport { RecursivePartial } from '~/typeHelpers';\nimport { Notebook, NotebookState, NotebookData, NotebookRunningState } from '~/types';\n\nexport const getNotebook = (namespace: string, name: string): Promise<Notebook> => {\n  const url = `/api/notebooks/${namespace}/${name}`;\n  return axios\n    .get(url)\n    .then((response) => response.data)\n    .catch((e) => {\n      throw new Error(e.response.data.message);\n    });\n};\n\nexport const getNotebookAndStatus = (\n  namespace: string,\n  name: string,\n  notebook: Notebook | null,\n): Promise<NotebookRunningState> => {\n  const url = `/api/notebooks/${namespace}/${name}/status`;\n\n  return axios\n    .get(url)\n    .then((response) => response.data)\n    .catch((e) => {\n      if (e.response.status === 404) {\n        return { notebook, isRunning: false };\n      }\n      /* eslint-disable-next-line no-console */\n      console.error(\n        'Checking notebook status failed, falling back on notebook check logic',\n        e.response.data.message,\n      );\n      // Notebooks are unreliable to live status on replicas -- but if we have nothing else...\n      const isRunning = !!(\n        notebook?.status?.readyReplicas &&\n        notebook?.status?.readyReplicas >= 1 &&\n        notebook?.metadata.annotations?.['opendatahub.io/link'] &&\n        !notebook?.metadata.annotations?.['kubeflow-resource-stopped']\n      );\n      return { notebook, isRunning };\n    });\n};\n\nexport const enableNotebook = async (notebookData: NotebookData): Promise<Notebook> => {\n  const url = `/api/notebooks`;\n\n  return axios\n    .post(url, notebookData)\n    .then((response) => response.data)\n    .catch((e) => {\n      throw new Error(e.response.data.message);\n    });\n};\n\nexport const stopNotebook = (username?: string): Promise<Notebook> => {\n  const url = `/api/notebooks`;\n\n  const patch: RecursivePartial<NotebookData> = {\n    state: NotebookState.Stopped,\n    // only used for admin calls\n    username: username,\n  };\n\n  return axios\n    .patch(url, patch)\n    .then((response) => response.data)\n    .catch((e) => {\n      throw new Error(e.response.data.message);\n    });\n};\n","/Users/jshandel/odh-dashboard/frontend/src/services/quickStartsService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/roleBindingService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/routeService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/segmentKeyService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/templateService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/services/validateIsvService.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/typeHelpers.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/types.ts",["3452","3453"],[],"/*\n * Common types, should be kept up to date with backend types\n */\n\nimport { ServingRuntimeSize } from '~/pages/modelServing/screens/types';\nimport { EnvironmentFromVariable } from '~/pages/projects/types';\nimport { ImageStreamKind, ImageStreamSpecTagType } from './k8sTypes';\nimport { EitherNotBoth } from './typeHelpers';\n\nexport type PrometheusQueryResponse = {\n  data: {\n    result: {\n      value: [number, string];\n    }[];\n    resultType: string;\n  };\n  status: string;\n};\n\nexport type PrometheusQueryRangeResponse = {\n  data: {\n    result: [\n      {\n        // not used -- see https://prometheus.io/docs/prometheus/latest/querying/api/#range-queries for more info\n        metric: unknown;\n        values: PrometheusQueryRangeResultValue[];\n      },\n    ];\n    resultType: string;\n  };\n  status: string;\n};\n\nexport type PrometheusQueryRangeResultValue = [number, string];\n\n/**\n * In some YAML configs, we'll need to stringify a number -- this type just helps show it's not\n * \"any string\" as a documentation touch point. Has no baring on the type checking.\n */\ntype NumberString = string;\nexport type GpuSettingString = 'autodetect' | 'hidden' | NumberString | undefined;\n\nexport type OperatorStatus = {\n  /** Operator is installed and will be cloned to the namespace on creation */\n  available: boolean;\n  /** Has a detection gone underway or is the available a static default */\n  queriedForStatus: boolean;\n};\n\nexport type DashboardConfig = K8sResourceCommon & {\n  spec: {\n    dashboardConfig: DashboardCommonConfig;\n    groupsConfig?: {\n      adminGroups: string;\n      allowedGroups: string;\n    };\n    notebookSizes?: NotebookSize[];\n    modelServerSizes?: ServingRuntimeSize[];\n    notebookController?: {\n      enabled: boolean;\n      pvcSize?: string;\n      notebookNamespace?: string;\n      gpuSetting?: GpuSettingString;\n      notebookTolerationSettings?: TolerationSettings;\n    };\n    templateOrder?: string[];\n    templateDisablement?: string[];\n  };\n  /** Faux status object -- computed by the service account */\n  status: {\n    dependencyOperators: {\n      redhatOpenshiftPipelines: OperatorStatus;\n    };\n  };\n};\n\nexport type DashboardCommonConfig = {\n  enablement: boolean;\n  disableInfo: boolean;\n  disableSupport: boolean;\n  disableClusterManager: boolean;\n  disableTracking: boolean;\n  disableBYONImageStream: boolean;\n  disableISVBadges: boolean;\n  disableAppLauncher: boolean;\n  disableUserManagement: boolean;\n  disableProjects: boolean;\n  disableModelServing: boolean;\n  disableProjectSharing: boolean;\n  disableCustomServingRuntimes: boolean;\n  modelMetricsNamespace: string;\n  disablePipelines: boolean;\n};\n\nexport type NotebookControllerUserState = {\n  user: string;\n  lastSelectedImage: string;\n  lastSelectedSize: string;\n  /** Omission denotes no history */\n  lastActivity?: number;\n};\n\n/**\n * OdhDashboardConfig contains gpuSetting as a string value override -- proper gpus return as numbers\n * TODO: Look to make it just number by properly parsing the value\n */\nexport type GPUCount = string | number;\n\nexport enum ContainerResourceAttributes {\n  CPU = 'cpu',\n  MEMORY = 'memory',\n  NVIDIA_GPU = 'nvidia.com/gpu',\n}\n\nexport type ContainerResources = {\n  requests?: {\n    cpu?: string;\n    memory?: string;\n    'nvidia.com/gpu'?: GPUCount;\n  };\n  limits?: {\n    cpu?: string;\n    memory?: string;\n    'nvidia.com/gpu'?: GPUCount;\n  };\n};\n\nexport type EnvironmentVariable = EitherNotBoth<\n  { value: string | number },\n  { valueFrom: Record<string, unknown> }\n> & {\n  name: string;\n};\n\nexport type EnvVarReducedTypeKeyValues = {\n  configMap: Record<string, string>;\n  secrets: Record<string, string>;\n};\n\nexport type NotebookSize = {\n  name: string;\n  resources: ContainerResources;\n  notUserDefined?: boolean;\n};\n\nexport type TolerationSettings = {\n  enabled: boolean;\n  key: string;\n};\nexport type NotebookTolerationFormSettings = TolerationSettings & {\n  error?: string;\n};\n\nexport type ClusterSettingsType = {\n  userTrackingEnabled: boolean;\n  pvcSize: number | string;\n  cullerTimeout: number;\n  notebookTolerationSettings: TolerationSettings | null;\n};\n\n/** @deprecated -- use SDK type */\nexport type Secret = {\n  data?: Record<string, string>;\n  stringData?: Record<string, string>;\n  type?: string;\n} & K8sResourceCommon;\n\n/** @deprecated -- use SDK type */\nexport type ConfigMap = {\n  data?: Record<string, string>;\n} & K8sResourceCommon;\n\nexport type EnvVarResource = Secret | ConfigMap;\n\nexport enum EnvVarResourceType {\n  Secret = 'Secret',\n  ConfigMap = 'ConfigMap',\n}\n\nexport type OdhApplication = {\n  metadata: {\n    name: string;\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    displayName: string;\n    provider: string;\n    description: string;\n    route?: string | null;\n    routeNamespace?: string | null;\n    routeSuffix?: string | null;\n    serviceName?: string | null;\n    endpoint?: string | null;\n    link?: string | null;\n    img: string;\n    docsLink: string;\n    getStartedLink: string;\n    getStartedMarkDown: string;\n    category?: OdhApplicationCategory | string; // unbound by the CRD today -- should be the enum;\n    support?: string;\n    quickStart: string | null;\n    comingSoon?: boolean | null;\n    beta?: boolean | null;\n    betaTitle?: string | null;\n    betaText?: string | null;\n    shownOnEnabledPage: boolean | null;\n    isEnabled: boolean | null;\n    kfdefApplications?: string[];\n    csvName?: string;\n    enable?: {\n      title: string;\n      actionLabel: string;\n      description?: string;\n      linkPreface?: string;\n      link?: string;\n      variables?: { [key: string]: string };\n      variableDisplayText?: { [key: string]: string };\n      variableHelpText?: { [key: string]: string };\n      validationSecret: string;\n      validationJob: string;\n      validationConfigMap?: string;\n    };\n    featureFlag?: string;\n    internalRoute?: string;\n  };\n};\n\nexport enum OdhApplicationCategory {\n  RedHatManaged = 'Red Hat managed',\n  PartnerManaged = 'Partner managed',\n  SelfManaged = 'Self-managed',\n}\n\nexport enum OdhDocumentType {\n  Documentation = 'documentation',\n  HowTo = 'how-to',\n  QuickStart = 'quickstart',\n  Tutorial = 'tutorial',\n}\n\nexport type OdhDocument = {\n  metadata: {\n    name: string;\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    type: string;\n    displayName: string;\n    appName?: string;\n    appDisplayName?: string; // Only set on UI side in resources section\n    appEnabled?: boolean; // Only set on UI side in resources section\n    appCategory?: string; // Only set on UI side in resources section\n    provider?: string;\n    description: string;\n    url: string;\n    img?: string;\n    icon?: string;\n    durationMinutes?: number;\n    featureFlag?: string;\n  };\n};\n\nexport enum BUILD_PHASE {\n  none = 'Not started',\n  new = 'New',\n  running = 'Running',\n  pending = 'Pending',\n  complete = 'Complete',\n  failed = 'Failed',\n  cancelled = 'Cancelled',\n  error = 'Error',\n}\n\nexport type BuildStatus = {\n  name: string;\n  imageTag: string;\n  status: BUILD_PHASE;\n  timestamp: string;\n};\n\ntype K8sMetadata = {\n  name: string;\n  namespace?: string;\n  uid?: string;\n  labels?: { [key: string]: string };\n  annotations?: { [key: string]: string };\n};\n\n/**\n * @deprecated -- use the SDK version -- see k8sTypes.ts\n * All references that use this are un-vetted data against existing types, should be converted over\n * to the new K8sResourceCommon from the SDK to keep everythung unified on one front.\n */\nexport type K8sResourceCommon = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: K8sMetadata;\n};\n\n// Minimal type for ConsoleLinks\nexport type ConsoleLinkKind = {\n  spec: {\n    text: string;\n    location: string;\n    href: string;\n    applicationMenu: {\n      section: string;\n      imageURL: string;\n    };\n  };\n} & K8sResourceCommon;\n\n//\n// Used for Telemetry\n//\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    analytics?: any;\n    clusterID?: string;\n  }\n}\n\nexport type ODHSegmentKey = {\n  segmentKey: string;\n};\n\nexport type TrackingEventProperties = {\n  name?: string;\n  anonymousID?: string;\n  type?: string;\n  term?: string;\n  GPU?: GPUCount;\n  lastSelectedSize?: string;\n  lastSelectedImage?: string;\n  projectName?: string;\n  notebookName?: string;\n  lastActivity?: string;\n};\n\nexport type NotebookPort = {\n  name: string;\n  containerPort: number;\n  protocol: string;\n};\n\nexport type PodToleration = {\n  effect: string;\n  key: string;\n  operator: string;\n};\n\nexport type NotebookContainer = {\n  name: string;\n  image: string;\n  imagePullPolicy?: string;\n  workingDir?: string;\n  env: EnvironmentVariable[];\n  envFrom?: EnvironmentFromVariable[];\n  ports?: NotebookPort[];\n  resources?: ContainerResources;\n  livenessProbe?: Record<string, unknown>;\n  readinessProbe?: Record<string, unknown>;\n  volumeMounts?: VolumeMount[];\n};\n\nexport type PodAffinity = {\n  nodeAffinity?: { [key: string]: unknown };\n};\n\nexport type Notebook = K8sResourceCommon & {\n  metadata: {\n    annotations: Partial<{\n      'kubeflow-resource-stopped': string | null; // datestamp of stop (if omitted, it is running)\n      'notebooks.kubeflow.org/last-activity': string; // datestamp of last use\n      'opendatahub.io/link': string; // redirect notebook url\n      'opendatahub.io/username': string; // the untranslated username behind the notebook\n      'notebooks.opendatahub.io/last-image-selection': string; // the last image they selected\n      'notebooks.opendatahub.io/last-size-selection': string; // the last notebook size they selected\n    }>;\n    labels: Partial<{\n      'opendatahub.io/user': string; // translated username -- see translateUsername\n    }>;\n  };\n  spec: {\n    template: {\n      spec: {\n        affinity?: PodAffinity;\n        enableServiceLinks?: boolean;\n        containers: NotebookContainer[];\n        volumes?: Volume[];\n        tolerations?: PodToleration[];\n      };\n    };\n  };\n  status?: {\n    readyReplicas: number;\n  } & Record<string, unknown>;\n};\n\nexport type NotebookRunningState = {\n  notebook: Notebook | null;\n  isRunning: boolean;\n  podUID: string;\n};\n\nexport type NotebookList = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: Record<string, unknown>;\n  items: Notebook[];\n} & K8sResourceCommon;\n\nexport type Route = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: {\n    name: string;\n    namespace: string;\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    host: string;\n    port: {\n      targetPort: string;\n    };\n    tls: {\n      insecureEdgeTerminationPolicy: string;\n      termination: string;\n    };\n    to: {\n      kind: string;\n      name: string;\n      weight: number;\n    };\n    wildcardPolicy: string;\n  };\n};\n\nexport type BYONImage = {\n  id: string;\n  user?: string;\n  uploaded?: Date;\n  error?: string;\n} & BYONImageCreateRequest &\n  BYONImageUpdateRequest;\n\nexport type BYONImageCreateRequest = {\n  name: string;\n  url: string;\n  description?: string;\n  // FIXME: This shouldn't be a user defined value consumed from the request payload but should be a controlled value from an authentication middleware.\n  user: string;\n  software?: BYONImagePackage[];\n  packages?: BYONImagePackage[];\n};\n\nexport type BYONImageUpdateRequest = {\n  id: string;\n  name?: string;\n  description?: string;\n  visible?: boolean;\n  software?: BYONImagePackage[];\n  packages?: BYONImagePackage[];\n};\n\nexport type BYONImagePackage = {\n  name: string;\n  version: string;\n  visible: boolean;\n};\n\nexport type ImageTag = {\n  image: ImageInfo | undefined;\n  tag: ImageTagInfo | undefined;\n};\n\nexport type ImageSoftwareType = {\n  name: string;\n  version?: string;\n};\n\nexport type EnvVarCategoryType = {\n  name: string;\n  variables: [\n    {\n      name: string;\n      type: string;\n    },\n  ];\n};\n\nexport type VariableRow = {\n  variableType: string;\n  variables: EnvVarType[];\n  errors: { [key: string]: string };\n};\n\nexport type EnvVarType = {\n  name: string;\n  type: string;\n  value: string | number;\n};\n\nexport type ImageStreamTag = {\n  name: string;\n  labels?: { [key: string]: string };\n  annotations?: { [key: string]: string };\n  from: {\n    kind: string;\n    name: string;\n  };\n};\n\nexport type ResponseStatus = {\n  success: boolean;\n  error: string;\n};\n\nexport type ImageStreamStatusTagItem = {\n  created: string;\n  dockerImageReference: string;\n  image: string;\n  generation: number;\n};\n\nexport type ImageStreamStatusTag = {\n  tag: string;\n  items: ImageStreamStatusTagItem[];\n};\n\nexport type ImageStreamStatusTagCondition = {\n  type: string;\n  status: string;\n  reason: string;\n  message: string;\n};\n\nexport type ImageStreamStatus = {\n  dockerImageRepository?: string;\n  publicDockerImageRepository?: string;\n  tags?: ImageStreamStatusTag[];\n};\n\nexport type ImageStream = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: {\n    name: string;\n    namespace: string;\n    labels?: { [key: string]: string };\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    lookupPolicy?: {\n      local: boolean;\n    };\n    tags?: ImageStreamTag[];\n  };\n  status?: ImageStreamStatus;\n} & K8sResourceCommon;\n\nexport type ImageStreamList = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: Record<string, unknown>;\n  items: ImageStream[];\n} & K8sResourceCommon;\n\nexport type NameVersionPair = {\n  name: string;\n  version: string;\n};\n\nexport type TagContent = {\n  software: NameVersionPair[];\n  dependencies: NameVersionPair[];\n};\n\nexport type ImageTagInfo = {\n  name: string;\n  content: TagContent;\n  recommended: boolean;\n  default: boolean;\n};\n\nexport type ImageInfo = {\n  name: string;\n  tags: ImageTagInfo[];\n  description?: string;\n  url?: string;\n  display_name: string;\n  default?: boolean;\n  order: number;\n  dockerImageRepo: string;\n  error?: string;\n};\n\nexport type ImageType = 'byon' | 'jupyter' | 'other';\n\nexport type PersistentVolumeClaim = K8sResourceCommon & {\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode: 'Filesystem' | 'Block';\n  };\n  status?: Record<string, any>; // eslint-disable-line\n};\n\nexport type PersistentVolumeClaimList = {\n  apiVersion?: string;\n  kind?: string;\n  metadata: Record<string, unknown>;\n  items: PersistentVolumeClaim[];\n};\n\nexport type Volume = {\n  name: string;\n  emptyDir?: Record<string, unknown>;\n  persistentVolumeClaim?: {\n    claimName: string;\n  };\n  secret?: {\n    secretName: string;\n  };\n};\n\nexport type VolumeMount = { mountPath: string; name: string };\n\n/**\n * @deprecated -- use K8sStatus\n * Copy from partial of V1Status that will returned by the delete CoreV1Api\n */\nexport type DeleteStatus = {\n  apiVersion?: string;\n  code?: number;\n  kind?: string;\n  message?: string;\n  reason?: string;\n  status?: string;\n};\n\nexport type RoleBindingSubject = {\n  kind: string;\n  apiGroup: string;\n  name: string;\n};\n\nexport type RoleBinding = {\n  subjects: RoleBindingSubject[];\n  roleRef: RoleBindingSubject;\n} & K8sResourceCommon;\n\nexport type ResourceGetter<T extends K8sResourceCommon> = (\n  projectName: string,\n  resourceName: string,\n) => Promise<T>;\n\nexport type ResourceCreator<T extends K8sResourceCommon> = (resource: T) => Promise<T>;\n\nexport type ResourceReplacer<T extends K8sResourceCommon> = (resource: T) => Promise<T>;\n\nexport type ResourceDeleter = (projectName: string, resourceName: string) => Promise<DeleteStatus>;\n\nexport type K8sEvent = {\n  involvedObject: {\n    uid: string;\n  };\n  metadata: K8sMetadata;\n  eventTime: string;\n  lastTimestamp: string | null; // if it never starts, the value is null\n  message: string;\n  reason: string;\n  type: 'Warning' | 'Normal';\n};\n\nexport type NotebookStatus = {\n  percentile: number;\n  currentStatus: EventStatus;\n  currentEvent: string;\n  currentEventReason: string;\n  currentEventDescription: string;\n};\n\nexport enum EventStatus {\n  IN_PROGRESS = 'In Progress',\n  ERROR = 'Error',\n  INFO = 'Info',\n  WARNING = 'Warning',\n}\n\nexport enum NotebookState {\n  Started = 'started',\n  Stopped = 'stopped',\n}\n\nexport type NotebookData = {\n  notebookSizeName: string;\n  imageName: string;\n  imageTagName: string;\n  gpus: number;\n  envVars: EnvVarReducedTypeKeyValues;\n  state: NotebookState;\n  // only used for admin calls, regular users cannot use this field\n  username?: string;\n};\n\nexport type UsernameMap<V> = { [username: string]: V };\n\nexport type ImageStreamAndVersion = {\n  imageStream?: ImageStreamKind;\n  imageVersion?: ImageStreamSpecTagType;\n};\n\nexport type gpuScale = {\n  availableScale: number;\n  gpuNumber: number;\n};\n\nexport type GPUInfo = {\n  configured: boolean;\n  available: number;\n  autoscalers: gpuScale[];\n};\n\nexport type ContextResourceData<T> = {\n  data: T[];\n  loaded: boolean;\n  error?: Error;\n  refresh: () => void;\n};\n\nexport type BreadcrumbItemType = {\n  label: string;\n} & EitherNotBoth<{ link: string }, { isActive: boolean }>;\n","/Users/jshandel/odh-dashboard/frontend/src/typings.d.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/NavData.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/allSettledPromises.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/clusterUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/const.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/dataEntryToRecord.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/imageUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/markdown.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/notebookControllerUtils.ts",["3454"],[],"import * as React from 'react';\nimport { AxiosError } from 'axios';\nimport { createRoleBinding, getRoleBinding } from '~/services/roleBindingService';\nimport {\n  EnvVarReducedTypeKeyValues,\n  EventStatus,\n  K8sEvent,\n  K8sResourceCommon,\n  Notebook,\n  NotebookControllerUserState,\n  NotebookStatus,\n  ResourceCreator,\n  ResourceGetter,\n  RoleBinding,\n  VariableRow,\n} from '~/types';\nimport { NotebookControllerContext } from '~/pages/notebookController/NotebookControllerContext';\nimport { useUser } from '~/redux/selectors';\nimport { EMPTY_USER_STATE } from '~/pages/notebookController/const';\nimport useNamespaces from '~/pages/notebookController/useNamespaces';\nimport { useAppContext } from '~/app/AppContext';\nimport { getRoute } from '~/services/routeService';\nimport { useWatchNotebookEvents } from './useWatchNotebookEvents';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\n\nexport const usernameTranslate = (username: string): string => {\n  const encodedUsername = encodeURIComponent(username);\n  return encodedUsername\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2a')\n    .replace(/-/g, '%2d')\n    .replace(/\\./g, '%2e')\n    .replace(/_/g, '%5f')\n    .replace(/~/g, '%7f')\n    .replace(/%/g, '-')\n    .toLowerCase();\n};\n\nexport const generateNotebookNameFromUsername = (username: string): string =>\n  `jupyter-nb-${usernameTranslate(username)}`;\n\nexport const generatePvcNameFromUsername = (username: string): string =>\n  `jupyterhub-nb-${usernameTranslate(username)}-pvc`;\n\nexport const generateEnvVarFileNameFromUsername = (username: string): string =>\n  `jupyterhub-singleuser-profile-${usernameTranslate(username)}-envs`;\n\n/**\n * Verify whether a resource is on the cluster\n * If it exists, return the resource object, else, return null\n * If the createFunc is also passed, create it when it doesn't exist\n */\nexport const verifyResource = async <T extends K8sResourceCommon>(\n  name: string,\n  namespace: string,\n  fetchFunc: ResourceGetter<T>,\n  createFunc?: ResourceCreator<T>,\n  createBody?: T,\n): Promise<T | undefined> =>\n  await fetchFunc(namespace, name).catch(async (e: AxiosError) => {\n    if (e.response?.status === 404) {\n      if (createFunc && createBody) {\n        return await createFunc(createBody);\n      }\n      return undefined;\n    }\n    throw e;\n  });\n\n/** Classify environment variables as ConfigMap or Secret */\nexport const classifyEnvVars = (variableRows: VariableRow[]): EnvVarReducedTypeKeyValues =>\n  variableRows.reduce(\n    (prev, curr) => {\n      const vars: Record<string, string | number> = {};\n      const secretVars: Record<string, string | number> = {};\n      curr.variables.forEach((variable) => {\n        if (variable.type === 'text') {\n          vars[variable.name] = variable.value;\n        } else {\n          secretVars[variable.name] = variable.value;\n        }\n      });\n      return {\n        configMap: { ...prev.configMap, ...vars },\n        secrets: { ...prev.secrets, ...secretVars },\n      };\n    },\n    { configMap: {}, secrets: {} },\n  );\n\nexport const getNotebookControllerUserState = (\n  notebook: Notebook | null,\n  loggedInUser: string,\n): NotebookControllerUserState | null => {\n  if (!notebook?.metadata?.annotations || !notebook?.metadata?.labels) {\n    return null;\n  }\n\n  const {\n    'notebooks.kubeflow.org/last-activity': lastActivity,\n    'notebooks.opendatahub.io/last-image-selection': lastSelectedImage = '',\n    'notebooks.opendatahub.io/last-size-selection': lastSelectedSize = '',\n    'opendatahub.io/username': annotationUser = '',\n  } = notebook.metadata.annotations;\n\n  let user = annotationUser;\n  if (!annotationUser) {\n    // Need to always have user -- if we don't, check if the current user is viable to translate to it\n    const notebookLabelUser = notebook.metadata.labels['opendatahub.io/user'];\n    if (usernameTranslate(loggedInUser) === notebookLabelUser) {\n      user = loggedInUser;\n    } else {\n      /* eslint-disable-next-line no-console */\n      console.error('Could not get full user data');\n      return null;\n    }\n  }\n\n  return {\n    lastActivity: lastActivity ? new Date(lastActivity).getTime() : undefined,\n    lastSelectedImage,\n    lastSelectedSize,\n    user,\n  };\n};\n\nexport const useSpecificNotebookUserState = (\n  notebook: Notebook | null,\n): NotebookControllerUserState => {\n  const { impersonatedUsername } = React.useContext(NotebookControllerContext);\n  const { username: stateUsername } = useUser();\n  const username = impersonatedUsername || stateUsername;\n\n  const userState = getNotebookControllerUserState(notebook, username);\n\n  const state = userState ?? {\n    ...EMPTY_USER_STATE,\n    user: username,\n  };\n\n  return useDeepCompareMemoize(state);\n};\n\nexport const useNotebookUserState = (): NotebookControllerUserState => {\n  const { currentUserNotebook } = React.useContext(NotebookControllerContext);\n  return useSpecificNotebookUserState(currentUserNotebook);\n};\n\n/** Check whether the namespace of the notebooks has the access to image streams\n * If not, create the rolebinding\n */\nexport const validateNotebookNamespaceRoleBinding = async (\n  notebookNamespace: string,\n  dashboardNamespace: string,\n): Promise<RoleBinding | undefined> => {\n  const roleBindingName = `${notebookNamespace}-image-pullers`;\n  const roleBindingObject: RoleBinding = {\n    apiVersion: 'rbac.authorization.k8s.io/v1',\n    kind: 'RoleBinding',\n    metadata: {\n      name: roleBindingName,\n      namespace: dashboardNamespace,\n    },\n    roleRef: {\n      apiGroup: 'rbac.authorization.k8s.io',\n      kind: 'ClusterRole',\n      name: 'system:image-puller',\n    },\n    subjects: [\n      {\n        apiGroup: 'rbac.authorization.k8s.io',\n        kind: 'Group',\n        name: `system:serviceaccounts:${notebookNamespace}`,\n      },\n    ],\n  };\n  return await verifyResource<RoleBinding>(\n    roleBindingName,\n    dashboardNamespace,\n    getRoleBinding,\n    createRoleBinding,\n    roleBindingObject,\n  );\n};\n\nexport const useNotebookRedirectLink = (): (() => Promise<string>) => {\n  const { currentUserNotebook } = React.useContext(NotebookControllerContext);\n  const { notebookNamespace } = useNamespaces();\n  const fetchCountRef = React.useRef(5); // how many tries to get the Route\n\n  const routeName = currentUserNotebook?.metadata.name;\n  const backupRoute = currentUserNotebook?.metadata.annotations?.['opendatahub.io/link'];\n\n  return React.useCallback((): Promise<string> => {\n    if (backupRoute) {\n      // TODO: look to remove this in the future to stop relying on backend annotation\n      // We already have our backup code's route, use it\n      return Promise.resolve(backupRoute);\n    }\n\n    if (!routeName) {\n      // At time of call, if we do not have a route name, we are too late\n      // This should *never* happen, somehow the modal got here before the Notebook had a name!?\n      /* eslint-disable-next-line no-console */\n      console.error('Unable to determine why there was no route -- notebook did not have a name');\n      return Promise.reject();\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      const call = (resolve, reject) => {\n        getRoute(notebookNamespace, routeName)\n          .then((route) => {\n            resolve(`https://${route.spec.host}/notebook/${notebookNamespace}/${routeName}`);\n          })\n          .catch((e) => {\n            if (backupRoute) {\n              resolve(backupRoute);\n              return;\n            }\n            /* eslint-disable-next-line no-console */\n            console.warn('Unable to get the route. Re-polling.', e);\n            if (fetchCountRef.current <= 0) {\n              fetchCountRef.current--;\n              setTimeout(() => call(resolve, reject), 1000);\n            } else {\n              reject();\n            }\n          });\n      };\n\n      call(resolve, () => {\n        /* eslint-disable-next-line no-console */\n        console.error(\n          'Could not fetch route over several tries, See previous warnings for a history of why each failed call.',\n        );\n        reject();\n      });\n    });\n  }, [backupRoute, notebookNamespace, routeName]);\n};\n\nexport const getEventTimestamp = (event: K8sEvent): string =>\n  event.lastTimestamp || event.eventTime;\n\nconst filterEvents = (\n  allEvents: K8sEvent[],\n  lastActivity: Date,\n): [filterEvents: K8sEvent[], thisInstanceEvents: K8sEvent[], gracePeroid: boolean] => {\n  const thisInstanceEvents = allEvents.filter(\n    (event) => new Date(getEventTimestamp(event)) >= lastActivity,\n  );\n  if (thisInstanceEvents.length === 0) {\n    // Filtered out all of the events, exit early\n    return [[], [], false];\n  }\n\n  let filteredEvents = thisInstanceEvents;\n\n  const now = Date.now();\n  let gracePeriod = false;\n\n  // Ignore the rest of the filter logic if we pass 20 minutes\n  const maxCap = new Date(lastActivity).setMinutes(lastActivity.getMinutes() + 20);\n  if (now <= maxCap) {\n    // Haven't hit the cap yet, filter events for accepted scenarios\n    const infoEvents = filteredEvents.filter((event) => event.type === 'Normal');\n    const idleTime = new Date(lastActivity).setSeconds(lastActivity.getSeconds() + 30);\n    gracePeriod = idleTime - now > 0;\n\n    // Suppress the warnings when we are idling\n    if (gracePeriod) {\n      filteredEvents = infoEvents;\n    }\n\n    // If we are scaling up, we want to focus on that\n    const hasScaleUp = infoEvents.some((event) => event.reason === 'TriggeredScaleUp');\n    if (hasScaleUp) {\n      // Scaling up event is present -- look for issues with it\n      const hasScaleUpIssueIndex = thisInstanceEvents.findIndex(\n        (event) => event.reason === 'NotTriggerScaleUp',\n      );\n      if (hasScaleUpIssueIndex >= 0) {\n        // Has scale up issue, show that\n        filteredEvents = [thisInstanceEvents[hasScaleUpIssueIndex]];\n      } else {\n        // Haven't hit a failure in scale up, show just infos\n        filteredEvents = infoEvents;\n      }\n    }\n  }\n\n  return [filteredEvents, thisInstanceEvents, gracePeriod];\n};\n\nconst useLastActivity = (storeValue: boolean, annotationValue?: string): Date | null => {\n  const lastOpenActivity = React.useRef<Date | null>(null);\n\n  if (storeValue && annotationValue && !lastOpenActivity.current) {\n    lastOpenActivity.current = new Date(annotationValue);\n  } else if (!storeValue && lastOpenActivity.current) {\n    lastOpenActivity.current = null;\n  }\n\n  return lastOpenActivity.current;\n};\n\nexport const useNotebookStatus = (\n  spawnInProgress: boolean,\n  open: boolean,\n): [status: NotebookStatus | null, events: K8sEvent[]] => {\n  const { notebookNamespace } = useNamespaces();\n  const {\n    currentUserNotebook: notebook,\n    currentUserNotebookIsRunning: isNotebookRunning,\n    currentUserNotebookPodUID,\n  } = React.useContext(NotebookControllerContext);\n\n  const events = useWatchNotebookEvents(\n    notebookNamespace,\n    currentUserNotebookPodUID,\n    spawnInProgress && !isNotebookRunning,\n  ).filter(\n    (evt) =>\n      // Note: This looks redundant but is useful -- our state is stale when a new pod starts; this cleans that up\n      // This is not ideal, but the alternative is expose a reset function & thread it up to the stop call\n      // This is old code and needs to be removed in time, this will do for now.\n      evt.involvedObject.uid === currentUserNotebookPodUID,\n  );\n\n  const lastActivity = useLastActivity(\n    open,\n    notebook?.metadata.annotations?.['notebooks.kubeflow.org/last-activity'],\n  );\n  if (!lastActivity) {\n    // Notebook not started, we don't have a filter time, ignore\n    return [null, []];\n  }\n\n  const [filteredEvents, thisInstanceEvents, gracePeriod] = filterEvents(events, lastActivity);\n  if (filteredEvents.length === 0) {\n    return [null, thisInstanceEvents];\n  }\n\n  // Parse the last event\n  let percentile = 0;\n  let status: EventStatus = EventStatus.IN_PROGRESS;\n  const lastItem = filteredEvents[filteredEvents.length - 1];\n  let currentEvent = '';\n  if (lastItem.message.includes('oauth-proxy')) {\n    switch (lastItem.reason) {\n      case 'Pulling': {\n        currentEvent = 'Pulling oauth proxy';\n        percentile = 72;\n        break;\n      }\n      case 'Pulled': {\n        currentEvent = 'Oauth proxy pulled';\n        percentile = 80;\n        break;\n      }\n      case 'Created': {\n        currentEvent = 'Oauth proxy container created';\n        percentile = 88;\n        break;\n      }\n      case 'Started': {\n        currentEvent = 'Oauth proxy container started';\n        percentile = 96;\n        break;\n      }\n      case 'Killing': {\n        currentEvent = 'Stopping container oauth-proxy';\n        status = EventStatus.WARNING;\n        break;\n      }\n      default: {\n        if (lastItem.type === 'Warning') {\n          currentEvent = 'Issue creating oauth proxy container';\n          status = EventStatus.WARNING;\n        }\n      }\n    }\n  } else {\n    switch (lastItem.reason) {\n      case 'SuccessfulCreate': {\n        currentEvent = 'Pod created';\n        percentile = 8;\n        break;\n      }\n      case 'Scheduled': {\n        currentEvent = 'Pod assigned';\n        percentile = 16;\n        break;\n      }\n      case 'SuccessfulAttachVolume': {\n        currentEvent = 'PVC attached';\n        percentile = 24;\n        break;\n      }\n      case 'AddedInterface': {\n        currentEvent = 'Interface added';\n        percentile = 32;\n        break;\n      }\n      case 'Pulling': {\n        currentEvent = 'Pulling notebook image';\n        percentile = 40;\n        break;\n      }\n      case 'Pulled': {\n        currentEvent = 'Notebook image pulled';\n        percentile = 48;\n        break;\n      }\n      case 'Created': {\n        currentEvent = 'Notebook container created';\n        percentile = 56;\n        break;\n      }\n      case 'Started': {\n        currentEvent = 'Notebook container started';\n        percentile = 64;\n        break;\n      }\n      case 'NotTriggerScaleUp':\n        currentEvent = 'Failed to scale-up';\n        status = EventStatus.ERROR;\n        break;\n      case 'TriggeredScaleUp': {\n        currentEvent = 'Pod triggered scale-up';\n        status = EventStatus.INFO;\n        break;\n      }\n      default: {\n        if (!gracePeriod && lastItem.reason === 'FailedScheduling') {\n          currentEvent = 'Insufficient resources to start';\n          status = EventStatus.ERROR;\n        } else if (lastItem.type === 'Warning') {\n          currentEvent = 'Issue creating notebook container';\n          status = EventStatus.WARNING;\n        }\n      }\n    }\n  }\n\n  return [\n    {\n      percentile,\n      currentEvent,\n      currentEventReason: lastItem.reason,\n      currentEventDescription: lastItem.message,\n      currentStatus: status,\n    },\n    thisInstanceEvents,\n  ];\n};\n\nexport const useCheckJupyterEnabled = (): boolean => {\n  const { dashboardConfig } = useAppContext();\n  return dashboardConfig.spec.notebookController?.enabled !== false;\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/number.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/quickStartUtils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/router.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/segmentIOUtils.tsx",["3455","3456","3457"],[],"import { TrackingEventProperties } from '~/types';\nimport { DEV_MODE } from './const';\n\nexport const fireTrackingEvent = (\n  eventType: string,\n  properties?: TrackingEventProperties,\n): void => {\n  const clusterID = window.clusterID ?? '';\n  if (DEV_MODE) {\n    /* eslint-disable-next-line no-console */\n    console.log(\n      `Telemetry event triggered: ${eventType}${\n        properties ? ` - ${JSON.stringify(properties)}` : ''\n      }`,\n    );\n  } else {\n    if (window.analytics) {\n      switch (eventType) {\n        case 'identify':\n          window.analytics.identify(properties?.anonymousID, { clusterID });\n          break;\n        case 'page':\n          window.analytics.page(undefined, { clusterID });\n          break;\n        default:\n          window.analytics.track(eventType, { ...properties, clusterID });\n      }\n    }\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const initSegment = async (props) => {\n  const { segmentKey, username, enabled } = props;\n  const analytics = (window.analytics = window.analytics || []);\n  if (analytics.initialize) {\n    return;\n  }\n  if (analytics.invoked) {\n    /* eslint-disable-next-line no-console */\n    window.console && console.error && console.error('Segment snippet included twice.');\n  } else {\n    analytics.invoked = true;\n    analytics.methods = [\n      'trackSubmit',\n      'trackClick',\n      'trackLink',\n      'trackForm',\n      'pageview',\n      'identify',\n      'reset',\n      'group',\n      'track',\n      'ready',\n      'alias',\n      'debug',\n      'page',\n      'once',\n      'off',\n      'on',\n      'addSourceMiddleware',\n      'addIntegrationMiddleware',\n      'setAnonymousId',\n      'addDestinationMiddleware',\n    ];\n    analytics.factory =\n      (e: string) =>\n      (...t) => {\n        t.unshift(e);\n        analytics.push(t);\n        return analytics;\n      };\n    for (let e = 0; e < analytics.methods.length; e++) {\n      const key = analytics.methods[e];\n      analytics[key] = analytics.factory(key);\n    }\n    analytics.load = (key: string, e: Event) => {\n      const t = document.createElement('script');\n      t.type = 'text/javascript';\n      t.async = true;\n      t.src =\n        'https://cdn.segment.com/analytics.js/v1/' + encodeURIComponent(key) + '/analytics.min.js';\n      const n = document.getElementsByTagName('script')[0];\n      if (n.parentNode) {\n        n.parentNode.insertBefore(t, n);\n      }\n      analytics._loadOptions = e;\n    };\n    analytics.SNIPPET_VERSION = '4.13.1';\n    if (segmentKey && enabled) {\n      analytics.load(segmentKey);\n    }\n    const anonymousIDBuffer = await crypto.subtle.digest(\n      'SHA-1',\n      new TextEncoder().encode(username),\n    );\n    const anonymousIDArray = Array.from(new Uint8Array(anonymousIDBuffer));\n    const anonymousID = anonymousIDArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n    fireTrackingEvent('identify', { anonymousID });\n    fireTrackingEvent('page');\n  }\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/string.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/time.ts",["3458"],[],"const printAgo = (time: number, unit: string) => `${time} ${unit}${time > 1 ? 's' : ''} ago`;\nconst printIn = (time: number, unit: string) => `in ${time} ${unit}${time > 1 ? 's' : ''}`;\nconst leadZero = (v: number) => (v < 10 ? `0${v}` : `${v}`);\n\nexport const relativeDuration = (valueInMs: number): string => {\n  let seconds = Math.floor(valueInMs / 1000);\n\n  let minutes = 0;\n  if (seconds > 60) {\n    minutes = Math.floor(seconds / 60);\n    seconds %= 60;\n  }\n\n  return `${minutes}:${leadZero(seconds)}`;\n};\n\n/** As YYYY-MM-DD */\nexport const convertDateToSimpleDateString = (date?: Date): string | null => {\n  if (!date) {\n    return null;\n  }\n\n  return `${date.getUTCFullYear()}-${leadZero(date.getUTCMonth() + 1)}-${leadZero(\n    date.getUTCDate(),\n  )}`;\n};\n\n/** As HH:MM *M */\nexport const convertDateToTimeString = (date?: Date): string | null => {\n  if (!date) {\n    return null;\n  }\n\n  const hours = date.getHours();\n  const hoursIn12 = (hours >= 12 ? hours - 12 : hours) || 12;\n\n  return `${hoursIn12}:${leadZero(date.getMinutes())} ${hours >= 12 ? 'PM' : 'AM'}`;\n};\n\n/** The TimeField component can sometimes cause '6:00PM' instead of '6:00 PM' if the user edits directly */\nexport const ensureTimeFormat = (time: string): string | null => {\n  if (/\\s[AP]M/.test(time)) {\n    // Not a problem, return the value\n    return time;\n  }\n  const match = time.match(/(\\d{1,2}:\\d{2})\\s?([AP]M)/);\n  if (!match) {\n    return null;\n  }\n\n  return `${match[1]} ${match[2]}`;\n};\n\nexport const printSeconds = (seconds: number) => {\n  const timeBlocks = [\n    { unit: 'second', maxPer: 60 },\n    { unit: 'minute', maxPer: 60 },\n    { unit: 'hour', maxPer: 24 },\n    { unit: 'day', maxPer: Infinity },\n  ];\n  const handleSingle = (value: number, text: string) =>\n    `${value} ${value === 1 ? text : `${text}s`}`;\n\n  const [text] = timeBlocks.reduce<[displayText: string, remainingUnit: number]>(\n    (acc, timeBlock) => {\n      const [text, unit] = acc;\n      if (unit === 0) {\n        return acc;\n      }\n\n      let newUnit = unit;\n      let thisText = '';\n      if (newUnit >= timeBlock.maxPer) {\n        const remainder = newUnit % timeBlock.maxPer;\n        newUnit = Math.floor(unit / timeBlock.maxPer); // shift to the next unit\n\n        if (remainder !== 0) {\n          thisText = handleSingle(remainder, timeBlock.unit);\n        }\n      } else {\n        thisText = handleSingle(unit, timeBlock.unit);\n        newUnit = 0; // hit max, zero out the unit\n      }\n\n      if (!text) {\n        return [thisText, newUnit];\n      }\n\n      return [`${text}, ${thisText}`, newUnit];\n    },\n    ['', seconds],\n  );\n\n  return text;\n};\n\nexport const relativeTime = (current: number, previous: number): string => {\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n\n  if (isNaN(previous)) {\n    return 'Just now';\n  }\n\n  let elapsed = current - previous;\n  let shortPrintFn = printAgo;\n\n  if (elapsed < 0) {\n    elapsed *= -1;\n    shortPrintFn = printIn;\n  }\n\n  if (elapsed < msPerMinute) {\n    return 'Just now';\n  } else if (elapsed < msPerHour) {\n    return shortPrintFn(Math.round(elapsed / msPerMinute), 'minute');\n  } else if (elapsed < msPerDay) {\n    return shortPrintFn(Math.round(elapsed / msPerHour), 'hour');\n  } else if (elapsed < msPerMonth) {\n    return shortPrintFn(Math.round(elapsed / msPerDay), 'day');\n  } else if (elapsed < msPerYear) {\n    return shortPrintFn(Math.round(elapsed / msPerMonth), 'month');\n  }\n  const date = new Date(previous);\n\n  const month = date.getMonth();\n  let monthAsString = 'Jan';\n  if (month === 1) {\n    monthAsString = 'Feb';\n  } else if (month === 2) {\n    monthAsString = 'Mar';\n  } else if (month === 3) {\n    monthAsString = 'April';\n  } else if (month === 4) {\n    monthAsString = 'May';\n  } else if (month === 5) {\n    monthAsString = 'June';\n  } else if (month === 6) {\n    monthAsString = 'July';\n  } else if (month === 7) {\n    monthAsString = 'August';\n  } else if (month === 8) {\n    monthAsString = 'Sept';\n  } else if (month === 9) {\n    monthAsString = 'Oct';\n  } else if (month === 10) {\n    monthAsString = 'Nov';\n  } else if (month === 11) {\n    monthAsString = 'Dec';\n  }\n\n  return `${date.getDate()} ${monthAsString} ${date.getFullYear()}`;\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/tolerations.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useContextResourceData.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useDebounce.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useDeepCompareMemoize.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useDetectUser.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useDraggableTable.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useEnableApplication.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useEventListener.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useFetchState.ts",["3459"],[],"import * as React from 'react';\nimport { K8sAPIOptions } from '~/k8sTypes';\n\n/**\n * Allows \"I'm not ready\" rejections if you lack a lazy provided prop\n * e.g. Promise.reject(new NotReadyError('Do not have namespace'))\n */\nexport class NotReadyError extends Error {\n  constructor(reason: string) {\n    super(`Not ready yet. ${reason}`);\n    this.name = 'NotReadyError';\n  }\n}\n\n/**\n * Checks to see if it's a standard error handled by useStateFetch .catch block.\n */\nexport const isCommonStateError = (e: Error) => {\n  if (e.name === 'NotReadyError') {\n    // An escape hatch for callers to reject the call at this fetchCallbackPromise reference\n    // Re-compute your callback to re-trigger again\n    return true;\n  }\n  if (e.name == 'AbortError') {\n    // Abort errors are silent\n    return true;\n  }\n\n  return false;\n};\n\n/** Provided as a promise, so you can await a refresh before enabling buttons / closing modals.\n * Returns the successful value or nothing if the call was cancelled / didn't complete. */\nexport type FetchStateRefreshPromise<Type> = () => Promise<Type | undefined>;\n\n/** Return state */\nexport type FetchState<Type, Default extends Type = Type> = [\n  data: Type | Default,\n  loaded: boolean,\n  loadError: Error | undefined,\n  /** This promise should never throw to the .catch */\n  refresh: FetchStateRefreshPromise<Type>,\n];\n\ntype SetStateLazy<Type> = (lastState: Type) => Type;\nexport type AdHocUpdate<Type> = (updateLater: (updater: SetStateLazy<Type>) => void) => void;\n\n/**\n * All callbacks will receive a K8sAPIOptions, which includes a signal to provide to a RequestInit.\n * This will allow the call to be cancelled if the hook needs to unload. It is recommended that you\n * upgrade your API handlers to support this.\n */\ntype FetchStateCallbackPromiseReturn<Return> = (opts: K8sAPIOptions) => Return;\n\n/**\n * Standard usage. Your callback should return a Promise that resolves to your data.\n */\nexport type FetchStateCallbackPromise<Type> = FetchStateCallbackPromiseReturn<Promise<Type>>;\n\n/**\n * Advanced usage. If you have a need to include a lazy refresh state to your data, you can use this\n * functionality. It works on the lazy React.setState functionality.\n *\n * Note: When using, you're giving up immediate setState, so you'll want to call the setStateLater\n * function immediately to get back that functionality.\n *\n * Example:\n * ```\n * React.useCallback(() =>\n *   new Promise(() => {\n *     MyAPICall().then((...) =>\n *       resolve((setStateLater) => { // << providing a function instead of the value\n *         setStateLater({ ...someInitialData })\n *         // ...some time later, after more calls / in a callback / etc\n *         setStateLater((lastState) => ({ ...lastState, data: additionalData }))\n *       })\n *     )\n *   })\n * );\n * ```\n */\nexport type FetchStateCallbackPromiseAdHoc<Type> = FetchStateCallbackPromiseReturn<\n  Promise<AdHocUpdate<Type>>\n>;\n\ntype FetchOptions = {\n  /** To enable auto refresh */\n  refreshRate: number;\n  /**\n   * Makes your promise pure from the sense of if it changes you do not want the previous data. When\n   * you recompute your fetchCallbackPromise, do you want to drop the values stored? This will\n   * reset everything; result, loaded, & error state. Intended purpose is if your promise is keyed\n   * off of a value that if it changes you should drop all data as it's fundamentally a different\n   * thing - sharing old state is misleading.\n   *\n   * Note: Doing this could have undesired side effects. Consider your hook's dependents and the\n   * state of your data.\n   * Note: This is only read as initial value; changes do nothing.\n   */\n  initialPromisePurity: boolean;\n};\n\n/**\n * A boilerplate helper utility. Given a callback that returns a promise, it will store state and\n * handle refreshes on intervals as needed.\n *\n * Note: Your callback *should* support the opts property so the call can be cancelled.\n */\nconst useFetchState = <Type, Default extends Type = Type>(\n  /** React.useCallback result. */\n  fetchCallbackPromise: FetchStateCallbackPromise<Type> | FetchStateCallbackPromiseAdHoc<Type>,\n  /**\n   * A preferred default states - this is ignored after the first render\n   * Note: This is only read as initial value; changes do nothing.\n   */\n  initialDefaultState: Default,\n  /** Configurable features */\n  { refreshRate = 0, initialPromisePurity = false }: Partial<FetchOptions> = {},\n): FetchState<Type, Default> => {\n  const [result, setResult] = React.useState<Type | Default>(initialDefaultState);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined);\n  const abortCallbackRef = React.useRef<() => void>(() => undefined);\n  /** Setup on initial hook a singular reset function. DefaultState & resetDataOnNewPromise are initial render states. */\n  const cleanupRef = React.useRef(() => {\n    if (initialPromisePurity) {\n      setResult(initialDefaultState);\n      setLoaded(false);\n      setLoadError(undefined);\n    }\n  });\n\n  React.useEffect(() => {\n    cleanupRef.current();\n  }, [fetchCallbackPromise]);\n\n  const call = React.useCallback<() => [Promise<Type>, () => void]>(() => {\n    let alreadyAborted = false;\n    const abortController = new AbortController();\n\n    /** Note: this promise cannot \"catch\" beyond this instance -- unless a runtime error. */\n    const doRequest = () =>\n      fetchCallbackPromise({ signal: abortController.signal })\n        .then((r) => {\n          if (alreadyAborted) {\n            return;\n          }\n\n          if (r === undefined) {\n            // Undefined is an unacceptable response. If you want \"nothing\", pass `null` -- this is likely an API issue though.\n            // eslint-disable-next-line no-console\n            console.error(\n              'useFetchState Error: Got undefined back from a promise. This is likely an error with your call. Preventing setting.',\n            );\n            return;\n          }\n\n          setLoadError(undefined);\n          if (typeof r === 'function') {\n            r((setState: SetStateLazy<Type>) => {\n              if (alreadyAborted) {\n                return;\n              }\n\n              setResult(setState);\n              setLoaded(true);\n            });\n            return undefined;\n          }\n\n          setResult(r);\n          setLoaded(true);\n\n          return r;\n        })\n        .catch((e) => {\n          if (alreadyAborted) {\n            return;\n          }\n\n          if (isCommonStateError(e)) {\n            return;\n          }\n          setLoadError(e);\n        });\n\n    const unload = () => {\n      if (alreadyAborted) {\n        return;\n      }\n\n      alreadyAborted = true;\n      abortController.abort();\n    };\n\n    return [doRequest(), unload];\n  }, [fetchCallbackPromise]);\n\n  React.useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n\n    const callAndSave = () => {\n      const [, unload] = call();\n      abortCallbackRef.current = unload;\n    };\n    callAndSave();\n\n    if (refreshRate > 0) {\n      interval = setInterval(() => {\n        abortCallbackRef.current();\n        callAndSave();\n      }, refreshRate);\n    }\n\n    return () => {\n      clearInterval(interval);\n      abortCallbackRef.current();\n    };\n  }, [call, refreshRate]);\n\n  const refresh = React.useCallback<FetchStateRefreshPromise<Type>>(() => {\n    abortCallbackRef.current();\n    const [callPromise, unload] = call();\n    abortCallbackRef.current = unload;\n    return callPromise;\n  }, [call]);\n\n  return [result, loaded, loadError, refresh];\n};\n\nexport default useFetchState;\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useGenericObjectState.ts",["3460"],[],"import * as React from 'react';\nimport { UpdateObjectAtPropAndValue } from '~/pages/projects/types';\n\ntype GenericObjectState<T> = [\n  data: T,\n  setData: UpdateObjectAtPropAndValue<T>,\n  resetDefault: () => void,\n];\n\nconst useGenericObjectState = <T>(defaultData: T): GenericObjectState<T> => {\n  const [value, setValue] = React.useState<T>(defaultData);\n\n  const setPropValue = React.useCallback<UpdateObjectAtPropAndValue<T>>((propKey, propValue) => {\n    setValue((oldValue) => ({ ...oldValue, [propKey]: propValue }));\n  }, []);\n\n  const defaultDataRef = React.useRef(defaultData);\n  const resetToDefault = React.useCallback(() => {\n    setValue(defaultDataRef.current);\n  }, []);\n\n  return [value, setPropValue, resetToDefault];\n};\n\nexport default useGenericObjectState;\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useNotification.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useQueryParams.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useSegmentTracking.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useTrackHistory.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchBYONImages.tsx",["3461"],[],"import * as React from 'react';\nimport { fetchBYONImages } from '~/services/imagesService';\nimport { BYONImage } from '~/types';\nimport { POLL_INTERVAL } from './const';\n\nexport const useWatchBYONImages = (): {\n  images: BYONImage[];\n  loaded: boolean;\n  loadError: Error | undefined;\n  forceUpdate: () => void;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [images, setImages] = React.useState<BYONImage[]>([]);\n  const forceUpdate = () => {\n    setLoaded(false);\n    fetchBYONImages()\n      .then((data: BYONImage[]) => {\n        setLoaded(true);\n        setLoadError(undefined);\n        setImages(data);\n      })\n      .catch((e) => {\n        setLoadError(e);\n      });\n  };\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchImages = () => {\n      fetchBYONImages()\n        .then((data: BYONImage[]) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setImages(data);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchImages, POLL_INTERVAL);\n    };\n    watchImages();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when components are updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { images: images || [], loaded, loadError, forceUpdate };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchBuildStatus.tsx",["3462"],[],"import * as React from 'react';\nimport { List, ListItem, Stack, StackItem } from '@patternfly/react-core';\nimport { BUILD_PHASE, BuildStatus } from '~/types';\nimport { fetchBuildStatuses } from '~/services/buildsService';\nimport { addNotification } from '~/redux/actions/actions';\nimport { AppNotificationStatus } from '~/redux/types';\nimport { useAppDispatch } from '~/redux/hooks';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { POLL_INTERVAL } from './const';\n\nconst runningStatuses = [\n  BUILD_PHASE.new,\n  BUILD_PHASE.pending,\n  BUILD_PHASE.running,\n  BUILD_PHASE.cancelled,\n];\nconst failedStatuses = [BUILD_PHASE.failed];\n\nconst filterBuilds = (buildStatuses: BuildStatus[], filterStatuses: BUILD_PHASE[]): BuildStatus[] =>\n  buildStatuses.filter((buildStatus) => filterStatuses.includes(buildStatus.status));\n\nexport const useWatchBuildStatus = (): BuildStatus[] => {\n  const [statuses, setStatuses] = React.useState<BuildStatus[]>([]);\n  const prevBuildStatuses = React.useRef<BuildStatus[]>([]);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchBuildStatuses = () => {\n      fetchBuildStatuses()\n        .then((statuses: BuildStatus[]) => {\n          statuses.sort((a, b) => a.name.localeCompare(b.name));\n          setStatuses(statuses);\n        })\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        .catch(() => {});\n      watchHandle = setTimeout(watchBuildStatuses, POLL_INTERVAL);\n    };\n    watchBuildStatuses();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n  }, []);\n\n  const buildStatuses = useDeepCompareMemoize<BuildStatus[]>(statuses);\n\n  React.useEffect(() => {\n    if (!buildStatuses) {\n      return;\n    }\n    const wasNotStarted = filterBuilds(prevBuildStatuses.current, [BUILD_PHASE.none]);\n    const wasBuilding = filterBuilds(prevBuildStatuses.current, runningStatuses);\n    const wasFailed = filterBuilds(prevBuildStatuses.current, failedStatuses);\n    const notStarted = filterBuilds(buildStatuses, [BUILD_PHASE.none]);\n    const building = filterBuilds(buildStatuses, runningStatuses);\n    const failed = filterBuilds(buildStatuses, failedStatuses);\n    const complete = filterBuilds(buildStatuses, [BUILD_PHASE.complete]);\n\n    // Add notifications for new failures\n    if (failed.length > 0) {\n      failed.forEach((failedBuild) => {\n        if (!wasFailed.find((prevFailedBuild) => failedBuild.name === prevFailedBuild.name)) {\n          dispatch(\n            addNotification({\n              status: 'danger',\n              title: `Notebook image build ${failedBuild.name} failed.`,\n              timestamp: new Date(),\n            }),\n          );\n        }\n      });\n    }\n\n    // Add notifications for new not started\n    if (notStarted.length && !wasNotStarted.length) {\n      dispatch(\n        addNotification({\n          status: 'danger',\n          title: 'These notebook image builds have not started:',\n          message: (\n            <Stack hasGutter>\n              <StackItem>\n                <List>\n                  {notStarted.map((build) => (\n                    <ListItem key={build.name}>{build.name}</ListItem>\n                  ))}\n                </List>\n              </StackItem>\n              <StackItem>Contact your administrator to start the builds.</StackItem>\n            </Stack>\n          ),\n          timestamp: new Date(),\n        }),\n      );\n    }\n\n    // Add notification if builds are now running\n    if (building.length && !wasBuilding.length) {\n      dispatch(\n        addNotification({\n          status: 'info',\n          title: 'Notebook images are building.',\n          timestamp: new Date(),\n        }),\n      );\n    }\n\n    // Add notification if all builds are now complete\n    if (\n      complete.length &&\n      (wasBuilding.length || wasNotStarted.length) &&\n      !building.length &&\n      !notStarted.length\n    ) {\n      let status: AppNotificationStatus = 'success';\n      let message;\n      if (failed.length) {\n        status = complete.length ? 'warning' : 'danger';\n        message = (\n          <Stack hasGutter>\n            <StackItem>\n              {complete.length} of {failed.length + complete.length} builds completed successfully.\n            </StackItem>\n            <StackItem>\n              <List>\n                {failed.map((build) => (\n                  <ListItem key={build.name}>{build.name} build image failed.</ListItem>\n                ))}\n              </List>\n            </StackItem>\n            <StackItem>Contact your administrator to retry failed images.</StackItem>\n          </Stack>\n        );\n      }\n      dispatch(\n        addNotification({\n          status,\n          title: 'All notebook image builds are complete.',\n          message,\n          timestamp: new Date(),\n        }),\n      );\n    }\n\n    prevBuildStatuses.current = buildStatuses;\n  }, [buildStatuses, dispatch]);\n\n  return buildStatuses || [];\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchComponents.tsx",["3463"],[],"import * as React from 'react';\nimport { useAppSelector } from '~/redux/hooks';\nimport { fetchComponents } from '~/services/componentsServices';\nimport { OdhApplication } from '~/types';\nimport { POLL_INTERVAL } from './const';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\n\nexport const useWatchComponents = (\n  installed: boolean,\n): { components: OdhApplication[]; loaded: boolean; loadError: Error | undefined } => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [components, setComponents] = React.useState<OdhApplication[]>([]);\n  const forceUpdate = useAppSelector((state) => state.forceComponentsUpdate);\n  const initForce = React.useRef<number>(forceUpdate);\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchComponents = () => {\n      fetchComponents(installed)\n        .then((updatedComponents: OdhApplication[]) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setComponents(updatedComponents);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchComponents, POLL_INTERVAL);\n    };\n    watchComponents();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when components are updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [installed]);\n\n  React.useEffect(() => {\n    if (initForce.current !== forceUpdate) {\n      initForce.current = forceUpdate;\n      fetchComponents(installed)\n        .then((updatedComponents: OdhApplication[]) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setComponents(updatedComponents);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n    }\n  }, [forceUpdate, installed]);\n\n  const retComponents = useDeepCompareMemoize<OdhApplication[]>(components);\n\n  return { components: retComponents || [], loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchConsoleLinks.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchDocs.tsx",["3464"],[],"import * as React from 'react';\nimport { OdhDocument, OdhDocumentType } from '~/types';\nimport { fetchDocs } from '~/services/docsService';\nimport { POLL_INTERVAL } from './const';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\n\nexport const useWatchDocs = (\n  docType?: OdhDocumentType | 'getting-started',\n): {\n  docs: OdhDocument[];\n  loaded: boolean;\n  loadError: Error | undefined;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [docs, setDocs] = React.useState<OdhDocument[]>([]);\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchDocs = () => {\n      fetchDocs(docType)\n        .then((updatedDocs: OdhDocument[]) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setDocs(updatedDocs);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchDocs, POLL_INTERVAL);\n    };\n    watchDocs();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when docs are updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [docType]);\n\n  const retDocs = useDeepCompareMemoize<OdhDocument[]>(docs);\n\n  return { docs: retDocs, loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchGroups.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchImages.tsx",["3465"],[],"import * as React from 'react';\nimport { ImageInfo } from '~/types';\nimport { fetchImages } from '~/services/imagesService';\nimport { POLL_INTERVAL } from './const';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\n\nexport const useWatchImages = (): {\n  images: ImageInfo[];\n  loaded: boolean;\n  loadError: Error | undefined;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [images, setImages] = React.useState<ImageInfo[]>([]);\n\n  React.useEffect(() => {\n    let watchHandle;\n    let cancelled = false;\n    const watchImages = () => {\n      fetchImages()\n        .then((data: ImageInfo[]) => {\n          if (cancelled) {\n            return;\n          }\n          setLoaded(true);\n          setLoadError(undefined);\n          setImages(data);\n        })\n        .catch((e) => {\n          if (cancelled) {\n            return;\n          }\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchImages, POLL_INTERVAL);\n    };\n    watchImages();\n\n    return () => {\n      cancelled = true;\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when components are updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const retImages = useDeepCompareMemoize<ImageInfo[]>(images);\n\n  return { images: retImages, loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchNotebookEvents.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchNotebooksForUsers.tsx",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchQuickStarts.tsx",["3466"],[],"import * as React from 'react';\nimport { QuickStart } from '@patternfly/quickstarts';\nimport { fetchQuickStarts } from '~/services/quickStartsService';\nimport { POLL_INTERVAL } from './const';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\n\nexport const useWatchQuickStarts = (): {\n  quickStarts: QuickStart[];\n  loaded: boolean;\n  loadError: Error | undefined;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [quickStarts, setQuickStarts] = React.useState<QuickStart[]>([]);\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchQuickStarts = () => {\n      fetchQuickStarts()\n        .then((updatedQuickStarts: QuickStart[]) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setQuickStarts(updatedQuickStarts);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchQuickStarts, POLL_INTERVAL);\n    };\n    watchQuickStarts();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when components are updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const retQuickStarts = useDeepCompareMemoize<QuickStart[]>(quickStarts);\n\n  return { quickStarts: retQuickStarts, loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/useWatchSegmentKey.tsx",["3467"],[],"import * as React from 'react';\nimport { fetchSegmentKey } from '~/services/segmentKeyService';\nimport { ODHSegmentKey } from '~/types';\nimport { POLL_INTERVAL } from './const';\n\nexport const useWatchSegmentKey = (): {\n  segmentKey: string;\n  loaded: boolean;\n  loadError: Error | undefined;\n} => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState<Error>();\n  const [segmentKey, setSegmentKey] = React.useState('');\n\n  React.useEffect(() => {\n    let watchHandle;\n    const watchSegmentKey = () => {\n      fetchSegmentKey()\n        .then((updatedSegmentKey: ODHSegmentKey) => {\n          setLoaded(true);\n          setLoadError(undefined);\n          setSegmentKey(updatedSegmentKey.segmentKey);\n        })\n        .catch((e) => {\n          setLoadError(e);\n        });\n      watchHandle = setTimeout(watchSegmentKey, POLL_INTERVAL);\n    };\n    watchSegmentKey();\n\n    return () => {\n      if (watchHandle) {\n        clearTimeout(watchHandle);\n      }\n    };\n    // Don't update when segment-key is updated\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { segmentKey: segmentKey || '', loaded, loadError };\n};\n","/Users/jshandel/odh-dashboard/frontend/src/utilities/utils.ts",[],[],"/Users/jshandel/odh-dashboard/frontend/src/utilities/valueUnits.ts",["3468"],[],{"ruleId":null,"message":"3469","line":68,"column":5,"endLine":68,"endColumn":66,"severity":1,"nodeType":null},{"ruleId":null,"message":"3470","line":1,"column":1,"endLine":1,"endColumn":31,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":19,"column":1,"endLine":19,"endColumn":63,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":215,"column":7,"endLine":215,"endColumn":45,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":25,"column":1,"endLine":25,"endColumn":28,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":60,"column":5,"endLine":60,"endColumn":42,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":66,"column":5,"endLine":66,"endColumn":42,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":70,"column":7,"endLine":70,"endColumn":44,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":78,"column":5,"endLine":78,"endColumn":42,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":94,"column":11,"endLine":94,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":96,"column":11,"endLine":96,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":47,"column":7,"endLine":47,"endColumn":45,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":8,"column":14,"nodeType":null},{"ruleId":null,"message":"3469","line":47,"column":5,"endLine":47,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":64,"column":9,"endLine":64,"endColumn":47,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":48,"column":7,"endLine":48,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":2,"column":3,"endLine":2,"endColumn":44,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":35,"column":13,"endLine":35,"endColumn":54,"severity":1,"nodeType":null},{"ruleId":null,"message":"3470","line":27,"column":5,"endLine":27,"endColumn":36,"severity":1,"nodeType":null},{"ruleId":null,"message":"3473","line":43,"column":5,"endLine":43,"endColumn":35,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":43,"column":7,"endLine":43,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":100,"column":11,"endLine":100,"endColumn":52,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":120,"column":9,"endLine":120,"endColumn":50,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":18,"column":13,"nodeType":null},{"ruleId":null,"message":"3469","line":22,"column":11,"endLine":22,"endColumn":49,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":82,"column":13,"endLine":82,"endColumn":51,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":113,"column":15,"endLine":113,"endColumn":53,"severity":1,"nodeType":null},{"ruleId":null,"message":"3470","line":49,"column":3,"endLine":49,"endColumn":33,"severity":1,"nodeType":null},{"ruleId":null,"message":"3473","line":59,"column":3,"endLine":59,"endColumn":32,"severity":1,"nodeType":null},{"ruleId":null,"message":"3470","line":82,"column":3,"endLine":82,"endColumn":33,"severity":1,"nodeType":null},{"ruleId":null,"message":"3473","line":111,"column":3,"endLine":111,"endColumn":32,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":127,"column":7,"endLine":127,"endColumn":45,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":7,"column":10,"nodeType":null},{"ruleId":null,"message":"3469","line":66,"column":21,"endLine":66,"endColumn":58,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":40,"column":13,"endLine":40,"endColumn":51,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":25,"column":14,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":24,"column":14,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":84,"column":9,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":34,"column":12,"nodeType":null},{"ruleId":null,"message":"3469","line":27,"column":7,"endLine":27,"endColumn":45,"severity":1,"nodeType":null},{"ruleId":null,"message":"3470","line":58,"column":5,"endLine":58,"endColumn":35,"severity":1,"nodeType":null},{"ruleId":null,"message":"3473","line":79,"column":5,"endLine":79,"endColumn":34,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":16,"column":1,"endLine":16,"endColumn":62,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":24,"column":7,"endLine":24,"endColumn":68,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":16,"column":1,"endLine":16,"endColumn":69,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3474","line":419,"column":6,"nodeType":null},{"ruleId":null,"message":"3469","line":57,"column":5,"endLine":57,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":61,"column":5,"endLine":61,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":14,"column":9,"endLine":14,"endColumn":47,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":22,"column":7,"endLine":22,"endColumn":45,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":74,"column":5,"endLine":74,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":114,"column":5,"endLine":114,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":161,"column":5,"endLine":161,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":8,"column":13,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":8,"column":10,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":50,"column":6,"nodeType":null},{"ruleId":null,"message":"3472","line":39,"column":11,"endLine":39,"endColumn":52,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":7,"column":14,"nodeType":null},{"ruleId":null,"message":"3472","line":159,"column":5,"endLine":159,"endColumn":46,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":342,"column":21,"endLine":342,"endColumn":62,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":52,"column":15,"endLine":52,"endColumn":56,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":8,"column":10,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":13,"column":24,"nodeType":null},{"ruleId":null,"message":"3472","line":51,"column":9,"endLine":51,"endColumn":50,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":20,"column":13,"endLine":20,"endColumn":54,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":9,"column":13,"nodeType":null},{"ruleId":null,"message":"3472","line":33,"column":15,"endLine":33,"endColumn":56,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":72,"column":16,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":9,"column":8,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":13,"column":8,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":18,"column":17,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":10,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":21,"column":16,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":60,"column":16,"nodeType":null},{"ruleId":null,"message":"3472","line":182,"column":7,"endLine":182,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":159,"column":7,"endLine":159,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":12,"column":8,"nodeType":null},{"ruleId":null,"message":"3472","line":16,"column":9,"endLine":16,"endColumn":50,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":21,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":7,"column":16,"nodeType":null},{"ruleId":null,"message":"3469","line":5,"column":1,"endLine":5,"endColumn":28,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":29,"column":7,"endLine":29,"endColumn":48,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":318,"column":5,"endLine":318,"endColumn":67,"severity":1,"nodeType":null},{"ruleId":null,"message":"3475","line":612,"column":33,"endLine":612,"endColumn":55,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":251,"column":16,"nodeType":null},{"ruleId":null,"message":"3472","line":10,"column":5,"endLine":10,"endColumn":46,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":32,"column":1,"endLine":32,"endColumn":78,"severity":1,"nodeType":null},{"ruleId":null,"message":"3472","line":40,"column":5,"endLine":40,"endColumn":46,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":64,"column":47,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":38,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":5,"column":6,"nodeType":null},{"ruleId":null,"message":"3469","line":50,"column":5,"endLine":50,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":35,"column":9,"endLine":35,"endColumn":73,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":39,"column":5,"endLine":39,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":40,"column":5,"endLine":40,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":46,"column":5,"endLine":46,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":38,"column":5,"endLine":38,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"message":"3469","line":37,"column":5,"endLine":37,"endColumn":60,"severity":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"3471","line":26,"column":9,"nodeType":null},"'//eslint-disable-next-line' has no effect because you have 'noInlineConfig' setting in your config (BaseConfig).","'/*eslint-disable*/' has no effect because you have 'noInlineConfig' setting in your config (BaseConfig).","Parsing error: ',' expected.","'/*eslint-disable-next-line*/' has no effect because you have 'noInlineConfig' setting in your config (BaseConfig).","'/*eslint-enable*/' has no effect because you have 'noInlineConfig' setting in your config (BaseConfig).","Parsing error: Expected corresponding JSX closing tag for 'TableComposable'.","'//eslint-disable-line' has no effect because you have 'noInlineConfig' setting in your config (BaseConfig)."]